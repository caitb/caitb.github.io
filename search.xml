<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Â∫îÁî® 7Ôºö‰∏ÄÊØõ‰∏çÊãî ‚Äî‚Äî ÊºèÊñóÈôêÊµÅ]]></title>
    <url>%2F2018%2F09%2F25%2FRedis%20%E6%B7%B1%E5%BA%A6%E5%8E%86%E9%99%A9%2F9%E5%BA%94%E7%94%A8%207%EF%BC%9A%E4%B8%80%E6%AF%9B%E4%B8%8D%E6%8B%94%20%E2%80%94%E2%80%94%20%E6%BC%8F%E6%96%97%E9%99%90%E6%B5%81%2F</url>
    <content type="text"><![CDATA[‰ΩúËÄÖÔºöÊéòÈáëÂ∞èÂÜå Êù•Ê∫êÔºöhttps://juejin.im/books ÊºèÊñóÈôêÊµÅÊòØÊúÄÂ∏∏Áî®ÁöÑÈôêÊµÅÊñπÊ≥ï‰πã‰∏ÄÔºåÈ°æÂêçÊÄù‰πâÔºåËøô‰∏™ÁÆóÊ≥ïÁöÑÁÅµÊÑüÊ∫ê‰∫éÊºèÊñóÔºàfunnelÔºâÁöÑÁªìÊûÑ„ÄÇ ÊºèÊñóÁöÑÂÆπÈáèÊòØÊúâÈôêÁöÑÔºåÂ¶ÇÊûúÂ∞ÜÊºèÂò¥Â†µ‰ΩèÔºåÁÑ∂Âêé‰∏ÄÁõ¥ÂæÄÈáåÈù¢ÁÅåÊ∞¥ÔºåÂÆÉÂ∞±‰ºöÂèòÊª°ÔºåÁõ¥Ëá≥ÂÜç‰πüË£Ö‰∏çËøõÂéª„ÄÇÂ¶ÇÊûúÂ∞ÜÊºèÂò¥ÊîæÂºÄÔºåÊ∞¥Â∞±‰ºöÂæÄ‰∏ãÊµÅÔºåÊµÅËµ∞‰∏ÄÈÉ®ÂàÜ‰πãÂêéÔºåÂ∞±ÂèàÂèØ‰ª•ÁªßÁª≠ÂæÄÈáåÈù¢ÁÅåÊ∞¥„ÄÇÂ¶ÇÊûúÊºèÂò¥ÊµÅÊ∞¥ÁöÑÈÄüÁéáÂ§ß‰∫éÁÅåÊ∞¥ÁöÑÈÄüÁéáÔºåÈÇ£‰πàÊºèÊñóÊ∞∏ËøúÈÉΩË£Ö‰∏çÊª°„ÄÇÂ¶ÇÊûúÊºèÂò¥ÊµÅÊ∞¥ÈÄüÁéáÂ∞è‰∫éÁÅåÊ∞¥ÁöÑÈÄüÁéáÔºåÈÇ£‰πà‰∏ÄÊó¶ÊºèÊñóÊª°‰∫ÜÔºåÁÅåÊ∞¥Â∞±ÈúÄË¶ÅÊöÇÂÅúÂπ∂Á≠âÂæÖÊºèÊñóËÖæÁ©∫„ÄÇ ÊâÄ‰ª•ÔºåÊºèÊñóÁöÑÂâ©‰ΩôÁ©∫Èó¥Â∞±‰ª£Ë°®ÁùÄÂΩìÂâçË°å‰∏∫ÂèØ‰ª•ÊåÅÁª≠ËøõË°åÁöÑÊï∞ÈáèÔºåÊºèÂò¥ÁöÑÊµÅÊ∞¥ÈÄüÁéá‰ª£Ë°®ÁùÄÁ≥ªÁªüÂÖÅËÆ∏ËØ•Ë°å‰∏∫ÁöÑÊúÄÂ§ßÈ¢ëÁéá„ÄÇ‰∏ãÈù¢Êàë‰ª¨‰ΩøÁî®‰ª£Á†ÅÊù•ÊèèËø∞ÂçïÊú∫ÊºèÊñóÁÆóÊ≥ï„ÄÇ 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647# coding: utf8import timeclass Funnel(object): def __init__(self, capacity, leaking_rate): self.capacity = capacity # ÊºèÊñóÂÆπÈáè self.leaking_rate = leaking_rate # ÊºèÂò¥ÊµÅÊ∞¥ÈÄüÁéá self.left_quota = capacity # ÊºèÊñóÂâ©‰ΩôÁ©∫Èó¥ self.leaking_ts = time.time() # ‰∏ä‰∏ÄÊ¨°ÊºèÊ∞¥Êó∂Èó¥ def make_space(self): now_ts = time.time() delta_ts = now_ts - self.leaking_ts # Ë∑ùÁ¶ª‰∏ä‰∏ÄÊ¨°ÊºèÊ∞¥ËøáÂéª‰∫ÜÂ§ö‰πÖ delta_quota = delta_ts * self.leaking_rate # ÂèàÂèØ‰ª•ËÖæÂá∫‰∏çÂ∞ëÁ©∫Èó¥‰∫Ü if delta_quota &lt; 1: # ËÖæÁöÑÁ©∫Èó¥Â§™Â∞ëÔºåÈÇ£Â∞±Á≠â‰∏ãÊ¨°Âêß return self.left_quota += delta_quota # Â¢ûÂä†Ââ©‰ΩôÁ©∫Èó¥ self.leaking_ts = now_ts # ËÆ∞ÂΩïÊºèÊ∞¥Êó∂Èó¥ if self.left_quota &gt; self.capacity: # Ââ©‰ΩôÁ©∫Èó¥‰∏çÂæóÈ´ò‰∫éÂÆπÈáè self.left_quota = self.capacity def watering(self, quota): self.make_space() if self.left_quota &gt;= quota: # Âà§Êñ≠Ââ©‰ΩôÁ©∫Èó¥ÊòØÂê¶Ë∂≥Â§ü self.left_quota -= quota return True return Falsefunnels = &#123;&#125; # ÊâÄÊúâÁöÑÊºèÊñó# capacity ÊºèÊñóÂÆπÈáè# leaking_rate ÊºèÂò¥ÊµÅÊ∞¥ÈÄüÁéá quota/sdef is_action_allowed( user_id, action_key, capacity, leaking_rate): key = '%s:%s' % (user_id, action_key) funnel = funnels.get(key) if not funnel: funnel = Funnel(capacity, leaking_rate) funnels[key] = funnel return funnel.watering(1)for i in range(20): print is_action_allowed('laoqian', 'reply', 15, 0.5) ÂÜçÊèê‰æõ‰∏Ä‰∏™ Java ÁâàÊú¨ÁöÑÔºö 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556public class FunnelRateLimiter &#123; static class Funnel &#123; int capacity; float leakingRate; int leftQuota; long leakingTs; public Funnel(int capacity, float leakingRate) &#123; this.capacity = capacity; this.leakingRate = leakingRate; this.leftQuota = capacity; this.leakingTs = System.currentTimeMillis(); &#125; void makeSpace() &#123; long nowTs = System.currentTimeMillis(); long deltaTs = nowTs - leakingTs; int deltaQuota = (int) (deltaTs * leakingRate); if (deltaQuota &lt; 0) &#123; // Èó¥ÈöîÊó∂Èó¥Â§™ÈïøÔºåÊï¥Êï∞Êï∞Â≠óËøáÂ§ßÊ∫¢Âá∫ this.leftQuota = capacity; this.leakingTs = nowTs; return; &#125; if (deltaQuota &lt; 1) &#123; // ËÖæÂá∫Á©∫Èó¥Â§™Â∞èÔºåÊúÄÂ∞èÂçï‰ΩçÊòØ1 return; &#125; this.leftQuota += deltaQuota; this.leakingTs = nowTs; if (this.leftQuota &gt; this.capacity) &#123; this.leftQuota = this.capacity; &#125; &#125; boolean watering(int quota) &#123; makeSpace(); if (this.leftQuota &gt;= quota) &#123; this.leftQuota -= quota; return true; &#125; return false; &#125; &#125; private Map&lt;String, Funnel&gt; funnels = new HashMap&lt;&gt;(); public boolean isActionAllowed(String userId, String actionKey, int capacity, float leakingRate) &#123; String key = String.format("%s:%s", userId, actionKey); Funnel funnel = funnels.get(key); if (funnel == null) &#123; funnel = new Funnel(capacity, leakingRate); funnels.put(key, funnel); &#125; return funnel.watering(1); // ÈúÄË¶Å1‰∏™quota &#125;&#125; Funnel ÂØπË±°ÁöÑ make_space ÊñπÊ≥ïÊòØÊºèÊñóÁÆóÊ≥ïÁöÑÊ†∏ÂøÉÔºåÂÖ∂Âú®ÊØèÊ¨°ÁÅåÊ∞¥ÂâçÈÉΩ‰ºöË¢´Ë∞ÉÁî®‰ª•Ëß¶ÂèëÊºèÊ∞¥ÔºåÁªôÊºèÊñóËÖæÂá∫Á©∫Èó¥Êù•„ÄÇËÉΩËÖæÂá∫Â§öÂ∞ëÁ©∫Èó¥ÂèñÂÜ≥‰∫éËøáÂéª‰∫ÜÂ§ö‰πÖ‰ª•ÂèäÊµÅÊ∞¥ÁöÑÈÄüÁéá„ÄÇFunnel ÂØπË±°Âç†ÊçÆÁöÑÁ©∫Èó¥Â§ßÂ∞è‰∏çÂÜçÂíåË°å‰∏∫ÁöÑÈ¢ëÁéáÊàêÊ≠£ÊØîÔºåÂÆÉÁöÑÁ©∫Èó¥Âç†Áî®ÊòØ‰∏Ä‰∏™Â∏∏Èáè„ÄÇ ÈóÆÈ¢òÊù•‰∫ÜÔºåÂàÜÂ∏ÉÂºèÁöÑÊºèÊñóÁÆóÊ≥ïËØ•Â¶Ç‰ΩïÂÆûÁé∞ÔºüËÉΩ‰∏çËÉΩ‰ΩøÁî® Redis ÁöÑÂü∫Á°ÄÊï∞ÊçÆÁªìÊûÑÊù•ÊêûÂÆöÔºü Êàë‰ª¨ËßÇÂØü Funnel ÂØπË±°ÁöÑÂá†‰∏™Â≠óÊÆµÔºåÊàë‰ª¨ÂèëÁé∞ÂèØ‰ª•Â∞Ü Funnel ÂØπË±°ÁöÑÂÜÖÂÆπÊåâÂ≠óÊÆµÂ≠òÂÇ®Âà∞‰∏Ä‰∏™ hash ÁªìÊûÑ‰∏≠ÔºåÁÅåÊ∞¥ÁöÑÊó∂ÂÄôÂ∞Ü hash ÁªìÊûÑÁöÑÂ≠óÊÆµÂèñÂá∫Êù•ËøõË°åÈÄªËæëËøêÁÆóÂêéÔºåÂÜçÂ∞ÜÊñ∞ÂÄºÂõûÂ°´Âà∞ hash ÁªìÊûÑ‰∏≠Â∞±ÂÆåÊàê‰∫Ü‰∏ÄÊ¨°Ë°å‰∏∫È¢ëÂ∫¶ÁöÑÊ£ÄÊµã„ÄÇ ‰ΩÜÊòØÊúâ‰∏™ÈóÆÈ¢òÔºåÊàë‰ª¨Êó†Ê≥ï‰øùËØÅÊï¥‰∏™ËøáÁ®ãÁöÑÂéüÂ≠êÊÄß„ÄÇ‰ªé hash ÁªìÊûÑ‰∏≠ÂèñÂÄºÔºåÁÑ∂ÂêéÂú®ÂÜÖÂ≠òÈáåËøêÁÆóÔºåÂÜçÂõûÂ°´Âà∞ hash ÁªìÊûÑÔºåËøô‰∏â‰∏™ËøáÁ®ãÊó†Ê≥ïÂéüÂ≠êÂåñÔºåÊÑèÂë≥ÁùÄÈúÄË¶ÅËøõË°åÈÄÇÂΩìÁöÑÂä†ÈîÅÊéßÂà∂„ÄÇËÄå‰∏ÄÊó¶Âä†ÈîÅÔºåÂ∞±ÊÑèÂë≥ÁùÄ‰ºöÊúâÂä†ÈîÅÂ§±Ë¥•ÔºåÂä†ÈîÅÂ§±Ë¥•Â∞±ÈúÄË¶ÅÈÄâÊã©ÈáçËØïÊàñËÄÖÊîæÂºÉ„ÄÇ Â¶ÇÊûúÈáçËØïÁöÑËØùÔºåÂ∞±‰ºöÂØºËá¥ÊÄßËÉΩ‰∏ãÈôç„ÄÇÂ¶ÇÊûúÊîæÂºÉÁöÑËØùÔºåÂ∞±‰ºöÂΩ±ÂìçÁî®Êà∑‰ΩìÈ™å„ÄÇÂêåÊó∂Ôºå‰ª£Á†ÅÁöÑÂ§çÊùÇÂ∫¶‰πüË∑üÁùÄÂçáÈ´òÂæàÂ§ö„ÄÇËøôÁúüÊòØ‰∏™Ëâ∞ÈöæÁöÑÈÄâÊã©ÔºåÊàë‰ª¨ËØ•Â¶Ç‰ΩïËß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢òÂë¢ÔºüRedis-Cell ÊïëÊòüÊù•‰∫ÜÔºÅ &nbsp; Redis-CellRedis 4.0 Êèê‰æõ‰∫Ü‰∏Ä‰∏™ÈôêÊµÅ Redis Ê®°ÂùóÔºåÂÆÉÂè´ redis-cell„ÄÇËØ•Ê®°Âùó‰πü‰ΩøÁî®‰∫ÜÊºèÊñóÁÆóÊ≥ïÔºåÂπ∂Êèê‰æõ‰∫ÜÂéüÂ≠êÁöÑÈôêÊµÅÊåá‰ª§„ÄÇÊúâ‰∫ÜËøô‰∏™Ê®°ÂùóÔºåÈôêÊµÅÈóÆÈ¢òÂ∞±ÈùûÂ∏∏ÁÆÄÂçï‰∫Ü„ÄÇ ËØ•Ê®°ÂùóÂè™Êúâ1Êù°Êåá‰ª§cl.throttleÔºåÂÆÉÁöÑÂèÇÊï∞ÂíåËøîÂõûÂÄºÈÉΩÁï•ÊòæÂ§çÊùÇÔºåÊé•‰∏ãÊù•ËÆ©Êàë‰ª¨Êù•ÁúãÁúãËøô‰∏™Êåá‰ª§ÂÖ∑‰ΩìËØ•Â¶Ç‰Ωï‰ΩøÁî®„ÄÇ 123456&gt; cl.throttle laoqian:reply 15 30 60 1 ‚ñ≤ ‚ñ≤ ‚ñ≤ ‚ñ≤ ‚ñ≤ | | | | ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ need 1 quota (ÂèØÈÄâÂèÇÊï∞ÔºåÈªòËÆ§ÂÄº‰πüÊòØ1) | | ‚îî‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ 30 operations / 60 seconds ËøôÊòØÊºèÊ∞¥ÈÄüÁéá | ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ 15 capacity ËøôÊòØÊºèÊñóÂÆπÈáè ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ key laoqian ‰∏äÈù¢Ëøô‰∏™Êåá‰ª§ÁöÑÊÑèÊÄùÊòØÂÖÅËÆ∏„ÄåÁî®Êà∑ËÄÅÈí±ÂõûÂ§çË°å‰∏∫„ÄçÁöÑÈ¢ëÁéá‰∏∫ÊØè 60s ÊúÄÂ§ö 30 Ê¨°(ÊºèÊ∞¥ÈÄüÁéá)ÔºåÊºèÊñóÁöÑÂàùÂßãÂÆπÈáè‰∏∫ 15Ôºå‰πüÂ∞±ÊòØËØ¥‰∏ÄÂºÄÂßãÂèØ‰ª•ËøûÁª≠ÂõûÂ§ç 15 ‰∏™Â∏ñÂ≠êÔºåÁÑ∂ÂêéÊâçÂºÄÂßãÂèóÊºèÊ∞¥ÈÄüÁéáÁöÑÂΩ±Âìç„ÄÇÊàë‰ª¨ÁúãÂà∞Ëøô‰∏™Êåá‰ª§‰∏≠ÊºèÊ∞¥ÈÄüÁéáÂèòÊàê‰∫Ü 2 ‰∏™ÂèÇÊï∞ÔºåÊõø‰ª£‰∫Ü‰πãÂâçÁöÑÂçï‰∏™ÊµÆÁÇπÊï∞„ÄÇÁî®‰∏§‰∏™ÂèÇÊï∞Áõ∏Èô§ÁöÑÁªìÊûúÊù•Ë°®ËææÊºèÊ∞¥ÈÄüÁéáÁõ∏ÂØπÂçï‰∏™ÊµÆÁÇπÊï∞Ë¶ÅÊõ¥Âä†Áõ¥ËßÇ‰∏Ä‰∫õ„ÄÇ 123456&gt; cl.throttle laoqian:reply 15 30 601) (integer) 0 # 0 Ë°®Á§∫ÂÖÅËÆ∏Ôºå1Ë°®Á§∫ÊãíÁªù2) (integer) 15 # ÊºèÊñóÂÆπÈáècapacity3) (integer) 14 # ÊºèÊñóÂâ©‰ΩôÁ©∫Èó¥left_quota4) (integer) -1 # Â¶ÇÊûúÊãíÁªù‰∫ÜÔºåÈúÄË¶ÅÂ§öÈïøÊó∂Èó¥ÂêéÂÜçËØï(ÊºèÊñóÊúâÁ©∫Èó¥‰∫ÜÔºåÂçï‰ΩçÁßí)5) (integer) 2 # Â§öÈïøÊó∂Èó¥ÂêéÔºåÊºèÊñóÂÆåÂÖ®Á©∫Âá∫Êù•(left_quota==capacityÔºåÂçï‰ΩçÁßí) Âú®ÊâßË°åÈôêÊµÅÊåá‰ª§Êó∂ÔºåÂ¶ÇÊûúË¢´ÊãíÁªù‰∫ÜÔºåÂ∞±ÈúÄË¶Å‰∏¢ÂºÉÊàñÈáçËØï„ÄÇcl.throttle Êåá‰ª§ËÄÉËôëÁöÑÈùûÂ∏∏Âë®Âà∞ÔºåËøûÈáçËØïÊó∂Èó¥ÈÉΩÂ∏Æ‰Ω†ÁÆóÂ•Ω‰∫ÜÔºåÁõ¥Êé•ÂèñËøîÂõûÁªìÊûúÊï∞ÁªÑÁöÑÁ¨¨Âõõ‰∏™ÂÄºËøõË°å sleep Âç≥ÂèØÔºåÂ¶ÇÊûú‰∏çÊÉ≥ÈòªÂ°ûÁ∫øÁ®ãÔºå‰πüÂèØ‰ª•ÂºÇÊ≠•ÂÆöÊó∂‰ªªÂä°Êù•ÈáçËØï„ÄÇ &nbsp; ÊÄùËÄÉÊºèÊñóÈôêÊµÅÊ®°ÂùóÈô§‰∫ÜÂ∫îÁî®‰∫é UGCÔºåËøòËÉΩÂ∫îÁî®‰∫éÂì™‰∫õÂú∞ÊñπÔºü &nbsp; ÊãìÂ±ïÈòÖËØª „ÄäRedis-Cell ‰ΩúËÄÖ Itamar Haber ÂÖ∂‰∫∫Ë∂£‰∫ã„Äã Redis-Cell ‰ΩúËÄÖ Itamar Haber ÁöÑ‰ªãÁªçÂæàÊúâÊÑèÊÄù‚Äî‚Äî‰∏Ä‰∏™„ÄåËá™Â∞Å„ÄçÁöÑ Redis ÊûÅÂÆ¢„ÄÇËøòÊúâÔºåCell Ëøô‰∏™Ê®°ÂùóÂ±ÖÁÑ∂ÊòØÁî® Rust ÁºñÂÜôÁöÑ„ÄÇ‚Äî‚Äî ÂéüÊù• Redis Ê®°ÂùóÂèØ‰ª•‰ΩøÁî® Rust ÁºñÂÜôÔºüÔºÅ ËøôÊÑèÂë≥ÁùÄÊàë‰ª¨‰∏çÁî®ÂéªÊêûÂè§ËÄÅÁöÑ C ËØ≠Ë®Ä‰∫Ü„ÄÇËÄÅÈí±Ë°®Á§∫Ë¶ÅÈáçÊñ∞ÊãæËµ∑ÊîæÂºÉÂæà‰πÖÁöÑ Rust ËØ≠Ë®Ä„ÄÇÂìéÔºåÂπ≤Á®ãÂ∫èÂëòËøô‰∏ÄË°åÔºåÁúüÊòØË¶ÅÊ¥ªÂà∞ËÄÅÔºåÂ≠¶Âà∞Ê≠ªÂïäÔºÅüò¢]]></content>
      <tags>
        <tag>ËΩ¨Âèë</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â∫îÁî® 6ÔºöÊñ≠Â∞æÊ±ÇÁîü ‚Äî‚Äî ÁÆÄÂçïÈôêÊµÅ]]></title>
    <url>%2F2018%2F09%2F25%2FRedis%20%E6%B7%B1%E5%BA%A6%E5%8E%86%E9%99%A9%2F8%E5%BA%94%E7%94%A8%206%EF%BC%9A%E6%96%AD%E5%B0%BE%E6%B1%82%E7%94%9F%20%E2%80%94%E2%80%94%20%E7%AE%80%E5%8D%95%E9%99%90%E6%B5%81%2F</url>
    <content type="text"><![CDATA[‰ΩúËÄÖÔºöÊéòÈáëÂ∞èÂÜå Êù•Ê∫êÔºöhttps://juejin.im/books ÈôêÊµÅÁÆóÊ≥ïÂú®ÂàÜÂ∏ÉÂºèÈ¢ÜÂüüÊòØ‰∏Ä‰∏™ÁªèÂ∏∏Ë¢´ÊèêËµ∑ÁöÑËØùÈ¢òÔºåÂΩìÁ≥ªÁªüÁöÑÂ§ÑÁêÜËÉΩÂäõÊúâÈôêÊó∂ÔºåÂ¶Ç‰ΩïÈòªÊ≠¢ËÆ°ÂàíÂ§ñÁöÑËØ∑Ê±ÇÁªßÁª≠ÂØπÁ≥ªÁªüÊñΩÂéãÔºåËøôÊòØ‰∏Ä‰∏™ÈúÄË¶ÅÈáçËßÜÁöÑÈóÆÈ¢ò„ÄÇËÄÅÈí±Âú®ËøôÈáåÁî® ‚ÄúÊñ≠Â∞æÊ±ÇÁîü‚Äù ÂΩ¢ÂÆπÈôêÊµÅËÉåÂêéÁöÑÊÄùÊÉ≥ÔºåÂΩìÁÑ∂ËøòÊúâÂæàÂ§öÊàêËØ≠‰πüË°®Ëææ‰∫ÜÁ±ª‰ººÁöÑÊÑèÊÄùÔºåÂ¶ÇÂºÉÂçí‰øùËΩ¶„ÄÅÂ£ÆÂ£´Êñ≠ËÖïÁ≠âÁ≠â„ÄÇ Èô§‰∫ÜÊéßÂà∂ÊµÅÈáèÔºåÈôêÊµÅËøòÊúâ‰∏Ä‰∏™Â∫îÁî®ÁõÆÁöÑÊòØÁî®‰∫éÊéßÂà∂Áî®Êà∑Ë°å‰∏∫ÔºåÈÅøÂÖçÂûÉÂúæËØ∑Ê±Ç„ÄÇÊØîÂ¶ÇÂú® UGC Á§æÂå∫ÔºåÁî®Êà∑ÁöÑÂèëÂ∏ñ„ÄÅÂõûÂ§ç„ÄÅÁÇπËµûÁ≠âË°å‰∏∫ÈÉΩË¶Å‰∏•Ê†ºÂèóÊéßÔºå‰∏ÄËà¨Ë¶Å‰∏•Ê†ºÈôêÂÆöÊüêË°å‰∏∫Âú®ËßÑÂÆöÊó∂Èó¥ÂÜÖÂÖÅËÆ∏ÁöÑÊ¨°Êï∞ÔºåË∂ÖËøá‰∫ÜÊ¨°Êï∞ÈÇ£Â∞±ÊòØÈùûÊ≥ïË°å‰∏∫„ÄÇÂØπÈùûÊ≥ïË°å‰∏∫Ôºå‰∏öÂä°ÂøÖÈ°ªËßÑÂÆöÈÄÇÂΩìÁöÑÊÉ©Â§ÑÁ≠ñÁï•„ÄÇ &nbsp; Â¶Ç‰Ωï‰ΩøÁî® Redis Êù•ÂÆûÁé∞ÁÆÄÂçïÈôêÊµÅÁ≠ñÁï•ÔºüÈ¶ñÂÖàÊàë‰ª¨Êù•Áúã‰∏Ä‰∏™Â∏∏ËßÅ ÁöÑÁÆÄÂçïÁöÑÈôêÊµÅÁ≠ñÁï•„ÄÇÁ≥ªÁªüË¶ÅÈôêÂÆöÁî®Êà∑ÁöÑÊüê‰∏™Ë°å‰∏∫Âú®ÊåáÂÆöÁöÑÊó∂Èó¥ÈáåÂè™ËÉΩÂÖÅËÆ∏ÂèëÁîü N Ê¨°ÔºåÂ¶Ç‰Ωï‰ΩøÁî® Redis ÁöÑÊï∞ÊçÆÁªìÊûÑÊù•ÂÆûÁé∞Ëøô‰∏™ÈôêÊµÅÁöÑÂäüËÉΩÔºü Êàë‰ª¨ÂÖàÂÆö‰πâËøô‰∏™Êé•Âè£ÔºåÁêÜËß£‰∫ÜËøô‰∏™Êé•Âè£ÁöÑÂÆö‰πâÔºåËØªËÄÖÂ∞±Â∫îËØ•ËÉΩÊòéÁôΩÊàë‰ª¨ÊúüÊúõËææÂà∞ÁöÑÂäüËÉΩ„ÄÇ 123456789# ÊåáÂÆöÁî®Êà∑ user_id ÁöÑÊüê‰∏™Ë°å‰∏∫ action_key Âú®ÁâπÂÆöÁöÑÊó∂Èó¥ÂÜÖ period Âè™ÂÖÅËÆ∏ÂèëÁîü‰∏ÄÂÆöÁöÑÊ¨°Êï∞ max_countdef is_action_allowed(user_id, action_key, period, max_count): return True# Ë∞ÉÁî®Ëøô‰∏™Êé•Âè£ , ‰∏ÄÂàÜÈíüÂÜÖÂè™ÂÖÅËÆ∏ÊúÄÂ§öÂõûÂ§ç 5 ‰∏™Â∏ñÂ≠êcan_reply = is_action_allowed("laoqian", "reply", 60, 5)if can_reply: do_reply()else: raise ActionThresholdOverflow() ÂÖà‰∏çË¶ÅÁªßÁª≠ÂæÄÂêéÁúãÔºåÊÉ≥ÊÉ≥Â¶ÇÊûúËÆ©‰Ω†Êù•ÂÆûÁé∞Ôºå‰Ω†ËØ•ÊÄé‰πàÂÅöÔºü &nbsp; Ëß£ÂÜ≥ÊñπÊ°àËøô‰∏™ÈôêÊµÅÈúÄÊ±Ç‰∏≠Â≠òÂú®‰∏Ä‰∏™ÊªëÂä®Êó∂Èó¥Á™óÂè£ÔºåÊÉ≥ÊÉ≥ zset Êï∞ÊçÆÁªìÊûÑÁöÑ score ÂÄºÔºåÊòØ‰∏çÊòØÂèØ‰ª•ÈÄöËøá score Êù•ÂúàÂá∫Ëøô‰∏™Êó∂Èó¥Á™óÂè£Êù•„ÄÇËÄå‰∏îÊàë‰ª¨Âè™ÈúÄË¶Å‰øùÁïôËøô‰∏™Êó∂Èó¥Á™óÂè£ÔºåÁ™óÂè£‰πãÂ§ñÁöÑÊï∞ÊçÆÈÉΩÂèØ‰ª•Á†çÊéâ„ÄÇÈÇ£Ëøô‰∏™ zset ÁöÑ value Â°´‰ªÄ‰πàÊØîËæÉÂêàÈÄÇÂë¢ÔºüÂÆÉÂè™ÈúÄË¶Å‰øùËØÅÂîØ‰∏ÄÊÄßÂç≥ÂèØÔºåÁî® uuid ‰ºöÊØîËæÉÊµ™Ë¥πÁ©∫Èó¥ÔºåÈÇ£Â∞±ÊîπÁî®ÊØ´ÁßíÊó∂Èó¥Êà≥Âêß„ÄÇ Â¶ÇÂõæÊâÄÁ§∫ÔºåÁî®‰∏Ä‰∏™ zset ÁªìÊûÑËÆ∞ÂΩïÁî®Êà∑ÁöÑË°å‰∏∫ÂéÜÂè≤ÔºåÊØè‰∏Ä‰∏™Ë°å‰∏∫ÈÉΩ‰ºö‰Ωú‰∏∫ zset ‰∏≠ÁöÑ‰∏Ä‰∏™ key ‰øùÂ≠ò‰∏ãÊù•„ÄÇÂêå‰∏Ä‰∏™Áî®Êà∑Âêå‰∏ÄÁßçË°å‰∏∫Áî®‰∏Ä‰∏™ zset ËÆ∞ÂΩï„ÄÇ ‰∏∫ËäÇÁúÅÂÜÖÂ≠òÔºåÊàë‰ª¨Âè™ÈúÄË¶Å‰øùÁïôÊó∂Èó¥Á™óÂè£ÂÜÖÁöÑË°å‰∏∫ËÆ∞ÂΩïÔºåÂêåÊó∂Â¶ÇÊûúÁî®Êà∑ÊòØÂÜ∑Áî®Êà∑ÔºåÊªëÂä®Êó∂Èó¥Á™óÂè£ÂÜÖÁöÑË°å‰∏∫ÊòØÁ©∫ËÆ∞ÂΩïÔºåÈÇ£‰πàËøô‰∏™ zset Â∞±ÂèØ‰ª•‰ªéÂÜÖÂ≠ò‰∏≠ÁßªÈô§Ôºå‰∏çÂÜçÂç†Áî®Á©∫Èó¥„ÄÇ ÈÄöËøáÁªüËÆ°ÊªëÂä®Á™óÂè£ÂÜÖÁöÑË°å‰∏∫Êï∞Èáè‰∏éÈòàÂÄº max_count ËøõË°åÊØîËæÉÂ∞±ÂèØ‰ª•ÂæóÂá∫ÂΩìÂâçÁöÑË°å‰∏∫ÊòØÂê¶ÂÖÅËÆ∏„ÄÇÁî®‰ª£Á†ÅË°®Á§∫Â¶Ç‰∏ãÔºö 12345678910111213141516171819202122232425262728# coding: utf8import timeimport redisclient = redis.StrictRedis()def is_action_allowed(user_id, action_key, period, max_count): key = 'hist:%s:%s' % (user_id, action_key) now_ts = int(time.time() * 1000) # ÊØ´ÁßíÊó∂Èó¥Êà≥ with client.pipeline() as pipe: # client ÊòØ StrictRedis ÂÆû‰æã # ËÆ∞ÂΩïË°å‰∏∫ pipe.zadd(key, now_ts, now_ts) # value Âíå score ÈÉΩ‰ΩøÁî®ÊØ´ÁßíÊó∂Èó¥Êà≥ # ÁßªÈô§Êó∂Èó¥Á™óÂè£‰πãÂâçÁöÑË°å‰∏∫ËÆ∞ÂΩïÔºåÂâ©‰∏ãÁöÑÈÉΩÊòØÊó∂Èó¥Á™óÂè£ÂÜÖÁöÑ pipe.zremrangebyscore(key, 0, now_ts - period * 1000) # Ëé∑ÂèñÁ™óÂè£ÂÜÖÁöÑË°å‰∏∫Êï∞Èáè pipe.zcard(key) # ËÆæÁΩÆ zset ËøáÊúüÊó∂Èó¥ÔºåÈÅøÂÖçÂÜ∑Áî®Êà∑ÊåÅÁª≠Âç†Áî®ÂÜÖÂ≠ò # ËøáÊúüÊó∂Èó¥Â∫îËØ•Á≠â‰∫éÊó∂Èó¥Á™óÂè£ÁöÑÈïøÂ∫¶ÔºåÂÜçÂ§öÂÆΩÈôê 1s pipe.expire(key, period + 1) # ÊâπÈáèÊâßË°å _, _, current_count, _ = pipe.execute() # ÊØîËæÉÊï∞ÈáèÊòØÂê¶Ë∂ÖÊ†á return current_count &lt;= max_countfor i in range(20): print is_action_allowed("laoqian", "reply", 60, 5) Java ÁâàÔºö 12345678910111213141516171819202122232425262728293031public class SimpleRateLimiter &#123; private Jedis jedis; public SimpleRateLimiter(Jedis jedis) &#123; this.jedis = jedis; &#125; public boolean isActionAllowed(String userId, String actionKey, int period, int maxCount) &#123; String key = String.format("hist:%s:%s", userId, actionKey); long nowTs = System.currentTimeMillis(); Pipeline pipe = jedis.pipelined(); pipe.multi(); pipe.zadd(key, nowTs, "" + nowTs); pipe.zremrangeByScore(key, 0, nowTs - period * 1000); Response&lt;Long&gt; count = pipe.zcard(key); pipe.expire(key, period + 1); pipe.exec(); pipe.close(); return count.get() &lt;= maxCount; &#125; public static void main(String[] args) &#123; Jedis jedis = new Jedis(); SimpleRateLimiter limiter = new SimpleRateLimiter(jedis); for(int i=0;i&lt;20;i++) &#123; System.out.println(limiter.isActionAllowed("laoqian", "reply", 60, 5)); &#125; &#125;&#125; ËøôÊÆµ‰ª£Á†ÅËøòÊòØÁï•ÊòæÂ§çÊùÇÔºåÈúÄË¶ÅËØªËÄÖËä±‰∏ÄÂÆöÁöÑÊó∂Èó¥Â•ΩÂ•ΩÂïÉ„ÄÇÂÆÉÁöÑÊï¥‰ΩìÊÄùË∑ØÂ∞±ÊòØÔºöÊØè‰∏Ä‰∏™Ë°å‰∏∫Âà∞Êù•Êó∂ÔºåÈÉΩÁª¥Êä§‰∏ÄÊ¨°Êó∂Èó¥Á™óÂè£„ÄÇÂ∞ÜÊó∂Èó¥Á™óÂè£Â§ñÁöÑËÆ∞ÂΩïÂÖ®ÈÉ®Ê∏ÖÁêÜÊéâÔºåÂè™‰øùÁïôÁ™óÂè£ÂÜÖÁöÑËÆ∞ÂΩï„ÄÇzset ÈõÜÂêà‰∏≠Âè™Êúâ score ÂÄºÈùûÂ∏∏ÈáçË¶ÅÔºåvalue ÂÄºÊ≤°ÊúâÁâπÂà´ÁöÑÊÑè‰πâÔºåÂè™ÈúÄË¶Å‰øùËØÅÂÆÉÊòØÂîØ‰∏ÄÁöÑÂ∞±ÂèØ‰ª•‰∫Ü„ÄÇ Âõ†‰∏∫ËøôÂá†‰∏™ËøûÁª≠ÁöÑ Redis Êìç‰ΩúÈÉΩÊòØÈíàÂØπÂêå‰∏Ä‰∏™ key ÁöÑÔºå‰ΩøÁî® pipeline ÂèØ‰ª•ÊòæËëóÊèêÂçá Redis Â≠òÂèñÊïàÁéá„ÄÇ‰ΩÜËøôÁßçÊñπÊ°à‰πüÊúâÁº∫ÁÇπÔºåÂõ†‰∏∫ÂÆÉË¶ÅËÆ∞ÂΩïÊó∂Èó¥Á™óÂè£ÂÜÖÊâÄÊúâÁöÑË°å‰∏∫ËÆ∞ÂΩïÔºåÂ¶ÇÊûúËøô‰∏™ÈáèÂæàÂ§ßÔºåÊØîÂ¶ÇÈôêÂÆö 60s ÂÜÖÊìç‰Ωú‰∏çÂæóË∂ÖËøá 100w Ê¨°ËøôÊ†∑ÁöÑÂèÇÊï∞ÔºåÂÆÉÊòØ‰∏çÈÄÇÂêàÂÅöËøôÊ†∑ÁöÑÈôêÊµÅÁöÑÔºåÂõ†‰∏∫‰ºöÊ∂àËÄóÂ§ßÈáèÁöÑÂ≠òÂÇ®Á©∫Èó¥„ÄÇ &nbsp; Â∞èÁªìÊú¨ËäÇ‰ªãÁªçÁöÑÊòØÈôêÊµÅÁ≠ñÁï•ÁöÑÁÆÄÂçïÂ∫îÁî®ÔºåÂÆÉ‰ªçÁÑ∂ÊúâËæÉÂ§ßÁöÑÊèêÂçáÁ©∫Èó¥ÔºåÈÄÇÁî®ÁöÑÂú∫ÊôØ‰πüÊúâÈôê„ÄÇ‰∏∫‰∫ÜËß£ÂÜ≥ÁÆÄÂçïÈôêÊµÅÁöÑÁº∫ÁÇπÔºå‰∏ã‰∏ÄËäÇÊàë‰ª¨Â∞ÜÂºïÂÖ•È´òÁ∫ßÈôêÊµÅÁÆóÊ≥ï‚Äî‚ÄîÊºèÊñóÈôêÊµÅ„ÄÇ]]></content>
      <tags>
        <tag>ËΩ¨Âèë</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â∫îÁî® 5ÔºöÂ±ÇÂ≥¶Âè†Â∂Ç ‚Äî‚Äî Â∏ÉÈöÜËøáÊª§Âô®]]></title>
    <url>%2F2018%2F09%2F25%2FRedis%20%E6%B7%B1%E5%BA%A6%E5%8E%86%E9%99%A9%2F7%E5%BA%94%E7%94%A8%205%EF%BC%9A%E5%B1%82%E5%B3%A6%E5%8F%A0%E5%B6%82%20%E2%80%94%E2%80%94%20%E5%B8%83%E9%9A%86%E8%BF%87%E6%BB%A4%E5%99%A8%2F</url>
    <content type="text"><![CDATA[‰ΩúËÄÖÔºöÊéòÈáëÂ∞èÂÜå Êù•Ê∫êÔºöhttps://juejin.im/books ‰∏ä‰∏ÄËäÇÊàë‰ª¨Â≠¶‰ºö‰∫Ü‰ΩøÁî® HyperLogLog Êï∞ÊçÆÁªìÊûÑÊù•ËøõË°å‰º∞Êï∞ÔºåÂÆÉÈùûÂ∏∏Êúâ‰ª∑ÂÄºÔºåÂèØ‰ª•Ëß£ÂÜ≥ÂæàÂ§öÁ≤æÁ°ÆÂ∫¶‰∏çÈ´òÁöÑÁªüËÆ°ÈúÄÊ±Ç„ÄÇ ‰ΩÜÊòØÂ¶ÇÊûúÊàë‰ª¨ÊÉ≥Áü•ÈÅìÊüê‰∏Ä‰∏™ÂÄºÊòØ‰∏çÊòØÂ∑≤ÁªèÂú® HyperLogLog ÁªìÊûÑÈáåÈù¢‰∫ÜÔºåÂÆÉÂ∞±Êó†ËÉΩ‰∏∫Âäõ‰∫ÜÔºåÂÆÉÂè™Êèê‰æõ‰∫Ü pfadd Âíå pfcount ÊñπÊ≥ïÔºåÊ≤°ÊúâÊèê‰æõ pfcontains ËøôÁßçÊñπÊ≥ï„ÄÇ ËÆ≤‰∏™‰ΩøÁî®Âú∫ÊôØÔºåÊØîÂ¶ÇÊàë‰ª¨Âú®‰ΩøÁî®Êñ∞ÈóªÂÆ¢Êà∑Á´ØÁúãÊñ∞ÈóªÊó∂ÔºåÂÆÉ‰ºöÁªôÊàë‰ª¨‰∏çÂÅúÂú∞Êé®ËçêÊñ∞ÁöÑÂÜÖÂÆπÔºåÂÆÉÊØèÊ¨°Êé®ËçêÊó∂Ë¶ÅÂéªÈáçÔºåÂéªÊéâÈÇ£‰∫õÂ∑≤ÁªèÁúãËøáÁöÑÂÜÖÂÆπ„ÄÇÈóÆÈ¢òÊù•‰∫ÜÔºåÊñ∞ÈóªÂÆ¢Êà∑Á´ØÊé®ËçêÁ≥ªÁªüÂ¶Ç‰ΩïÂÆûÁé∞Êé®ÈÄÅÂéªÈáçÁöÑÔºü ‰Ω†‰ºöÊÉ≥Âà∞ÊúçÂä°Âô®ËÆ∞ÂΩï‰∫ÜÁî®Êà∑ÁúãËøáÁöÑÊâÄÊúâÂéÜÂè≤ËÆ∞ÂΩïÔºåÂΩìÊé®ËçêÁ≥ªÁªüÊé®ËçêÊñ∞ÈóªÊó∂‰ºö‰ªéÊØè‰∏™Áî®Êà∑ÁöÑÂéÜÂè≤ËÆ∞ÂΩïÈáåËøõË°åÁ≠õÈÄâÔºåËøáÊª§ÊéâÈÇ£‰∫õÂ∑≤ÁªèÂ≠òÂú®ÁöÑËÆ∞ÂΩï„ÄÇÈóÆÈ¢òÊòØÂΩìÁî®Êà∑ÈáèÂæàÂ§ßÔºåÊØè‰∏™Áî®Êà∑ÁúãËøáÁöÑÊñ∞ÈóªÂèàÂæàÂ§öÁöÑÊÉÖÂÜµ‰∏ãÔºåËøôÁßçÊñπÂºèÔºåÊé®ËçêÁ≥ªÁªüÁöÑÂéªÈáçÂ∑•‰ΩúÂú®ÊÄßËÉΩ‰∏äË∑üÁöÑ‰∏ä‰πàÔºü ÂÆûÈôÖ‰∏äÔºåÂ¶ÇÊûúÂéÜÂè≤ËÆ∞ÂΩïÂ≠òÂÇ®Âú®ÂÖ≥Á≥ªÊï∞ÊçÆÂ∫ìÈáåÔºåÂéªÈáçÂ∞±ÈúÄË¶ÅÈ¢ëÁπÅÂú∞ÂØπÊï∞ÊçÆÂ∫ìËøõË°å exists Êü•ËØ¢ÔºåÂΩìÁ≥ªÁªüÂπ∂ÂèëÈáèÂæàÈ´òÊó∂ÔºåÊï∞ÊçÆÂ∫ìÊòØÂæàÈöæÊâõ‰ΩèÂéãÂäõÁöÑ„ÄÇ ‰Ω†ÂèØËÉΩÂèàÊÉ≥Âà∞‰∫ÜÁºìÂ≠òÔºå‰ΩÜÊòØÂ¶ÇÊ≠§Â§öÁöÑÂéÜÂè≤ËÆ∞ÂΩïÂÖ®ÈÉ®ÁºìÂ≠òËµ∑Êù•ÔºåÈÇ£ÂæóÊµ™Ë¥πÂ§öÂ§ßÂ≠òÂÇ®Á©∫Èó¥ÂïäÔºüËÄå‰∏îËøô‰∏™Â≠òÂÇ®Á©∫Èó¥ÊòØÈöèÁùÄÊó∂Èó¥Á∫øÊÄßÂ¢ûÈïøÔºå‰Ω†ÊíëÂæó‰Ωè‰∏Ä‰∏™ÊúàÔºå‰Ω†ËÉΩÊíëÂæó‰ΩèÂá†Âπ¥‰πàÔºü‰ΩÜÊòØ‰∏çÁºìÂ≠òÁöÑËØùÔºåÊÄßËÉΩÂèàË∑ü‰∏ç‰∏äÔºåËøôËØ•ÊÄé‰πàÂäûÔºü ËøôÊó∂ÔºåÂ∏ÉÈöÜËøáÊª§Âô® (Bloom Filter) Èó™‰∫ÆÁôªÂú∫‰∫ÜÔºåÂÆÉÂ∞±ÊòØ‰∏ìÈó®Áî®Êù•Ëß£ÂÜ≥ËøôÁßçÂéªÈáçÈóÆÈ¢òÁöÑ„ÄÇÂÆÉÂú®Ëµ∑Âà∞ÂéªÈáçÁöÑÂêåÊó∂ÔºåÂú®Á©∫Èó¥‰∏äËøòËÉΩËäÇÁúÅ 90% ‰ª•‰∏äÔºåÂè™ÊòØÁ®çÂæÆÊúâÈÇ£‰πàÁÇπ‰∏çÁ≤æÁ°ÆÔºå‰πüÂ∞±ÊòØÊúâ‰∏ÄÂÆöÁöÑËØØÂà§Ê¶ÇÁéá„ÄÇ &nbsp; Â∏ÉÈöÜËøáÊª§Âô®ÊòØ‰ªÄ‰πàÔºüÂ∏ÉÈöÜËøáÊª§Âô®ÂèØ‰ª•ÁêÜËß£‰∏∫‰∏Ä‰∏™‰∏çÊÄé‰πàÁ≤æÁ°ÆÁöÑ set ÁªìÊûÑÔºåÂΩì‰Ω†‰ΩøÁî®ÂÆÉÁöÑ contains ÊñπÊ≥ïÂà§Êñ≠Êüê‰∏™ÂØπË±°ÊòØÂê¶Â≠òÂú®Êó∂ÔºåÂÆÉÂèØËÉΩ‰ºöËØØÂà§„ÄÇ‰ΩÜÊòØÂ∏ÉÈöÜËøáÊª§Âô®‰πü‰∏çÊòØÁâπÂà´‰∏çÁ≤æÁ°ÆÔºåÂè™Ë¶ÅÂèÇÊï∞ËÆæÁΩÆÁöÑÂêàÁêÜÔºåÂÆÉÁöÑÁ≤æÁ°ÆÂ∫¶ÂèØ‰ª•ÊéßÂà∂ÁöÑÁõ∏ÂØπË∂≥Â§üÁ≤æÁ°ÆÔºåÂè™‰ºöÊúâÂ∞èÂ∞èÁöÑËØØÂà§Ê¶ÇÁéá„ÄÇ ÂΩìÂ∏ÉÈöÜËøáÊª§Âô®ËØ¥Êüê‰∏™ÂÄºÂ≠òÂú®Êó∂ÔºåËøô‰∏™ÂÄºÂèØËÉΩ‰∏çÂ≠òÂú®ÔºõÂΩìÂÆÉËØ¥‰∏çÂ≠òÂú®Êó∂ÔºåÈÇ£Â∞±ËÇØÂÆö‰∏çÂ≠òÂú®„ÄÇÊâì‰∏™ÊØîÊñπÔºåÂΩìÂÆÉËØ¥‰∏çËÆ§ËØÜ‰Ω†Êó∂ÔºåËÇØÂÆöÂ∞±‰∏çËÆ§ËØÜÔºõÂΩìÂÆÉËØ¥ËßÅËøá‰Ω†Êó∂ÔºåÂèØËÉΩÊ†πÊú¨Â∞±Ê≤°ËßÅËøáÈù¢Ôºå‰∏çËøáÂõ†‰∏∫‰Ω†ÁöÑËÑ∏Ë∑üÂÆÉËÆ§ËØÜÁöÑ‰∫∫‰∏≠ÊüêËÑ∏ÊØîËæÉÁõ∏‰ºº (Êüê‰∫õÁÜüËÑ∏ÁöÑÁ≥ªÊï∞ÁªÑÂêà)ÔºåÊâÄ‰ª•ËØØÂà§‰ª•ÂâçËßÅËøá‰Ω†„ÄÇ Â•óÂú®‰∏äÈù¢ÁöÑ‰ΩøÁî®Âú∫ÊôØ‰∏≠ÔºåÂ∏ÉÈöÜËøáÊª§Âô®ËÉΩÂáÜÁ°ÆËøáÊª§ÊéâÈÇ£‰∫õÂ∑≤ÁªèÁúãËøáÁöÑÂÜÖÂÆπÔºåÈÇ£‰∫õÊ≤°ÊúâÁúãËøáÁöÑÊñ∞ÂÜÖÂÆπÔºåÂÆÉ‰πü‰ºöËøáÊª§ÊéâÊûÅÂ∞è‰∏ÄÈÉ®ÂàÜ (ËØØÂà§)Ôºå‰ΩÜÊòØÁªùÂ§ßÂ§öÊï∞Êñ∞ÂÜÖÂÆπÂÆÉÈÉΩËÉΩÂáÜÁ°ÆËØÜÂà´„ÄÇËøôÊ†∑Â∞±ÂèØ‰ª•ÂÆåÂÖ®‰øùËØÅÊé®ËçêÁªôÁî®Êà∑ÁöÑÂÜÖÂÆπÈÉΩÊòØÊó†ÈáçÂ§çÁöÑ„ÄÇ &nbsp; Redis ‰∏≠ÁöÑÂ∏ÉÈöÜËøáÊª§Âô®Redis ÂÆòÊñπÊèê‰æõÁöÑÂ∏ÉÈöÜËøáÊª§Âô®Âà∞‰∫Ü Redis 4.0 Êèê‰æõ‰∫ÜÊèí‰ª∂ÂäüËÉΩ‰πãÂêéÊâçÊ≠£ÂºèÁôªÂú∫„ÄÇÂ∏ÉÈöÜËøáÊª§Âô®‰Ωú‰∏∫‰∏Ä‰∏™Êèí‰ª∂Âä†ËΩΩÂà∞ Redis Server ‰∏≠ÔºåÁªô Redis Êèê‰æõ‰∫ÜÂº∫Â§ßÁöÑÂ∏ÉÈöÜÂéªÈáçÂäüËÉΩ„ÄÇ ‰∏ãÈù¢Êàë‰ª¨Êù•‰ΩìÈ™å‰∏Ä‰∏ã Redis 4.0 ÁöÑÂ∏ÉÈöÜËøáÊª§Âô®Ôºå‰∏∫‰∫ÜÁúÅÂéªÁπÅÁêêÂÆâË£ÖËøáÁ®ãÔºåÊàë‰ª¨Áõ¥Êé•Áî® Docker Âêß„ÄÇ 123&gt; docker pull redislabs/rebloom # ÊãâÂèñÈïúÂÉè&gt; docker run -p6379:6379 redislabs/rebloom # ËøêË°åÂÆπÂô®&gt; redis-cli # ËøûÊé•ÂÆπÂô®‰∏≠ÁöÑ redis ÊúçÂä° Â¶ÇÊûú‰∏äÈù¢‰∏âÊù°Êåá‰ª§ÊâßË°åÊ≤°ÊúâÈóÆÈ¢òÔºå‰∏ãÈù¢Â∞±ÂèØ‰ª•‰ΩìÈ™åÂ∏ÉÈöÜËøáÊª§Âô®‰∫Ü„ÄÇ &nbsp; Â∏ÉÈöÜËøáÊª§Âô®Âü∫Êú¨‰ΩøÁî®Â∏ÉÈöÜËøáÊª§Âô®Êúâ‰∫å‰∏™Âü∫Êú¨Êåá‰ª§Ôºåbf.add Ê∑ªÂä†ÂÖÉÁ¥†Ôºåbf.exists Êü•ËØ¢ÂÖÉÁ¥†ÊòØÂê¶Â≠òÂú®ÔºåÂÆÉÁöÑÁî®Ê≥ïÂíå set ÈõÜÂêàÁöÑ sadd Âíå sismember Â∑Æ‰∏çÂ§ö„ÄÇÊ≥®ÊÑè bf.add Âè™ËÉΩ‰∏ÄÊ¨°Ê∑ªÂä†‰∏Ä‰∏™ÂÖÉÁ¥†ÔºåÂ¶ÇÊûúÊÉ≥Ë¶Å‰∏ÄÊ¨°Ê∑ªÂä†Â§ö‰∏™ÔºåÂ∞±ÈúÄË¶ÅÁî®Âà∞ bf.madd Êåá‰ª§„ÄÇÂêåÊ†∑Â¶ÇÊûúÈúÄË¶Å‰∏ÄÊ¨°Êü•ËØ¢Â§ö‰∏™ÂÖÉÁ¥†ÊòØÂê¶Â≠òÂú®ÔºåÂ∞±ÈúÄË¶ÅÁî®Âà∞ bf.mexists Êåá‰ª§„ÄÇ 1234567891011121314151617181920212223127.0.0.1:6379&gt; bf.add codehole user1(integer) 1127.0.0.1:6379&gt; bf.add codehole user2(integer) 1127.0.0.1:6379&gt; bf.add codehole user3(integer) 1127.0.0.1:6379&gt; bf.exists codehole user1(integer) 1127.0.0.1:6379&gt; bf.exists codehole user2(integer) 1127.0.0.1:6379&gt; bf.exists codehole user3(integer) 1127.0.0.1:6379&gt; bf.exists codehole user4(integer) 0127.0.0.1:6379&gt; bf.madd codehole user4 user5 user61) (integer) 12) (integer) 13) (integer) 1127.0.0.1:6379&gt; bf.mexists codehole user4 user5 user6 user71) (integer) 12) (integer) 13) (integer) 14) (integer) 0 ‰ºº‰πéÂæàÂáÜÁ°ÆÂïäÔºå‰∏Ä‰∏™ÈÉΩÊ≤°ËØØÂà§„ÄÇ‰∏ãÈù¢Êàë‰ª¨Áî® Python ËÑöÊú¨Âä†ÂÖ•ÂæàÂ§öÂÖÉÁ¥†ÔºåÁúãÁúãÂä†Âà∞Á¨¨Âá†‰∏™ÂÖÉÁ¥†ÁöÑÊó∂ÂÄôÔºåÂ∏ÉÈöÜËøáÊª§Âô®‰ºöÂá∫Áé∞ËØØÂà§„ÄÇ 12345678910111213# coding: utf-8import redisclient = redis.StrictRedis()client.delete("codehole")for i in range(100000): client.execute_command("bf.add", "codehole", "user%d" % i) ret = client.execute_command("bf.exists", "codehole", "user%d" % i) if ret == 0: print i break Java ÂÆ¢Êà∑Á´Ø Jedis-2.x Ê≤°ÊúâÊèê‰æõÊåá‰ª§Êâ©Â±ïÊú∫Âà∂ÔºåÊâÄ‰ª•‰Ω†Êó†Ê≥ïÁõ¥Êé•‰ΩøÁî® Jedis Êù•ËÆøÈóÆ Redis Module Êèê‰æõÁöÑ bf.xxx Êåá‰ª§„ÄÇRedisLabs Êèê‰æõ‰∫Ü‰∏Ä‰∏™ÂçïÁã¨ÁöÑÂåÖ JReBloomÔºå‰ΩÜÊòØÂÆÉÊòØÂü∫‰∫é Jedis-3.0ÔºåJedis-3.0 Ëøô‰∏™ÂåÖÁõÆÂâçËøòÊ≤°ÊúâËøõÂÖ• releaseÔºåÊ≤°ÊúâËøõÂÖ• maven ÁöÑ‰∏≠Â§Æ‰ªìÂ∫ìÔºåÈúÄË¶ÅÂú® Github ‰∏ä‰∏ãËΩΩ„ÄÇÂú®‰ΩøÁî®‰∏äÂæà‰∏çÊñπ‰æøÔºåÂ¶ÇÊûúÊÄïÈ∫ªÁÉ¶ÔºåËøòÂèØ‰ª•‰ΩøÁî® lettuceÔºåÂÆÉÊòØÂè¶‰∏Ä‰∏™ Redis ÁöÑÂÆ¢Êà∑Á´ØÔºåÁõ∏ÊØî Jedis ËÄåË®ÄÔºåÂÆÉÂæàÊó©Â∞±ÊîØÊåÅ‰∫ÜÊåá‰ª§Êâ©Â±ï„ÄÇ 12345678910111213141516171819public class BloomTest &#123; public static void main(String[] args) &#123; Client client = new Client(); client.delete("codehole"); for (int i = 0; i &lt; 100000; i++) &#123; client.add("codehole", "user" + i); boolean ret = client.exists("codehole", "user" + i); if (!ret) &#123; System.out.println(i); break; &#125; &#125; client.close(); &#125;&#125; ÊâßË°å‰∏äÈù¢ÁöÑ‰ª£Á†ÅÂêéÔºå‰Ω†‰ºöÂº†Â§ß‰∫ÜÂò¥Â∑¥ÂèëÁé∞Â±ÖÁÑ∂Ê≤°ÊúâËæìÂá∫ÔºåÂ°ûËøõÂéª‰∫Ü 100000 ‰∏™ÂÖÉÁ¥†ÔºåËøòÊòØÊ≤°ÊúâËØØÂà§ÔºåËøôÊòØÊÄé‰πàÂõû‰∫ãÔºüÂ¶ÇÊûú‰Ω†‰∏çÊ≠ªÂøÉÁöÑËØùÔºåÂèØ‰ª•Â∞ÜÊï∞Â≠óÂÜçÂä†‰∏Ä‰∏™ 0 ËØïËØïÔºå‰Ω†‰ºöÂèëÁé∞‰æùÁÑ∂Ê≤°ÊúâËØØÂà§„ÄÇ ÂéüÂõ†Â∞±Âú®‰∫éÂ∏ÉÈöÜËøáÊª§Âô®ÂØπ‰∫éÂ∑≤ÁªèËßÅËøáÁöÑÂÖÉÁ¥†ËÇØÂÆö‰∏ç‰ºöËØØÂà§ÔºåÂÆÉÂè™‰ºöËØØÂà§ÈÇ£‰∫õÊ≤°ËßÅËøáÁöÑÂÖÉÁ¥†„ÄÇÊâÄ‰ª•Êàë‰ª¨Ë¶ÅÁ®çÂæÆÊîπ‰∏Ä‰∏ã‰∏äÈù¢ÁöÑËÑöÊú¨Ôºå‰ΩøÁî® bf.exists ÂéªÊü•ÊâæÊ≤°ËßÅËøáÁöÑÂÖÉÁ¥†ÔºåÁúãÁúãÂÆÉÊòØ‰∏çÊòØ‰ª•‰∏∫Ëá™Â∑±ËßÅËøá‰∫Ü„ÄÇ 1234567891011121314# coding: utf-8import redisclient = redis.StrictRedis()client.delete("codehole")for i in range(100000): client.execute_command("bf.add", "codehole", "user%d" % i) # Ê≥®ÊÑè i+1ÔºåËøô‰∏™ÊòØÂΩìÂâçÂ∏ÉÈöÜËøáÊª§Âô®Ê≤°ËßÅËøáÁöÑ ret = client.execute_command("bf.exists", "codehole", "user%d" % (i+1)) if ret == 1: print i break Java Áâà: 12345678910111213141516171819public class BloomTest &#123; public static void main(String[] args) &#123; Client client = new Client(); client.delete("codehole"); for (int i = 0; i &lt; 100000; i++) &#123; client.add("codehole", "user" + i); boolean ret = client.exists("codehole", "user" + (i + 1)); if (ret) &#123; System.out.println(i); break; &#125; &#125; client.close(); &#125;&#125; ËøêË°åÂêéÔºåÊàë‰ª¨ÁúãÂà∞‰∫ÜËæìÂá∫ÊòØ 214Ôºå‰πüÂ∞±ÊòØÂà∞Á¨¨ 214 ÁöÑÊó∂ÂÄôÔºåÂÆÉÂá∫Áé∞‰∫ÜËØØÂà§„ÄÇ ÈÇ£Â¶Ç‰ΩïÊù•ÊµãÈáèËØØÂà§ÁéáÂë¢ÔºüÊàë‰ª¨ÂÖàÈöèÊú∫Âá∫‰∏ÄÂ†ÜÂ≠óÁ¨¶‰∏≤ÔºåÁÑ∂ÂêéÂàáÂàÜ‰∏∫ 2 ÁªÑÔºåÂ∞ÜÂÖ∂‰∏≠‰∏ÄÁªÑÂ°ûÂÖ•Â∏ÉÈöÜËøáÊª§Âô®ÔºåÁÑ∂ÂêéÂÜçÂà§Êñ≠Âè¶Â§ñ‰∏ÄÁªÑÁöÑÂ≠óÁ¨¶‰∏≤Â≠òÂú®‰∏éÂê¶ÔºåÂèñËØØÂà§ÁöÑ‰∏™Êï∞ÂíåÂ≠óÁ¨¶‰∏≤ÊÄªÈáè‰∏ÄÂçäÁöÑÁôæÂàÜÊØî‰Ωú‰∏∫ËØØÂà§Áéá„ÄÇ 12345678910111213141516171819202122232425262728293031323334# coding: utf-8import redisimport randomclient = redis.StrictRedis()CHARS = ''.join([chr(ord('a') + i) for i in range(26)])def random_string(n): chars = [] for i in range(n): idx = random.randint(0, len(CHARS) - 1) chars.append(CHARS[idx]) return ''.join(chars)users = list(set([random_string(64) for i in range(100000)]))print 'total users', len(users)users_train = users[:len(users)/2]users_test = users[len(users)/2:]client.delete("codehole")falses = 0for user in users_train: client.execute_command("bf.add", "codehole", user)print 'all trained'for user in users_test: ret = client.execute_command("bf.exists", "codehole", user) if ret == 1: falses += 1print falses, len(users_test) Java Áâà: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051public class BloomTest &#123; private String chars; &#123; StringBuilder builder = new StringBuilder(); for (int i = 0; i &lt; 26; i++) &#123; builder.append((char) ('a' + i)); &#125; chars = builder.toString(); &#125; private String randomString(int n) &#123; StringBuilder builder = new StringBuilder(); for (int i = 0; i &lt; n; i++) &#123; int idx = ThreadLocalRandom.current().nextInt(chars.length()); builder.append(chars.charAt(idx)); &#125; return builder.toString(); &#125; private List&lt;String&gt; randomUsers(int n) &#123; List&lt;String&gt; users = new ArrayList&lt;&gt;(); for (int i = 0; i &lt; 100000; i++) &#123; users.add(randomString(64)); &#125; return users; &#125; public static void main(String[] args) &#123; BloomTest bloomer = new BloomTest(); List&lt;String&gt; users = bloomer.randomUsers(100000); List&lt;String&gt; usersTrain = users.subList(0, users.size() / 2); List&lt;String&gt; usersTest = users.subList(users.size() / 2, users.size()); Client client = new Client(); client.delete("codehole"); for (String user : usersTrain) &#123; client.add("codehole", user); &#125; int falses = 0; for (String user : usersTest) &#123; boolean ret = client.exists("codehole", user); if (ret) &#123; falses++; &#125; &#125; System.out.printf("%d %d\n", falses, usersTest.size()); client.close(); &#125;&#125; ËøêË°å‰∏Ä‰∏ãÔºåÁ≠âÂæÖÂ§ßÁ∫¶‰∏ÄÂàÜÈíüÔºåËæìÂá∫: 123total users 100000all trained628 50000 ÂèØ‰ª•ÁúãÂà∞ËØØÂà§ÁéáÂ§ßÁ∫¶ 1% Â§öÁÇπ„ÄÇ‰Ω†‰πüËÆ∏‰ºöÈóÆËøô‰∏™ËØØÂà§ÁéáËøòÊòØÊúâÁÇπÈ´òÂïäÔºåÊúâÊ≤°ÊúâÂäûÊ≥ïÈôç‰Ωé‰∏ÄÁÇπÔºüÁ≠îÊ°àÊòØÊúâÁöÑ„ÄÇ Êàë‰ª¨‰∏äÈù¢‰ΩøÁî®ÁöÑÂ∏ÉÈöÜËøáÊª§Âô®Âè™ÊòØÈªòËÆ§ÂèÇÊï∞ÁöÑÂ∏ÉÈöÜËøáÊª§Âô®ÔºåÂÆÉÂú®Êàë‰ª¨Á¨¨‰∏ÄÊ¨° add ÁöÑÊó∂ÂÄôËá™Âä®ÂàõÂª∫„ÄÇRedis ÂÖ∂ÂÆûËøòÊèê‰æõ‰∫ÜËá™ÂÆö‰πâÂèÇÊï∞ÁöÑÂ∏ÉÈöÜËøáÊª§Âô®ÔºåÈúÄË¶ÅÊàë‰ª¨Âú® add ‰πãÂâç‰ΩøÁî®bf.reserveÊåá‰ª§ÊòæÂºèÂàõÂª∫„ÄÇÂ¶ÇÊûúÂØπÂ∫îÁöÑ key Â∑≤ÁªèÂ≠òÂú®Ôºåbf.reserve‰ºöÊä•Èîô„ÄÇbf.reserveÊúâ‰∏â‰∏™ÂèÇÊï∞ÔºåÂàÜÂà´ÊòØ key, error_rateÂíåinitial_size„ÄÇÈîôËØØÁéáË∂ä‰ΩéÔºåÈúÄË¶ÅÁöÑÁ©∫Èó¥Ë∂äÂ§ß„ÄÇinitial_sizeÂèÇÊï∞Ë°®Á§∫È¢ÑËÆ°ÊîæÂÖ•ÁöÑÂÖÉÁ¥†Êï∞ÈáèÔºåÂΩìÂÆûÈôÖÊï∞ÈáèË∂ÖÂá∫Ëøô‰∏™Êï∞ÂÄºÊó∂ÔºåËØØÂà§Áéá‰ºö‰∏äÂçá„ÄÇ ÊâÄ‰ª•ÈúÄË¶ÅÊèêÂâçËÆæÁΩÆ‰∏Ä‰∏™ËæÉÂ§ßÁöÑÊï∞ÂÄºÈÅøÂÖçË∂ÖÂá∫ÂØºËá¥ËØØÂà§ÁéáÂçáÈ´ò„ÄÇÂ¶ÇÊûú‰∏ç‰ΩøÁî® bf.reserveÔºåÈªòËÆ§ÁöÑerror_rateÊòØ 0.01ÔºåÈªòËÆ§ÁöÑinitial_sizeÊòØ 100„ÄÇ Êé•‰∏ãÊù•Êàë‰ª¨‰ΩøÁî® bf.reserve ÊîπÈÄ†‰∏Ä‰∏ã‰∏äÈù¢ÁöÑËÑöÊú¨Ôºö 123456789101112131415161718192021222324252627282930313233343536# coding: utf-8import redisimport randomclient = redis.StrictRedis()CHARS = ''.join([chr(ord('a') + i) for i in range(26)])def random_string(n): chars = [] for i in range(n): idx = random.randint(0, len(CHARS) - 1) chars.append(CHARS[idx]) return ''.join(chars)users = list(set([random_string(64) for i in range(100000)]))print 'total users', len(users)users_train = users[:len(users)/2]users_test = users[len(users)/2:]falses = 0client.delete("codehole")# Â¢ûÂä†‰∫Ü‰∏ãÈù¢Ëøô‰∏ÄÂè•client.execute_command("bf.reserve", "codehole", 0.001, 50000)for user in users_train: client.execute_command("bf.add", "codehole", user)print 'all trained'for user in users_test: ret = client.execute_command("bf.exists", "codehole", user) if ret == 1: falses += 1print falses, len(users_test) Java ÁâàÊú¨Ôºö 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253public class BloomTest &#123; private String chars; &#123; StringBuilder builder = new StringBuilder(); for (int i = 0; i &lt; 26; i++) &#123; builder.append((char) ('a' + i)); &#125; chars = builder.toString(); &#125; private String randomString(int n) &#123; StringBuilder builder = new StringBuilder(); for (int i = 0; i &lt; n; i++) &#123; int idx = ThreadLocalRandom.current().nextInt(chars.length()); builder.append(chars.charAt(idx)); &#125; return builder.toString(); &#125; private List&lt;String&gt; randomUsers(int n) &#123; List&lt;String&gt; users = new ArrayList&lt;&gt;(); for (int i = 0; i &lt; 100000; i++) &#123; users.add(randomString(64)); &#125; return users; &#125; public static void main(String[] args) &#123; BloomTest bloomer = new BloomTest(); List&lt;String&gt; users = bloomer.randomUsers(100000); List&lt;String&gt; usersTrain = users.subList(0, users.size() / 2); List&lt;String&gt; usersTest = users.subList(users.size() / 2, users.size()); Client client = new Client(); client.delete("codehole"); // ÂØπÂ∫î bf.reserve Êåá‰ª§ client.createFilter("codehole", 50000, 0.001); for (String user : usersTrain) &#123; client.add("codehole", user); &#125; int falses = 0; for (String user : usersTest) &#123; boolean ret = client.exists("codehole", user); if (ret) &#123; falses++; &#125; &#125; System.out.printf("%d %d\n", falses, usersTest.size()); client.close(); &#125;&#125; ËøêË°å‰∏Ä‰∏ãÔºåÁ≠âÂæÖÁ∫¶ 1 ÂàÜÈíüÔºåËæìÂá∫Â¶Ç‰∏ãÔºö 123total users 100000all trained6 50000 Êàë‰ª¨ÁúãÂà∞‰∫ÜËØØÂà§ÁéáÂ§ßÁ∫¶ 0.012%ÔºåÊØîÈ¢ÑËÆ°ÁöÑ 0.1% ‰ΩéÂæàÂ§öÔºå‰∏çËøáÂ∏ÉÈöÜÁöÑÊ¶ÇÁéáÊòØÊúâËØØÂ∑ÆÁöÑÔºåÂè™Ë¶Å‰∏çÊØîÈ¢ÑËÆ°ËØØÂà§ÁéáÈ´òÂ§™Â§öÔºåÈÉΩÊòØÊ≠£Â∏∏Áé∞Ë±°„ÄÇ &nbsp; Ê≥®ÊÑè‰∫ãÈ°πÂ∏ÉÈöÜËøáÊª§Âô®ÁöÑinitial_size‰º∞ËÆ°ÁöÑËøáÂ§ßÔºå‰ºöÊµ™Ë¥πÂ≠òÂÇ®Á©∫Èó¥Ôºå‰º∞ËÆ°ÁöÑËøáÂ∞èÔºåÂ∞±‰ºöÂΩ±ÂìçÂáÜÁ°ÆÁéáÔºåÁî®Êà∑Âú®‰ΩøÁî®‰πãÂâç‰∏ÄÂÆöË¶ÅÂ∞ΩÂèØËÉΩÂú∞Á≤æÁ°Æ‰º∞ËÆ°Â•ΩÂÖÉÁ¥†Êï∞ÈáèÔºåËøòÈúÄË¶ÅÂä†‰∏ä‰∏ÄÂÆöÁöÑÂÜó‰ΩôÁ©∫Èó¥‰ª•ÈÅøÂÖçÂÆûÈôÖÂÖÉÁ¥†ÂèØËÉΩ‰ºöÊÑèÂ§ñÈ´òÂá∫‰º∞ËÆ°ÂÄºÂæàÂ§ö„ÄÇ Â∏ÉÈöÜËøáÊª§Âô®ÁöÑerror_rateË∂äÂ∞èÔºåÈúÄË¶ÅÁöÑÂ≠òÂÇ®Á©∫Èó¥Â∞±Ë∂äÂ§ßÔºåÂØπ‰∫é‰∏çÈúÄË¶ÅËøá‰∫éÁ≤æÁ°ÆÁöÑÂú∫ÂêàÔºåerror_rateËÆæÁΩÆÁ®çÂ§ß‰∏ÄÁÇπ‰πüÊó†‰º§Â§ßÈõÖ„ÄÇÊØîÂ¶ÇÂú®Êñ∞ÈóªÂéªÈáç‰∏äËÄåË®ÄÔºåËØØÂà§ÁéáÈ´ò‰∏ÄÁÇπÂè™‰ºöËÆ©Â∞èÈÉ®ÂàÜÊñáÁ´†‰∏çËÉΩËÆ©ÂêàÈÄÇÁöÑ‰∫∫ÁúãÂà∞ÔºåÊñáÁ´†ÁöÑÊï¥‰ΩìÈòÖËØªÈáè‰∏ç‰ºöÂõ†‰∏∫ËøôÁÇπËØØÂà§ÁéáÂ∞±Â∏¶Êù•Â∑®Â§ßÁöÑÊîπÂèò„ÄÇ &nbsp; Â∏ÉÈöÜËøáÊª§Âô®ÁöÑÂéüÁêÜÂ≠¶‰ºö‰∫ÜÂ∏ÉÈöÜËøáÊª§Âô®ÁöÑ‰ΩøÁî®Ôºå‰∏ãÈù¢ÊúâÂøÖË¶ÅÊääÂéüÁêÜËß£Èáä‰∏Ä‰∏ãÔºå‰∏çÁÑ∂ËØªËÄÖËøò‰ºöÁªßÁª≠ËíôÂú®ÈºìÈáå ÊØè‰∏™Â∏ÉÈöÜËøáÊª§Âô®ÂØπÂ∫îÂà∞ Redis ÁöÑÊï∞ÊçÆÁªìÊûÑÈáåÈù¢Â∞±ÊòØ‰∏Ä‰∏™Â§ßÂûãÁöÑ‰ΩçÊï∞ÁªÑÂíåÂá†‰∏™‰∏ç‰∏ÄÊ†∑ÁöÑÊó†ÂÅè hash ÂáΩÊï∞„ÄÇÊâÄË∞ìÊó†ÂÅèÂ∞±ÊòØËÉΩÂ§üÊääÂÖÉÁ¥†ÁöÑ hash ÂÄºÁÆóÂæóÊØîËæÉÂùáÂåÄ„ÄÇ ÂêëÂ∏ÉÈöÜËøáÊª§Âô®‰∏≠Ê∑ªÂä† key Êó∂Ôºå‰ºö‰ΩøÁî®Â§ö‰∏™ hash ÂáΩÊï∞ÂØπ key ËøõË°å hash ÁÆóÂæó‰∏Ä‰∏™Êï¥Êï∞Á¥¢ÂºïÂÄºÁÑ∂ÂêéÂØπ‰ΩçÊï∞ÁªÑÈïøÂ∫¶ËøõË°åÂèñÊ®°ËøêÁÆóÂæóÂà∞‰∏Ä‰∏™‰ΩçÁΩÆÔºåÊØè‰∏™ hash ÂáΩÊï∞ÈÉΩ‰ºöÁÆóÂæó‰∏Ä‰∏™‰∏çÂêåÁöÑ‰ΩçÁΩÆ„ÄÇÂÜçÊää‰ΩçÊï∞ÁªÑÁöÑËøôÂá†‰∏™‰ΩçÁΩÆÈÉΩÁΩÆ‰∏∫ 1 Â∞±ÂÆåÊàê‰∫Ü add Êìç‰Ωú„ÄÇ ÂêëÂ∏ÉÈöÜËøáÊª§Âô®ËØ¢ÈóÆ key ÊòØÂê¶Â≠òÂú®Êó∂ÔºåË∑ü add ‰∏ÄÊ†∑Ôºå‰πü‰ºöÊää hash ÁöÑÂá†‰∏™‰ΩçÁΩÆÈÉΩÁÆóÂá∫Êù•ÔºåÁúãÁúã‰ΩçÊï∞ÁªÑ‰∏≠ËøôÂá†‰∏™‰ΩçÁΩÆÊòØÂê¶ÈÉΩ‰∏∫ 1ÔºåÂè™Ë¶ÅÊúâ‰∏Ä‰∏™‰Ωç‰∏∫ 0ÔºåÈÇ£‰πàËØ¥ÊòéÂ∏ÉÈöÜËøáÊª§Âô®‰∏≠Ëøô‰∏™ key ‰∏çÂ≠òÂú®„ÄÇÂ¶ÇÊûúÈÉΩÊòØ 1ÔºåËøôÂπ∂‰∏çËÉΩËØ¥ÊòéËøô‰∏™ key Â∞±‰∏ÄÂÆöÂ≠òÂú®ÔºåÂè™ÊòØÊûÅÊúâÂèØËÉΩÂ≠òÂú®ÔºåÂõ†‰∏∫Ëøô‰∫õ‰ΩçË¢´ÁΩÆ‰∏∫ 1 ÂèØËÉΩÊòØÂõ†‰∏∫ÂÖ∂ÂÆÉÁöÑ key Â≠òÂú®ÊâÄËá¥„ÄÇÂ¶ÇÊûúËøô‰∏™‰ΩçÊï∞ÁªÑÊØîËæÉÁ®ÄÁñèÔºåÂà§Êñ≠Ê≠£Á°ÆÁöÑÊ¶ÇÁéáÂ∞±‰ºöÂæàÂ§ßÔºåÂ¶ÇÊûúËøô‰∏™‰ΩçÊï∞ÁªÑÊØîËæÉÊã•Êå§ÔºåÂà§Êñ≠Ê≠£Á°ÆÁöÑÊ¶ÇÁéáÂ∞±‰ºöÈôç‰Ωé„ÄÇÂÖ∑‰ΩìÁöÑÊ¶ÇÁéáËÆ°ÁÆóÂÖ¨ÂºèÊØîËæÉÂ§çÊùÇÔºåÊÑüÂÖ¥Ë∂£ÂèØ‰ª•ÈòÖËØªÊâ©Â±ïÈòÖËØªÔºåÈùûÂ∏∏ÁÉßËÑëÔºå‰∏çÂª∫ËÆÆËØªËÄÖÁªÜÁúã„ÄÇ ‰ΩøÁî®Êó∂‰∏çË¶ÅËÆ©ÂÆûÈôÖÂÖÉÁ¥†ËøúÂ§ß‰∫éÂàùÂßãÂåñÂ§ßÂ∞èÔºåÂΩìÂÆûÈôÖÂÖÉÁ¥†ÂºÄÂßãË∂ÖÂá∫ÂàùÂßãÂåñÂ§ßÂ∞èÊó∂ÔºåÂ∫îËØ•ÂØπÂ∏ÉÈöÜËøáÊª§Âô®ËøõË°åÈáçÂª∫ÔºåÈáçÊñ∞ÂàÜÈÖç‰∏Ä‰∏™ size Êõ¥Â§ßÁöÑËøáÊª§Âô®ÔºåÂÜçÂ∞ÜÊâÄÊúâÁöÑÂéÜÂè≤ÂÖÉÁ¥†ÊâπÈáè add ËøõÂéª (ËøôÂ∞±Ë¶ÅÊ±ÇÊàë‰ª¨Âú®ÂÖ∂ÂÆÉÁöÑÂ≠òÂÇ®Âô®‰∏≠ËÆ∞ÂΩïÊâÄÊúâÁöÑÂéÜÂè≤ÂÖÉÁ¥†)„ÄÇÂõ†‰∏∫ error_rate ‰∏ç‰ºöÂõ†‰∏∫Êï∞ÈáèË∂ÖÂá∫Â∞±ÊÄ•ÂâßÂ¢ûÂä†ÔºåËøôÂ∞±ÁªôÊàë‰ª¨ÈáçÂª∫ËøáÊª§Âô®Êèê‰æõ‰∫ÜËæÉ‰∏∫ÂÆΩÊùæÁöÑÊó∂Èó¥„ÄÇ &nbsp; Á©∫Èó¥Âç†Áî®‰º∞ËÆ°Â∏ÉÈöÜËøáÊª§Âô®ÁöÑÁ©∫Èó¥Âç†Áî®Êúâ‰∏Ä‰∏™ÁÆÄÂçïÁöÑËÆ°ÁÆóÂÖ¨ÂºèÔºå‰ΩÜÊòØÊé®ÂØºÊØîËæÉÁπÅÁêêÔºåËøôÈáåÂ∞±ÁúÅÂéªÊé®ÂØºËøáÁ®ã‰∫ÜÔºåÁõ¥Êé•ÂºïÂá∫ËÆ°ÁÆóÂÖ¨ÂºèÔºåÊÑüÂÖ¥Ë∂£ÁöÑËØªËÄÖÂèØ‰ª•ÁÇπÂáª„ÄåÊâ©Â±ïÈòÖËØª„ÄçÊ∑±ÂÖ•ÁêÜËß£ÂÖ¨ÂºèÁöÑÊé®ÂØºËøáÁ®ã„ÄÇ Â∏ÉÈöÜËøáÊª§Âô®Êúâ‰∏§‰∏™ÂèÇÊï∞ÔºåÁ¨¨‰∏Ä‰∏™ÊòØÈ¢ÑËÆ°ÂÖÉÁ¥†ÁöÑÊï∞Èáè nÔºåÁ¨¨‰∫å‰∏™ÊòØÈîôËØØÁéá f„ÄÇÂÖ¨ÂºèÊ†πÊçÆËøô‰∏§‰∏™ËæìÂÖ•ÂæóÂà∞‰∏§‰∏™ËæìÂá∫ÔºåÁ¨¨‰∏Ä‰∏™ËæìÂá∫ÊòØ‰ΩçÊï∞ÁªÑÁöÑÈïøÂ∫¶ lÔºå‰πüÂ∞±ÊòØÈúÄË¶ÅÁöÑÂ≠òÂÇ®Á©∫Èó¥Â§ßÂ∞è (bit)ÔºåÁ¨¨‰∫å‰∏™ËæìÂá∫ÊòØ hash ÂáΩÊï∞ÁöÑÊúÄ‰Ω≥Êï∞Èáè k„ÄÇhash ÂáΩÊï∞ÁöÑÊï∞Èáè‰πü‰ºöÁõ¥Êé•ÂΩ±ÂìçÂà∞ÈîôËØØÁéáÔºåÊúÄ‰Ω≥ÁöÑÊï∞Èáè‰ºöÊúâÊúÄ‰ΩéÁöÑÈîôËØØÁéá„ÄÇ 12k=0.7*(l/n) # Á∫¶Á≠â‰∫éf=0.6185^(l/n) # ^ Ë°®Á§∫Ê¨°ÊñπËÆ°ÁÆóÔºå‰πüÂ∞±ÊòØ math.pow ‰ªéÂÖ¨Âºè‰∏≠ÂèØ‰ª•ÁúãÂá∫ ‰ΩçÊï∞ÁªÑÁõ∏ÂØπË∂äÈïø (l/n)ÔºåÈîôËØØÁéá f Ë∂ä‰ΩéÔºåËøô‰∏™ÂíåÁõ¥ËßÇ‰∏äÁêÜËß£ÊòØ‰∏ÄËá¥ÁöÑ ‰ΩçÊï∞ÁªÑÁõ∏ÂØπË∂äÈïø (l/n)Ôºåhash ÂáΩÊï∞ÈúÄË¶ÅÁöÑÊúÄ‰Ω≥Êï∞Èáè‰πüË∂äÂ§öÔºåÂΩ±ÂìçËÆ°ÁÆóÊïàÁéá ÂΩì‰∏Ä‰∏™ÂÖÉÁ¥†Âπ≥ÂùáÈúÄË¶Å 1 ‰∏™Â≠óËäÇ (8bit) ÁöÑÊåáÁ∫πÁ©∫Èó¥Êó∂ (l/n=8)ÔºåÈîôËØØÁéáÂ§ßÁ∫¶‰∏∫ 2% ÈîôËØØÁéá‰∏∫ 10%Ôºå‰∏Ä‰∏™ÂÖÉÁ¥†ÈúÄË¶ÅÁöÑÂπ≥ÂùáÊåáÁ∫πÁ©∫Èó¥‰∏∫ 4.792 ‰∏™ bitÔºåÂ§ßÁ∫¶‰∏∫ 5bit ÈîôËØØÁéá‰∏∫ 1%Ôºå‰∏Ä‰∏™ÂÖÉÁ¥†ÈúÄË¶ÅÁöÑÂπ≥ÂùáÊåáÁ∫πÁ©∫Èó¥‰∏∫ 9.585 ‰∏™ bitÔºåÂ§ßÁ∫¶‰∏∫ 10bit ÈîôËØØÁéá‰∏∫ 0.1%Ôºå‰∏Ä‰∏™ÂÖÉÁ¥†ÈúÄË¶ÅÁöÑÂπ≥ÂùáÊåáÁ∫πÁ©∫Èó¥‰∏∫ 14.377 ‰∏™ bitÔºåÂ§ßÁ∫¶‰∏∫ 15bit ‰Ω†‰πüËÆ∏‰ºöÊÉ≥ÔºåÂ¶ÇÊûú‰∏Ä‰∏™ÂÖÉÁ¥†ÈúÄË¶ÅÂç†ÊçÆ 15 ‰∏™ bitÔºåÈÇ£Áõ∏ÂØπ set ÈõÜÂêàÁöÑÁ©∫Èó¥‰ºòÂäøÊòØ‰∏çÊòØÂ∞±Ê≤°ÊúâÈÇ£‰πàÊòéÊòæ‰∫ÜÔºüËøôÈáåÈúÄË¶ÅÊòéÁ°ÆÁöÑÊòØÔºåset ‰∏≠‰ºöÂ≠òÂÇ®ÊØè‰∏™ÂÖÉÁ¥†ÁöÑÂÜÖÂÆπÔºåËÄåÂ∏ÉÈöÜËøáÊª§Âô®‰ªÖ‰ªÖÂ≠òÂÇ®ÂÖÉÁ¥†ÁöÑÊåáÁ∫π„ÄÇÂÖÉÁ¥†ÁöÑÂÜÖÂÆπÂ§ßÂ∞èÂ∞±ÊòØÂ≠óÁ¨¶‰∏≤ÁöÑÈïøÂ∫¶ÔºåÂÆÉ‰∏ÄËà¨‰ºöÊúâÂ§ö‰∏™Â≠óËäÇÔºåÁîöËá≥ÊòØÂá†ÂçÅ‰∏™‰∏äÁôæ‰∏™Â≠óËäÇÔºåÊØè‰∏™ÂÖÉÁ¥†Êú¨Ë∫´ËøòÈúÄË¶Å‰∏Ä‰∏™ÊåáÈíàË¢´ set ÈõÜÂêàÊù•ÂºïÁî®ÔºåËøô‰∏™ÊåáÈíàÂèà‰ºöÂç†Âéª 4 ‰∏™Â≠óËäÇÊàñ 8 ‰∏™Â≠óËäÇÔºåÂèñÂÜ≥‰∫éÁ≥ªÁªüÊòØ 32bit ËøòÊòØ 64bit„ÄÇËÄåÊåáÁ∫πÁ©∫Èó¥Âè™ÊúâÊé•Ëøë 2 ‰∏™Â≠óËäÇÔºåÊâÄ‰ª•Â∏ÉÈöÜËøáÊª§Âô®ÁöÑÁ©∫Èó¥‰ºòÂäøËøòÊòØÈùûÂ∏∏ÊòéÊòæÁöÑ„ÄÇ Â¶ÇÊûúËØªËÄÖËßâÂæóÂÖ¨ÂºèËÆ°ÁÆóËµ∑Êù•Â§™È∫ªÁÉ¶Ôºå‰πüÊ≤°ÊúâÂÖ≥Á≥ªÔºåÊúâÂæàÂ§öÁé∞ÊàêÁöÑÁΩëÁ´ôÂ∑≤ÁªèÊîØÊåÅËÆ°ÁÆóÁ©∫Èó¥Âç†Áî®ÁöÑÂäüËÉΩ‰∫ÜÔºåÊàë‰ª¨Âè™Ë¶ÅÊääÂèÇÊï∞ËæìËøõÂéªÔºåÂ∞±ÂèØ‰ª•Áõ¥Êé•ÁúãÂà∞ÁªìÊûúÔºåÊØîÂ¶Ç Â∏ÉÈöÜËÆ°ÁÆóÂô®„ÄÇ &nbsp; ÂÆûÈôÖÂÖÉÁ¥†Ë∂ÖÂá∫Êó∂ÔºåËØØÂà§Áéá‰ºöÊÄéÊ†∑ÂèòÂåñÂΩìÂÆûÈôÖÂÖÉÁ¥†Ë∂ÖÂá∫È¢ÑËÆ°ÂÖÉÁ¥†Êó∂ÔºåÈîôËØØÁéá‰ºöÊúâÂ§öÂ§ßÂèòÂåñÔºåÂÆÉ‰ºöÊÄ•Ââß‰∏äÂçá‰πàÔºåËøòÊòØÂπ≥ÁºìÂú∞‰∏äÂçáÔºåËøôÂ∞±ÈúÄË¶ÅÂè¶Â§ñ‰∏Ä‰∏™ÂÖ¨ÂºèÔºåÂºïÂÖ•ÂèÇÊï∞ t Ë°®Á§∫ÂÆûÈôÖÂÖÉÁ¥†ÂíåÈ¢ÑËÆ°ÂÖÉÁ¥†ÁöÑÂÄçÊï∞ t 1f=(1-0.5^t)^k # ÊûÅÈôêËøë‰ººÔºåk ÊòØ hash ÂáΩÊï∞ÁöÑÊúÄ‰Ω≥Êï∞Èáè ÂΩì t Â¢ûÂ§ßÊó∂ÔºåÈîôËØØÁéáÔºåf ‰πü‰ºöË∑üÁùÄÂ¢ûÂ§ßÔºåÂàÜÂà´ÈÄâÊã©ÈîôËØØÁéá‰∏∫ 10%,1%,0.1% ÁöÑ k ÂÄºÔºåÁîªÂá∫ÂÆÉÁöÑÊõ≤Á∫øËøõË°åÁõ¥ËßÇËßÇÂØü ‰ªéËøô‰∏™Âõæ‰∏≠ÂèØ‰ª•ÁúãÂá∫Êõ≤Á∫øËøòÊòØÊØîËæÉÈô°Â≥≠ÁöÑ ÈîôËØØÁéá‰∏∫ 10% Êó∂ÔºåÂÄçÊï∞ÊØî‰∏∫ 2 Êó∂ÔºåÈîôËØØÁéáÂ∞±‰ºöÂçáËá≥Êé•Ëøë 40%ÔºåËøô‰∏™Â∞±ÊØîËæÉÂç±Èô©‰∫Ü ÈîôËØØÁéá‰∏∫ 1% Êó∂ÔºåÂÄçÊï∞ÊØî‰∏∫ 2 Êó∂ÔºåÈîôËØØÁéáÂçáËá≥ 15%Ôºå‰πüÊå∫ÂèØÊÄïÁöÑ ÈîôËØØÁéá‰∏∫ 0.1%ÔºåÂÄçÊï∞ÊØî‰∏∫ 2 Êó∂ÔºåÈîôËØØÁéáÂçáËá≥ 5%Ôºå‰πüÊØîËæÉÊÇ¨‰∫Ü &nbsp; Áî®‰∏ç‰∏ä Redis4.0 ÊÄé‰πàÂäûÔºüRedis 4.0 ‰πãÂâç‰πüÊúâÁ¨¨‰∏âÊñπÁöÑÂ∏ÉÈöÜËøáÊª§Âô® lib ‰ΩøÁî®ÔºåÂè™‰∏çËøáÂú®ÂÆûÁé∞‰∏ä‰ΩøÁî® redis ÁöÑ‰ΩçÂõæÊù•ÂÆûÁé∞ÁöÑÔºåÊÄßËÉΩ‰∏ä‰πüË¶ÅÂ∑Æ‰∏çÂ∞ë„ÄÇÊØîÂ¶Ç‰∏ÄÊ¨° exists Êü•ËØ¢‰ºöÊ∂âÂèäÂà∞Â§öÊ¨° getbit Êìç‰ΩúÔºåÁΩëÁªúÂºÄÈîÄÁõ∏ÊØîËÄåË®Ä‰ºöÈ´òÂá∫‰∏çÂ∞ë„ÄÇÂè¶Â§ñÂú®ÂÆûÁé∞‰∏äËøô‰∫õÁ¨¨‰∏âÊñπ lib ‰πü‰∏çÂ∞ΩÂÆåÁæéÔºåÊØîÂ¶Ç pyrebloom Â∫ìÂ∞±‰∏çÊîØÊåÅÈáçËøûÂíåÈáçËØïÔºåÂú®‰ΩøÁî®Êó∂ÈúÄË¶ÅÂØπÂÆÉÂÅö‰∏ÄÂ±ÇÂ∞ÅË£ÖÂêéÊâçËÉΩÂú®Áîü‰∫ßÁéØÂ¢É‰∏≠‰ΩøÁî®„ÄÇ Python Redis Bloom Filter Java Redis Bloom Filter &nbsp; Â∏ÉÈöÜËøáÊª§Âô®ÁöÑÂÖ∂ÂÆÉÂ∫îÁî®Âú®Áà¨Ëô´Á≥ªÁªü‰∏≠ÔºåÊàë‰ª¨ÈúÄË¶ÅÂØπ URL ËøõË°åÂéªÈáçÔºåÂ∑≤ÁªèÁà¨ËøáÁöÑÁΩëÈ°µÂ∞±ÂèØ‰ª•‰∏çÁî®Áà¨‰∫Ü„ÄÇ‰ΩÜÊòØ URL Â§™Â§ö‰∫ÜÔºåÂá†ÂçÉ‰∏áÂá†‰∏™‰∫øÔºåÂ¶ÇÊûúÁî®‰∏Ä‰∏™ÈõÜÂêàË£Ö‰∏ãËøô‰∫õ URL Âú∞ÂùÄÈÇ£ÊòØÈùûÂ∏∏Êµ™Ë¥πÁ©∫Èó¥ÁöÑ„ÄÇËøôÊó∂ÂÄôÂ∞±ÂèØ‰ª•ËÄÉËôë‰ΩøÁî®Â∏ÉÈöÜËøáÊª§Âô®„ÄÇÂÆÉÂèØ‰ª•Â§ßÂπÖÈôç‰ΩéÂéªÈáçÂ≠òÂÇ®Ê∂àËÄóÔºåÂè™‰∏çËøá‰πü‰ºö‰ΩøÂæóÁà¨Ëô´Á≥ªÁªüÈîôËøáÂ∞ëÈáèÁöÑÈ°µÈù¢„ÄÇ Â∏ÉÈöÜËøáÊª§Âô®Âú® NoSQL Êï∞ÊçÆÂ∫ìÈ¢ÜÂüü‰ΩøÁî®ÈùûÂ∏∏ÂπøÊ≥õÔºåÊàë‰ª¨Âπ≥Êó∂Áî®Âà∞ÁöÑ HBase„ÄÅCassandra ËøòÊúâ LevelDB„ÄÅRocksDB ÂÜÖÈÉ®ÈÉΩÊúâÂ∏ÉÈöÜËøáÊª§Âô®ÁªìÊûÑÔºåÂ∏ÉÈöÜËøáÊª§Âô®ÂèØ‰ª•ÊòæËëóÈôç‰ΩéÊï∞ÊçÆÂ∫ìÁöÑ IO ËØ∑Ê±ÇÊï∞Èáè„ÄÇÂΩìÁî®Êà∑Êù•Êü•ËØ¢Êüê‰∏™ row Êó∂ÔºåÂèØ‰ª•ÂÖàÈÄöËøáÂÜÖÂ≠ò‰∏≠ÁöÑÂ∏ÉÈöÜËøáÊª§Âô®ËøáÊª§ÊéâÂ§ßÈáè‰∏çÂ≠òÂú®ÁöÑ row ËØ∑Ê±ÇÔºåÁÑ∂ÂêéÂÜçÂéªÁ£ÅÁõòËøõË°åÊü•ËØ¢„ÄÇ ÈÇÆÁÆ±Á≥ªÁªüÁöÑÂûÉÂúæÈÇÆ‰ª∂ËøáÊª§ÂäüËÉΩ‰πüÊôÆÈÅçÁî®Âà∞‰∫ÜÂ∏ÉÈöÜËøáÊª§Âô®ÔºåÂõ†‰∏∫Áî®‰∫ÜËøô‰∏™ËøáÊª§Âô®ÔºåÊâÄ‰ª•Âπ≥Êó∂‰πü‰ºöÈÅáÂà∞Êüê‰∫õÊ≠£Â∏∏ÁöÑÈÇÆ‰ª∂Ë¢´ÊîæËøõ‰∫ÜÂûÉÂúæÈÇÆ‰ª∂ÁõÆÂΩï‰∏≠ÔºåËøô‰∏™Â∞±ÊòØËØØÂà§ÊâÄËá¥ÔºåÊ¶ÇÁéáÂæà‰Ωé„ÄÇ &nbsp; Êâ©Â±ïÈòÖËØªÂ∏ÉÈöÜËøáÊª§Âô®ÁöÑÂéüÁêÜÊ∂âÂèäÂà∞ËæÉ‰∏∫Â§çÊùÇÁöÑÊï∞Â≠¶Áü•ËØÜÔºåÊÑüÂÖ¥Ë∂£ÂèØ‰ª•ÈòÖËØª‰∏ãÈù¢ÁöÑÈìæÊé•ÊñáÁ´†ÁªßÁª≠Ê∑±ÂÖ•‰∫ÜËß£ÂÜÖÈÉ®ÂéüÁêÜÔºöÂ∏ÉÈöÜËøáÊª§Âô®„ÄÇ ÂêåÊ†∑ÔºåÂ¶ÇÊûú‰Ω†ÊòØ‰∏™Êï∞Â≠¶Â≠¶Ê∏£ÔºåÈÇ£ËÄÅÂ∏àÊàëÂª∫ËÆÆ‰Ω†Ë∞®ÊÖéËßÇÁúãÔºåË¶ÅÊ≥®ÊÑè‰øùÊä§Â•ΩËá™Â∑±ÁöÑ 24K ÈíõÂêàÈáëÁãóÁúºÔºåÈÅøÂÖçÈó™Áûé„ÄÇ]]></content>
      <tags>
        <tag>ËΩ¨Âèë</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â∫îÁî® 4ÔºöÂõõ‰∏§Êã®ÂçÉÊñ§ ‚Äî‚Äî HyperLogLog]]></title>
    <url>%2F2018%2F09%2F25%2FRedis%20%E6%B7%B1%E5%BA%A6%E5%8E%86%E9%99%A9%2F6%E5%BA%94%E7%94%A8%204%EF%BC%9A%E5%9B%9B%E4%B8%A4%E6%8B%A8%E5%8D%83%E6%96%A4%20%E2%80%94%E2%80%94%20HyperLogLog%2F</url>
    <content type="text"><![CDATA[‰ΩúËÄÖÔºöÊéòÈáëÂ∞èÂÜå Êù•Ê∫êÔºöhttps://juejin.im/books Âú®ÂºÄÂßãËøô‰∏ÄËäÇ‰πãÂâçÔºåÊàë‰ª¨ÂÖàÊÄùËÄÉ‰∏Ä‰∏™Â∏∏ËßÅÁöÑ‰∏öÂä°ÈóÆÈ¢òÔºöÂ¶ÇÊûú‰Ω†Ë¥üË¥£ÂºÄÂèëÁª¥Êä§‰∏Ä‰∏™Â§ßÂûãÁöÑÁΩëÁ´ôÔºåÊúâ‰∏ÄÂ§©ËÄÅÊùøÊâæ‰∫ßÂìÅÁªèÁêÜË¶ÅÁΩëÁ´ôÊØè‰∏™ÁΩëÈ°µÊØèÂ§©ÁöÑ UV Êï∞ÊçÆÔºåÁÑ∂ÂêéËÆ©‰Ω†Êù•ÂºÄÂèëËøô‰∏™ÁªüËÆ°Ê®°ÂùóÔºå‰Ω†‰ºöÂ¶Ç‰ΩïÂÆûÁé∞Ôºü Â¶ÇÊûúÁªüËÆ° PV ÈÇ£ÈùûÂ∏∏Â•ΩÂäûÔºåÁªôÊØè‰∏™ÁΩëÈ°µ‰∏Ä‰∏™Áã¨Á´ãÁöÑ Redis ËÆ°Êï∞Âô®Â∞±ÂèØ‰ª•‰∫ÜÔºåËøô‰∏™ËÆ°Êï∞Âô®ÁöÑ key ÂêéÁºÄÂä†‰∏äÂΩìÂ§©ÁöÑÊó•Êúü„ÄÇËøôÊ†∑Êù•‰∏Ä‰∏™ËØ∑Ê±ÇÔºåincrby ‰∏ÄÊ¨°ÔºåÊúÄÁªàÂ∞±ÂèØ‰ª•ÁªüËÆ°Âá∫ÊâÄÊúâÁöÑ PV Êï∞ÊçÆ„ÄÇ ‰ΩÜÊòØ UV ‰∏ç‰∏ÄÊ†∑ÔºåÂÆÉË¶ÅÂéªÈáçÔºåÂêå‰∏Ä‰∏™Áî®Êà∑‰∏ÄÂ§©‰πãÂÜÖÁöÑÂ§öÊ¨°ËÆøÈóÆËØ∑Ê±ÇÂè™ËÉΩËÆ°Êï∞‰∏ÄÊ¨°„ÄÇËøôÂ∞±Ë¶ÅÊ±ÇÊØè‰∏Ä‰∏™ÁΩëÈ°µËØ∑Ê±ÇÈÉΩÈúÄË¶ÅÂ∏¶‰∏äÁî®Êà∑ÁöÑ IDÔºåÊó†ËÆ∫ÊòØÁôªÈôÜÁî®Êà∑ËøòÊòØÊú™ÁôªÈôÜÁî®Êà∑ÈÉΩÈúÄË¶Å‰∏Ä‰∏™ÂîØ‰∏Ä ID Êù•Ê†áËØÜ„ÄÇ ‰Ω†‰πüËÆ∏Â∑≤ÁªèÊÉ≥Âà∞‰∫Ü‰∏Ä‰∏™ÁÆÄÂçïÁöÑÊñπÊ°àÔºåÈÇ£Â∞±ÊòØ‰∏∫ÊØè‰∏Ä‰∏™È°µÈù¢‰∏Ä‰∏™Áã¨Á´ãÁöÑ set ÈõÜÂêàÊù•Â≠òÂÇ®ÊâÄÊúâÂΩìÂ§©ËÆøÈóÆËøáÊ≠§È°µÈù¢ÁöÑÁî®Êà∑ ID„ÄÇÂΩì‰∏Ä‰∏™ËØ∑Ê±ÇËøáÊù•Êó∂ÔºåÊàë‰ª¨‰ΩøÁî® sadd Â∞ÜÁî®Êà∑ ID Â°ûËøõÂéªÂ∞±ÂèØ‰ª•‰∫Ü„ÄÇÈÄöËøá scard ÂèØ‰ª•ÂèñÂá∫Ëøô‰∏™ÈõÜÂêàÁöÑÂ§ßÂ∞èÔºåËøô‰∏™Êï∞Â≠óÂ∞±ÊòØËøô‰∏™È°µÈù¢ÁöÑ UV Êï∞ÊçÆ„ÄÇÊ≤°ÈîôÔºåËøôÊòØ‰∏Ä‰∏™ÈùûÂ∏∏ÁÆÄÂçïÁöÑÊñπÊ°à„ÄÇ ‰ΩÜÊòØÔºåÂ¶ÇÊûú‰Ω†ÁöÑÈ°µÈù¢ËÆøÈóÆÈáèÈùûÂ∏∏Â§ßÔºåÊØîÂ¶Ç‰∏Ä‰∏™ÁàÜÊ¨æÈ°µÈù¢Âá†ÂçÉ‰∏áÁöÑ UVÔºå‰Ω†ÈúÄË¶Å‰∏Ä‰∏™ÂæàÂ§ßÁöÑ set ÈõÜÂêàÊù•ÁªüËÆ°ÔºåËøôÂ∞±ÈùûÂ∏∏Êµ™Ë¥πÁ©∫Èó¥„ÄÇÂ¶ÇÊûúËøôÊ†∑ÁöÑÈ°µÈù¢ÂæàÂ§öÔºåÈÇ£ÊâÄÈúÄË¶ÅÁöÑÂ≠òÂÇ®Á©∫Èó¥ÊòØÊÉä‰∫∫ÁöÑ„ÄÇ‰∏∫ËøôÊ†∑‰∏Ä‰∏™ÂéªÈáçÂäüËÉΩÂ∞±ËÄóË¥πËøôÊ†∑Â§öÁöÑÂ≠òÂÇ®Á©∫Èó¥ÔºåÂÄºÂæó‰πàÔºüÂÖ∂ÂÆûËÄÅÊùøÈúÄË¶ÅÁöÑÊï∞ÊçÆÂèà‰∏çÈúÄË¶ÅÂ§™Á≤æÁ°ÆÔºå105w Âíå 106w Ëøô‰∏§‰∏™Êï∞Â≠óÂØπ‰∫éËÄÅÊùø‰ª¨Êù•ËØ¥Âπ∂Ê≤°ÊúâÂ§öÂ§ßÂå∫Âà´ÔºåSoÔºåÊúâÊ≤°ÊúâÊõ¥Â•ΩÁöÑËß£ÂÜ≥ÊñπÊ°àÂë¢Ôºü ËøôÂ∞±ÊòØÊú¨ËäÇË¶ÅÂºïÂÖ•ÁöÑ‰∏Ä‰∏™Ëß£ÂÜ≥ÊñπÊ°àÔºåRedis Êèê‰æõ‰∫Ü HyperLogLog Êï∞ÊçÆÁªìÊûÑÂ∞±ÊòØÁî®Êù•Ëß£ÂÜ≥ËøôÁßçÁªüËÆ°ÈóÆÈ¢òÁöÑ„ÄÇHyperLogLog Êèê‰æõ‰∏çÁ≤æÁ°ÆÁöÑÂéªÈáçËÆ°Êï∞ÊñπÊ°àÔºåËôΩÁÑ∂‰∏çÁ≤æÁ°Æ‰ΩÜÊòØ‰πü‰∏çÊòØÈùûÂ∏∏‰∏çÁ≤æÁ°ÆÔºåÊ†áÂáÜËØØÂ∑ÆÊòØ 0.81%ÔºåËøôÊ†∑ÁöÑÁ≤æÁ°ÆÂ∫¶Â∑≤ÁªèÂèØ‰ª•Êª°Ë∂≥‰∏äÈù¢ÁöÑ UV ÁªüËÆ°ÈúÄÊ±Ç‰∫Ü„ÄÇ HyperLogLog Êï∞ÊçÆÁªìÊûÑÊòØ Redis ÁöÑÈ´òÁ∫ßÊï∞ÊçÆÁªìÊûÑÔºåÂÆÉÈùûÂ∏∏ÊúâÁî®Ôºå‰ΩÜÊòØ‰ª§‰∫∫ÊÑüÂà∞ÊÑèÂ§ñÁöÑÊòØÔºå‰ΩøÁî®ËøáÂÆÉÁöÑ‰∫∫ÈùûÂ∏∏Â∞ë„ÄÇ &nbsp; ‰ΩøÁî®ÊñπÊ≥ïHyperLogLog Êèê‰æõ‰∫Ü‰∏§‰∏™Êåá‰ª§ pfadd Âíå pfcountÔºåÊ†πÊçÆÂ≠óÈù¢ÊÑè‰πâÂæàÂ•ΩÁêÜËß£Ôºå‰∏Ä‰∏™ÊòØÂ¢ûÂä†ËÆ°Êï∞Ôºå‰∏Ä‰∏™ÊòØËé∑ÂèñËÆ°Êï∞„ÄÇpfadd Áî®Ê≥ïÂíå set ÈõÜÂêàÁöÑ sadd ÊòØ‰∏ÄÊ†∑ÁöÑÔºåÊù•‰∏Ä‰∏™Áî®Êà∑ IDÔºåÂ∞±Â∞ÜÁî®Êà∑ ID Â°ûËøõÂéªÂ∞±ÊòØ„ÄÇpfcount Âíå scard Áî®Ê≥ïÊòØ‰∏ÄÊ†∑ÁöÑÔºåÁõ¥Êé•Ëé∑ÂèñËÆ°Êï∞ÂÄº„ÄÇ 12345678910111213141516171819202122232425262728127.0.0.1:6379&gt; pfadd codehole user1(integer) 1127.0.0.1:6379&gt; pfcount codehole(integer) 1127.0.0.1:6379&gt; pfadd codehole user2(integer) 1127.0.0.1:6379&gt; pfcount codehole(integer) 2127.0.0.1:6379&gt; pfadd codehole user3(integer) 1127.0.0.1:6379&gt; pfcount codehole(integer) 3127.0.0.1:6379&gt; pfadd codehole user4(integer) 1127.0.0.1:6379&gt; pfcount codehole(integer) 4127.0.0.1:6379&gt; pfadd codehole user5(integer) 1127.0.0.1:6379&gt; pfcount codehole(integer) 5127.0.0.1:6379&gt; pfadd codehole user6(integer) 1127.0.0.1:6379&gt; pfcount codehole(integer) 6127.0.0.1:6379&gt; pfadd codehole user7 user8 user9 user10(integer) 1127.0.0.1:6379&gt; pfcount codehole(integer) 10 ÁÆÄÂçïËØï‰∫Ü‰∏Ä‰∏ãÔºåÂèëÁé∞ËøòËõÆÁ≤æÁ°ÆÁöÑÔºå‰∏Ä‰∏™Ê≤°Â§ö‰πü‰∏Ä‰∏™Ê≤°Â∞ë„ÄÇÊé•‰∏ãÊù•Êàë‰ª¨‰ΩøÁî®ËÑöÊú¨ÔºåÂæÄÈáåÈù¢ÁÅåÊõ¥Â§öÁöÑÊï∞ÊçÆÔºåÁúãÁúãÂÆÉÊòØÂê¶ËøòÂèØ‰ª•ÁªßÁª≠Á≤æÁ°Æ‰∏ãÂéªÔºåÂ¶ÇÊûú‰∏çËÉΩÁ≤æÁ°ÆÔºåÂ∑ÆË∑ùÊúâÂ§öÂ§ß„ÄÇ‰∫∫ÁîüËã¶Áü≠ÔºåÊàëÁî® PythonÔºÅPython ËÑöÊú¨Ëµ∞Ëµ∑Êù•ÔºÅüòÑ 1234567891011# coding: utf-8import redisclient = redis.StrictRedis()for i in range(1000): client.pfadd("codehole", "user%d" % i) total = client.pfcount("codehole") if total != i+1: print total, i+1 break ÂΩìÁÑ∂ Java ‰πü‰∏çÈîôÔºåÂ§ßÂêåÂ∞èÂºÇÔºå‰∏ãÈù¢ÊòØ Java ÁâàÊú¨Ôºö 1234567891011121314public class PfTest &#123; public static void main(String[] args) &#123; Jedis jedis = new Jedis(); for (int i = 0; i &lt; 1000; i++) &#123; jedis.pfadd("codehole", "user" + i); long total = jedis.pfcount("codehole"); if (total != i + 1) &#123; System.out.printf("%d %d\n", total, i + 1); break; &#125; &#125; jedis.close(); &#125;&#125; Êàë‰ª¨Êù•Áúã‰∏ãËæìÂá∫Ôºö 12&gt; python pftest.py99 100 ÂΩìÊàë‰ª¨Âä†ÂÖ•Á¨¨ 100 ‰∏™ÂÖÉÁ¥†Êó∂ÔºåÁªìÊûúÂºÄÂßãÂá∫Áé∞‰∫Ü‰∏ç‰∏ÄËá¥„ÄÇÊé•‰∏ãÊù•Êàë‰ª¨Â∞ÜÊï∞ÊçÆÂ¢ûÂä†Âà∞ 10w ‰∏™ÔºåÁúãÁúãÊÄªÈáèÂ∑ÆË∑ùÊúâÂ§öÂ§ß„ÄÇ 12345678# coding: utf-8import redisclient = redis.StrictRedis()for i in range(100000): client.pfadd("codehole", "user%d" % i)print 100000, client.pfcount("codehole") Java ÁâàÔºö 1234567891011public class JedisTest &#123; public static void main(String[] args) &#123; Jedis jedis = new Jedis(); for (int i = 0; i &lt; 100000; i++) &#123; jedis.pfadd("codehole", "user" + i); &#125; long total = jedis.pfcount("codehole"); System.out.printf("%d %d\n", 100000, total); jedis.close(); &#125;&#125; Ë∑ë‰∫ÜÁ∫¶ÂçäÂàÜÈíüÔºåÊàë‰ª¨ÁúãËæìÂá∫Ôºö 12&gt; python pftest.py100000 99723 Â∑Æ‰∫Ü 277 ‰∏™ÔºåÊåâÁôæÂàÜÊØîÊòØ 0.277%ÔºåÂØπ‰∫é‰∏äÈù¢ÁöÑ UV ÁªüËÆ°ÈúÄÊ±ÇÊù•ËØ¥ÔºåËØØÂ∑ÆÁéá‰πü‰∏çÁÆóÈ´ò„ÄÇÁÑ∂ÂêéÊàë‰ª¨Êää‰∏äÈù¢ÁöÑËÑöÊú¨ÂÜçË∑ë‰∏ÄËæπÔºå‰πüÂ∞±Áõ∏ÂΩì‰∫éÂ∞ÜÊï∞ÊçÆÈáçÂ§çÂä†ÂÖ•‰∏ÄËæπÔºåÊü•ÁúãËæìÂá∫ÔºåÂèØ‰ª•ÂèëÁé∞Ôºåpfcount ÁöÑÁªìÊûúÊ≤°Êúâ‰ªª‰ΩïÊîπÂèòÔºåËøòÊòØ 99723ÔºåËØ¥ÊòéÂÆÉÁ°ÆÂÆûÂÖ∑Â§áÂéªÈáçÂäüËÉΩ„ÄÇ &nbsp; pfadd Ëøô‰∏™ pf ÊòØ‰ªÄ‰πàÊÑèÊÄùÔºüÂÆÉÊòØ HyperLogLog Ëøô‰∏™Êï∞ÊçÆÁªìÊûÑÁöÑÂèëÊòé‰∫∫ Philippe Flajolet ÁöÑÈ¶ñÂ≠óÊØçÁº©ÂÜôÔºåËÄÅÂ∏àËßâÂæó‰ªñÂèëÂûãÂæàÈÖ∑ÔºåÁúãËµ∑Êù•ÊòØ‰∏™‰ΩõÁ≥ªÊïôÊéà„ÄÇ &nbsp; pfmerge ÈÄÇÂêà‰ªÄ‰πàÂú∫ÂêàÁî®ÔºüHyperLogLog Èô§‰∫Ü‰∏äÈù¢ÁöÑ pfadd Âíå pfcount ‰πãÂ§ñÔºåËøòÊèê‰æõ‰∫ÜÁ¨¨‰∏â‰∏™Êåá‰ª§ pfmergeÔºåÁî®‰∫éÂ∞ÜÂ§ö‰∏™ pf ËÆ°Êï∞ÂÄºÁ¥ØÂä†Âú®‰∏ÄËµ∑ÂΩ¢Êàê‰∏Ä‰∏™Êñ∞ÁöÑ pf ÂÄº„ÄÇ ÊØîÂ¶ÇÂú®ÁΩëÁ´ô‰∏≠Êàë‰ª¨Êúâ‰∏§‰∏™ÂÜÖÂÆπÂ∑Æ‰∏çÂ§öÁöÑÈ°µÈù¢ÔºåËøêËê•ËØ¥ÈúÄË¶ÅËøô‰∏§‰∏™È°µÈù¢ÁöÑÊï∞ÊçÆËøõË°åÂêàÂπ∂„ÄÇÂÖ∂‰∏≠È°µÈù¢ÁöÑ UV ËÆøÈóÆÈáè‰πüÈúÄË¶ÅÂêàÂπ∂ÔºåÈÇ£Ëøô‰∏™Êó∂ÂÄô pfmerge Â∞±ÂèØ‰ª•Ê¥æ‰∏äÁî®Âú∫‰∫Ü„ÄÇ &nbsp; Ê≥®ÊÑè‰∫ãÈ°πHyperLogLog Ëøô‰∏™Êï∞ÊçÆÁªìÊûÑ‰∏çÊòØÂÖçË¥πÁöÑÔºå‰∏çÊòØËØ¥‰ΩøÁî®Ëøô‰∏™Êï∞ÊçÆÁªìÊûÑË¶ÅËä±Èí±ÔºåÂÆÉÈúÄË¶ÅÂç†ÊçÆ‰∏ÄÂÆö 12k ÁöÑÂ≠òÂÇ®Á©∫Èó¥ÔºåÊâÄ‰ª•ÂÆÉ‰∏çÈÄÇÂêàÁªüËÆ°Âçï‰∏™Áî®Êà∑Áõ∏ÂÖ≥ÁöÑÊï∞ÊçÆ„ÄÇÂ¶ÇÊûú‰Ω†ÁöÑÁî®Êà∑‰∏ä‰∫øÔºåÂèØ‰ª•ÁÆóÁÆóÔºåËøô‰∏™Á©∫Èó¥ÊàêÊú¨ÊòØÈùûÂ∏∏ÊÉä‰∫∫ÁöÑ„ÄÇ‰ΩÜÊòØÁõ∏ÊØî set Â≠òÂÇ®ÊñπÊ°àÔºåHyperLogLog ÊâÄ‰ΩøÁî®ÁöÑÁ©∫Èó¥ÈÇ£ÁúüÊòØÂèØ‰ª•‰ΩøÁî®ÂçÉÊñ§ÂØπÊØîÂõõ‰∏§Êù•ÂΩ¢ÂÆπ‰∫Ü„ÄÇ ‰∏çËøá‰Ω†‰πü‰∏çÂøÖËøá‰∫éÊãÖÂøÉÔºåÂõ†‰∏∫ Redis ÂØπ HyperLogLog ÁöÑÂ≠òÂÇ®ËøõË°å‰∫Ü‰ºòÂåñÔºåÂú®ËÆ°Êï∞ÊØîËæÉÂ∞èÊó∂ÔºåÂÆÉÁöÑÂ≠òÂÇ®Á©∫Èó¥ÈááÁî®Á®ÄÁñèÁü©ÈòµÂ≠òÂÇ®ÔºåÁ©∫Èó¥Âç†Áî®ÂæàÂ∞èÔºå‰ªÖ‰ªÖÂú®ËÆ°Êï∞ÊÖ¢ÊÖ¢ÂèòÂ§ßÔºåÁ®ÄÁñèÁü©ÈòµÂç†Áî®Á©∫Èó¥Ê∏êÊ∏êË∂ÖËøá‰∫ÜÈòàÂÄºÊó∂Êâç‰ºö‰∏ÄÊ¨°ÊÄßËΩ¨ÂèòÊàêÁ®†ÂØÜÁü©ÈòµÔºåÊâç‰ºöÂç†Áî® 12k ÁöÑÁ©∫Èó¥„ÄÇ &nbsp; HyperLogLog ÂÆûÁé∞ÂéüÁêÜHyperLogLog ÁöÑ‰ΩøÁî®ÈùûÂ∏∏ÁÆÄÂçïÔºå‰ΩÜÊòØÂÆûÁé∞ÂéüÁêÜÊØîËæÉÂ§çÊùÇÔºåÂ¶ÇÊûúËØªËÄÖÊ≤°ÊúâÁâπÂà´ÁöÑÂÖ¥Ë∂£Ôºå‰∏ãÈù¢ÁöÑÂÜÖÂÆπÊöÇÊó∂ÂèØ‰ª•Ë∑≥Ëøá‰∏çÁúã„ÄÇ ‰∏∫‰∫ÜÊñπ‰æøÁêÜËß£ HyperLogLog ÁöÑÂÜÖÈÉ®ÂÆûÁé∞ÂéüÁêÜÔºåÊàëÁîª‰∫Ü‰∏ãÈù¢ËøôÂº†Âõæ ËøôÂº†ÂõæÁöÑÊÑèÊÄùÊòØÔºåÁªôÂÆö‰∏ÄÁ≥ªÂàóÁöÑÈöèÊú∫Êï¥Êï∞ÔºåÊàë‰ª¨ËÆ∞ÂΩï‰∏ã‰Ωé‰ΩçËøûÁª≠Èõ∂‰ΩçÁöÑÊúÄÂ§ßÈïøÂ∫¶ kÔºåÈÄöËøáËøô‰∏™ k ÂÄºÂèØ‰ª•‰º∞ÁÆóÂá∫ÈöèÊú∫Êï∞ÁöÑÊï∞Èáè„ÄÇ È¶ñÂÖà‰∏çÈóÆ‰∏∫‰ªÄ‰πàÔºåÊàë‰ª¨ÁºñÂÜô‰ª£Á†ÅÂÅö‰∏Ä‰∏™ÂÆûÈ™åÔºåËßÇÂØü‰∏Ä‰∏ãÈöèÊú∫Êï¥Êï∞ÁöÑÊï∞ÈáèÂíå k ÂÄºÁöÑÂÖ≥Á≥ª„ÄÇ 123456789101112131415161718192021222324252627282930313233343536373839404142import mathimport random# ÁÆó‰Ωé‰ΩçÈõ∂ÁöÑ‰∏™Êï∞def low_zeros(value): for i in xrange(1, 32): if value &gt;&gt; i &lt;&lt; i != value: break return i - 1# ÈÄöËøáÈöèÊú∫Êï∞ËÆ∞ÂΩïÊúÄÂ§ßÁöÑ‰Ωé‰ΩçÈõ∂ÁöÑ‰∏™Êï∞class BitKeeper(object): def __init__(self): self.maxbits = 0 def random(self): value = random.randint(0, 2**32-1) bits = low_zeros(value) if bits &gt; self.maxbits: self.maxbits = bitsclass Experiment(object): def __init__(self, n): self.n = n self.keeper = BitKeeper() def do(self): for i in range(self.n): self.keeper.random() def debug(self): print self.n, '%.2f' % math.log(self.n, 2), self.keeper.maxbitsfor i in range(1000, 100000, 100): exp = Experiment(i) exp.do() exp.debug() Java ÁâàÔºö 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253public class PfTest &#123; static class BitKeeper &#123; private int maxbits; public void random() &#123; long value = ThreadLocalRandom.current().nextLong(2L &lt;&lt; 32); int bits = lowZeros(value); if (bits &gt; this.maxbits) &#123; this.maxbits = bits; &#125; &#125; private int lowZeros(long value) &#123; int i = 1; for (; i &lt; 32; i++) &#123; if (value &gt;&gt; i &lt;&lt; i != value) &#123; break; &#125; &#125; return i - 1; &#125; &#125; static class Experiment &#123; private int n; private BitKeeper keeper; public Experiment(int n) &#123; this.n = n; this.keeper = new BitKeeper(); &#125; public void work() &#123; for (int i = 0; i &lt; n; i++) &#123; this.keeper.random(); &#125; &#125; public void debug() &#123; System.out.printf("%d %.2f %d\n", this.n, Math.log(this.n) / Math.log(2), this.keeper.maxbits); &#125; &#125; public static void main(String[] args) &#123; for (int i = 1000; i &lt; 100000; i += 100) &#123; Experiment exp = new Experiment(i); exp.work(); exp.debug(); &#125; &#125;&#125; ËøêË°åËßÇÂØüËæìÂá∫Ôºö 1234567891011121336400 15.15 1336500 15.16 1636600 15.16 1336700 15.16 1436800 15.17 1536900 15.17 1837000 15.18 1637100 15.18 1537200 15.18 1337300 15.19 1437400 15.19 1637500 15.19 1437600 15.20 15 ÈÄöËøáËøôÂÆûÈ™åÂèØ‰ª•ÂèëÁé∞ K Âíå N ÁöÑÂØπÊï∞‰πãÈó¥Â≠òÂú®ÊòæËëóÁöÑÁ∫øÊÄßÁõ∏ÂÖ≥ÊÄßÔºö 1N=2^K # Á∫¶Á≠â‰∫é Â¶ÇÊûú N ‰ªã‰∫é 2^K Âíå 2^(K+1) ‰πãÈó¥ÔºåÁî®ËøôÁßçÊñπÂºè‰º∞ËÆ°ÁöÑÂÄºÈÉΩÁ≠â‰∫é 2^KÔºåËøôÊòéÊòæÊòØ‰∏çÂêàÁêÜÁöÑ„ÄÇËøôÈáåÂèØ‰ª•ÈááÁî®Â§ö‰∏™ BitKeeperÔºåÁÑ∂ÂêéËøõË°åÂä†ÊùÉ‰º∞ËÆ°ÔºåÂ∞±ÂèØ‰ª•ÂæóÂà∞‰∏Ä‰∏™ÊØîËæÉÂáÜÁ°ÆÁöÑÂÄº„ÄÇ 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748import mathimport randomdef low_zeros(value): for i in xrange(1, 32): if value &gt;&gt; i &lt;&lt; i != value: break return i - 1class BitKeeper(object): def __init__(self): self.maxbits = 0 def random(self, m): bits = low_zeros(m) if bits &gt; self.maxbits: self.maxbits = bitsclass Experiment(object): def __init__(self, n, k=1024): self.n = n self.k = k self.keepers = [BitKeeper() for i in range(k)] def do(self): for i in range(self.n): m = random.randint(0, 1&lt;&lt;32-1) # Á°Æ‰øùÂêå‰∏Ä‰∏™Êï¥Êï∞Ë¢´ÂàÜÈÖçÂà∞Âêå‰∏Ä‰∏™Ê°∂ÈáåÈù¢ÔºåÊëòÂèñÈ´ò‰ΩçÂêéÂèñÊ®° keeper = self.keepers[((m &amp; 0xfff0000) &gt;&gt; 16) % len(self.keepers)] keeper.random(m) def estimate(self): sumbits_inverse = 0 # Èõ∂‰ΩçÊï∞ÂÄíÊï∞ for keeper in self.keepers: sumbits_inverse += 1.0/float(keeper.maxbits) avgbits = float(self.k)/sumbits_inverse # Âπ≥ÂùáÈõ∂‰ΩçÊï∞ return 2**avgbits * self.k # Ê†πÊçÆÊ°∂ÁöÑÊï∞ÈáèÂØπ‰º∞ËÆ°ÂÄºËøõË°åÊîæÂ§ßfor i in range(100000, 1000000, 100000): exp = Experiment(i) exp.do() est = exp.estimate() print i, '%.2f' % est, '%.2f' % (abs(est-i) / i) ‰∏ãÈù¢ÊòØ Java ÁâàÔºö 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869public class PfTest &#123; static class BitKeeper &#123; private int maxbits; public void random(long value) &#123; int bits = lowZeros(value); if (bits &gt; this.maxbits) &#123; this.maxbits = bits; &#125; &#125; private int lowZeros(long value) &#123; int i = 1; for (; i &lt; 32; i++) &#123; if (value &gt;&gt; i &lt;&lt; i != value) &#123; break; &#125; &#125; return i - 1; &#125; &#125; static class Experiment &#123; private int n; private int k; private BitKeeper[] keepers; public Experiment(int n) &#123; this(n, 1024); &#125; public Experiment(int n, int k) &#123; this.n = n; this.k = k; this.keepers = new BitKeeper[k]; for (int i = 0; i &lt; k; i++) &#123; this.keepers[i] = new BitKeeper(); &#125; &#125; public void work() &#123; for (int i = 0; i &lt; this.n; i++) &#123; long m = ThreadLocalRandom.current().nextLong(1L &lt;&lt; 32); BitKeeper keeper = keepers[(int) (((m &amp; 0xfff0000) &gt;&gt; 16) % keepers.length)]; keeper.random(m); &#125; &#125; public double estimate() &#123; double sumbitsInverse = 0.0; for (BitKeeper keeper : keepers) &#123; sumbitsInverse += 1.0 / (float) keeper.maxbits; &#125; double avgBits = (float) keepers.length / sumbitsInverse; return Math.pow(2, avgBits) * this.k; &#125; &#125; public static void main(String[] args) &#123; for (int i = 100000; i &lt; 1000000; i += 100000) &#123; Experiment exp = new Experiment(i); exp.work(); double est = exp.estimate(); System.out.printf("%d %.2f %.2f\n", i, est, Math.abs(est - i) / i); &#125; &#125;&#125; ‰ª£Á†Å‰∏≠ÂàÜ‰∫Ü 1024 ‰∏™Ê°∂ÔºåËÆ°ÁÆóÂπ≥ÂùáÊï∞‰ΩøÁî®‰∫ÜË∞ÉÂíåÂπ≥Âùá (ÂÄíÊï∞ÁöÑÂπ≥Âùá)„ÄÇÊôÆÈÄöÁöÑÂπ≥ÂùáÊ≥ïÂèØËÉΩÂõ†‰∏∫‰∏™Âà´Á¶ªÁæ§ÂÄºÂØπÂπ≥ÂùáÁªìÊûú‰∫ßÁîüËæÉÂ§ßÁöÑÂΩ±ÂìçÔºåË∞ÉÂíåÂπ≥ÂùáÂèØ‰ª•ÊúâÊïàÂπ≥ÊªëÁ¶ªÁæ§ÂÄºÁöÑÂΩ±Âìç„ÄÇ ËßÇÂØüËÑöÊú¨ÁöÑËæìÂá∫ÔºåËØØÂ∑ÆÁéáÊéßÂà∂Âú®ÁôæÂàÜÊØî‰∏™‰ΩçÊï∞Ôºö 12345678910100000 97287.38 0.03200000 189369.02 0.05300000 287770.04 0.04400000 401233.52 0.00500000 491704.97 0.02600000 604233.92 0.01700000 721127.67 0.03800000 832308.12 0.04900000 870954.86 0.031000000 1075497.64 0.08 &nbsp; ÁúüÂÆûÁöÑ HyperLogLog Ë¶ÅÊØî‰∏äÈù¢ÁöÑÁ§∫‰æã‰ª£Á†ÅÊõ¥Âä†Â§çÊùÇ‰∏Ä‰∫õÔºå‰πüÊõ¥Âä†Á≤æÁ°Æ‰∏Ä‰∫õ„ÄÇ‰∏äÈù¢ÁöÑËøô‰∏™ÁÆóÊ≥ïÂú®ÈöèÊú∫Ê¨°Êï∞ÂæàÂ∞ëÁöÑÊÉÖÂÜµ‰∏ã‰ºöÂá∫Áé∞Èô§Èõ∂ÈîôËØØÔºåÂõ†‰∏∫ maxbits=0 ÊòØ‰∏çÂèØ‰ª•Ê±ÇÂÄíÊï∞ÁöÑ„ÄÇ &nbsp; pf ÁöÑÂÜÖÂ≠òÂç†Áî®‰∏∫‰ªÄ‰πàÊòØ 12kÔºüÊàë‰ª¨Âú®‰∏äÈù¢ÁöÑÁÆóÊ≥ï‰∏≠‰ΩøÁî®‰∫Ü 1024 ‰∏™Ê°∂ËøõË°åÁã¨Á´ãËÆ°Êï∞Ôºå‰∏çËøáÂú® Redis ÁöÑ HyperLogLog ÂÆûÁé∞‰∏≠Áî®Âà∞ÁöÑÊòØ 16384 ‰∏™Ê°∂Ôºå‰πüÂ∞±ÊòØ 2^14ÔºåÊØè‰∏™Ê°∂ÁöÑ maxbits ÈúÄË¶Å 6 ‰∏™ bits Êù•Â≠òÂÇ®ÔºåÊúÄÂ§ßÂèØ‰ª•Ë°®Á§∫ maxbits=63Ôºå‰∫éÊòØÊÄªÂÖ±Âç†Áî®ÂÜÖÂ≠òÂ∞±ÊòØ2^14 * 6 / 8 = 12kÂ≠óËäÇ„ÄÇ &nbsp; ÊÄùËÄÉ &amp; ‰Ωú‰∏öÂ∞ùËØïÂ∞Ü‰∏ÄÂ†ÜÊï∞ÊçÆËøõË°åÂàÜÁªÑÔºåÂàÜÂà´ËøõË°åËÆ°Êï∞ÔºåÂÜç‰ΩøÁî® pfmerge ÂêàÂπ∂Âà∞‰∏ÄËµ∑ÔºåËßÇÂØü pfcount ËÆ°Êï∞ÂÄºÔºå‰∏é‰∏çÂàÜÁªÑÁöÑÊÉÖÂÜµ‰∏ãÁöÑÁªüËÆ°ÁªìÊûúËøõË°åÊØîËæÉÔºåËßÇÂØüÊúâÊ≤°ÊúâÂ∑ÆÂºÇ„ÄÇ &nbsp; Êâ©Â±ïÈòÖËØª HyperLogLog Â§çÊùÇÁöÑÂÖ¨ÂºèÊé®ÂØºËØ∑ÈòÖËØª Count-Distinct ProblemÔºåÂ¶ÇÊûú‰Ω†ÁöÑÊ¶ÇÁéáËÆ∫Âü∫Á°Ä‰∏çÂ•ΩÔºåÈÇ£Â∞±Âª∫ËÆÆ‰∏çË¶ÅÁúã‰∫ÜÔºàÂè¶ÔºåËøô‰∏™ PPT ÈúÄË¶ÅÁøªÂ¢ôËßÇÁúãÔºâ„ÄÇ]]></content>
      <tags>
        <tag>ËΩ¨Âèë</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â∫îÁî® 2ÔºöÂ∫îÁî® 3ÔºöËäÇË°£Áº©È£ü ‚Äî‚Äî ‰ΩçÂõæ]]></title>
    <url>%2F2018%2F09%2F25%2FRedis%20%E6%B7%B1%E5%BA%A6%E5%8E%86%E9%99%A9%2F5%E5%BA%94%E7%94%A8%203%EF%BC%9A%E8%8A%82%E8%A1%A3%E7%BC%A9%E9%A3%9F%20%E2%80%94%E2%80%94%20%E4%BD%8D%E5%9B%BE%2F</url>
    <content type="text"><![CDATA[‰ΩúËÄÖÔºöÊéòÈáëÂ∞èÂÜå Êù•Ê∫êÔºöhttps://juejin.im/books Âú®Êàë‰ª¨Âπ≥Êó∂ÂºÄÂèëËøáÁ®ã‰∏≠Ôºå‰ºöÊúâ‰∏Ä‰∫õ bool ÂûãÊï∞ÊçÆÈúÄË¶ÅÂ≠òÂèñÔºåÊØîÂ¶ÇÁî®Êà∑‰∏ÄÂπ¥ÁöÑÁ≠æÂà∞ËÆ∞ÂΩïÔºåÁ≠æ‰∫ÜÊòØ 1ÔºåÊ≤°Á≠æÊòØ 0ÔºåË¶ÅËÆ∞ÂΩï 365 Â§©„ÄÇÂ¶ÇÊûú‰ΩøÁî®ÊôÆÈÄöÁöÑ key/valueÔºåÊØè‰∏™Áî®Êà∑Ë¶ÅËÆ∞ÂΩï 365 ‰∏™ÔºåÂΩìÁî®Êà∑‰∏ä‰∫øÁöÑÊó∂ÂÄôÔºåÈúÄË¶ÅÁöÑÂ≠òÂÇ®Á©∫Èó¥ÊòØÊÉä‰∫∫ÁöÑ„ÄÇ ‰∏∫‰∫ÜËß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢òÔºåRedis Êèê‰æõ‰∫Ü‰ΩçÂõæÊï∞ÊçÆÁªìÊûÑÔºåËøôÊ†∑ÊØèÂ§©ÁöÑÁ≠æÂà∞ËÆ∞ÂΩïÂè™Âç†ÊçÆ‰∏Ä‰∏™‰ΩçÔºå365 Â§©Â∞±ÊòØ 365 ‰∏™‰ΩçÔºå46 ‰∏™Â≠óËäÇ (‰∏Ä‰∏™Á®çÈïø‰∏ÄÁÇπÁöÑÂ≠óÁ¨¶‰∏≤) Â∞±ÂèØ‰ª•ÂÆåÂÖ®ÂÆπÁ∫≥‰∏ãÔºåËøôÂ∞±Â§ßÂ§ßËäÇÁ∫¶‰∫ÜÂ≠òÂÇ®Á©∫Èó¥„ÄÇ ‰ΩçÂõæ‰∏çÊòØÁâπÊÆäÁöÑÊï∞ÊçÆÁªìÊûÑÔºåÂÆÉÁöÑÂÜÖÂÆπÂÖ∂ÂÆûÂ∞±ÊòØÊôÆÈÄöÁöÑÂ≠óÁ¨¶‰∏≤Ôºå‰πüÂ∞±ÊòØ byte Êï∞ÁªÑ„ÄÇÊàë‰ª¨ÂèØ‰ª•‰ΩøÁî®ÊôÆÈÄöÁöÑ get/set Áõ¥Êé•Ëé∑ÂèñÂíåËÆæÁΩÆÊï¥‰∏™‰ΩçÂõæÁöÑÂÜÖÂÆπÔºå‰πüÂèØ‰ª•‰ΩøÁî®‰ΩçÂõæÊìç‰Ωú getbit/setbit Á≠âÂ∞Ü byte Êï∞ÁªÑÁúãÊàê„Äå‰ΩçÊï∞ÁªÑ„ÄçÊù•Â§ÑÁêÜ„ÄÇ ‰ª•ËÄÅÈí±ÁöÑÁªèÈ™åÔºåÂú®Èù¢ËØï‰∏≠Êúâ Redis ‰ΩçÂõæ‰ΩøÁî®ÁªèÈ™åÁöÑÂêåÂ≠¶ÂæàÂ∞ëÔºåÂ¶ÇÊûú‰Ω†ÂØπ Redis ÁöÑ‰ΩçÂõæÊúâÊâÄ‰∫ÜËß£ÔºåÂÆÉÂ∞Ü‰ºöÊòØ‰Ω†ÁöÑÈù¢ËØïÂä†ÂàÜÈ°π„ÄÇ &nbsp; Âü∫Êú¨‰ΩøÁî®Redis ÁöÑ‰ΩçÊï∞ÁªÑÊòØËá™Âä®Êâ©Â±ïÔºåÂ¶ÇÊûúËÆæÁΩÆ‰∫ÜÊüê‰∏™ÂÅèÁßª‰ΩçÁΩÆË∂ÖÂá∫‰∫ÜÁé∞ÊúâÁöÑÂÜÖÂÆπËåÉÂõ¥ÔºåÂ∞±‰ºöËá™Âä®Â∞Ü‰ΩçÊï∞ÁªÑËøõË°åÈõ∂Êâ©ÂÖÖ„ÄÇ Êé•‰∏ãÊù•Êàë‰ª¨‰ΩøÁî®‰ΩçÊìç‰ΩúÂ∞ÜÂ≠óÁ¨¶‰∏≤ËÆæÁΩÆ‰∏∫ hello (‰∏çÊòØÁõ¥Êé•‰ΩøÁî® set Êåá‰ª§)ÔºåÈ¶ñÂÖàÊàë‰ª¨ÈúÄË¶ÅÂæóÂà∞ hello ÁöÑ ASCII Á†ÅÔºåÁî® Python ÂëΩ‰ª§Ë°åÂèØ‰ª•ÂæàÊñπ‰æøÂú∞ÂæóÂà∞ÊØè‰∏™Â≠óÁ¨¶ÁöÑ ASCII Á†ÅÁöÑ‰∫åËøõÂà∂ÂÄº„ÄÇ 12345678910&gt;&gt;&gt; bin(ord('h'))'0b1101000' # È´ò‰Ωç -&gt; ‰Ωé‰Ωç&gt;&gt;&gt; bin(ord('e'))'0b1100101'&gt;&gt;&gt; bin(ord('l'))'0b1101100'&gt;&gt;&gt; bin(ord('l'))'0b1101100'&gt;&gt;&gt; bin(ord('o'))'0b1101111' Êé•‰∏ãÊù•Êàë‰ª¨‰ΩøÁî® redis-cli ËÆæÁΩÆÁ¨¨‰∏Ä‰∏™Â≠óÁ¨¶Ôºå‰πüÂ∞±ÊòØ‰ΩçÊï∞ÁªÑÁöÑÂâç 8 ‰ΩçÔºåÊàë‰ª¨Âè™ÈúÄË¶ÅËÆæÁΩÆÂÄº‰∏∫ 1 ÁöÑ‰ΩçÔºåÂ¶Ç‰∏äÂõæÊâÄÁ§∫Ôºåh Â≠óÁ¨¶Âè™Êúâ 1/2/4 ‰ΩçÈúÄË¶ÅËÆæÁΩÆÔºåe Â≠óÁ¨¶Âè™Êúâ 9/10/13/15 ‰ΩçÈúÄË¶ÅËÆæÁΩÆ„ÄÇÂÄºÂæóÊ≥®ÊÑèÁöÑÊòØ‰ΩçÊï∞ÁªÑÁöÑÈ°∫Â∫èÂíåÂ≠óÁ¨¶ÁöÑ‰ΩçÈ°∫Â∫èÊòØÁõ∏ÂèçÁöÑ„ÄÇ 12345678910111213141516127.0.0.1:6379&gt; setbit s 1 1(integer) 0127.0.0.1:6379&gt; setbit s 2 1(integer) 0127.0.0.1:6379&gt; setbit s 4 1(integer) 0127.0.0.1:6379&gt; setbit s 9 1(integer) 0127.0.0.1:6379&gt; setbit s 10 1(integer) 0127.0.0.1:6379&gt; setbit s 13 1(integer) 0127.0.0.1:6379&gt; setbit s 15 1(integer) 0127.0.0.1:6379&gt; get s"he" ‰∏äÈù¢Ëøô‰∏™‰æãÂ≠êÂèØ‰ª•ÁêÜËß£‰∏∫„ÄåÈõ∂Â≠òÊï¥Âèñ„ÄçÔºåÂêåÊ†∑Êàë‰ª¨Ëøò‰πüÂèØ‰ª•„ÄåÈõ∂Â≠òÈõ∂Âèñ„ÄçÔºå„ÄåÊï¥Â≠òÈõ∂Âèñ„Äç„ÄÇ„ÄåÈõ∂Â≠ò„ÄçÂ∞±ÊòØ‰ΩøÁî® setbit ÂØπ‰ΩçÂÄºËøõË°åÈÄê‰∏™ËÆæÁΩÆÔºå„ÄåÊï¥Â≠ò„ÄçÂ∞±ÊòØ‰ΩøÁî®Â≠óÁ¨¶‰∏≤‰∏ÄÊ¨°ÊÄßÂ°´ÂÖÖÊâÄÊúâ‰ΩçÊï∞ÁªÑÔºåË¶ÜÁõñÊéâÊóßÂÄº„ÄÇ Èõ∂Â≠òÈõ∂Âèñ1234567891011121314127.0.0.1:6379&gt; setbit w 1 1(integer) 0127.0.0.1:6379&gt; setbit w 2 1(integer) 0127.0.0.1:6379&gt; setbit w 4 1(integer) 0127.0.0.1:6379&gt; getbit w 1 # Ëé∑ÂèñÊüê‰∏™ÂÖ∑‰Ωì‰ΩçÁΩÆÁöÑÂÄº 0/1(integer) 1127.0.0.1:6379&gt; getbit w 2(integer) 1127.0.0.1:6379&gt; getbit w 4(integer) 1127.0.0.1:6379&gt; getbit w 5(integer) 0 Êï¥Â≠òÈõ∂Âèñ12345678910127.0.0.1:6379&gt; set w h # Êï¥Â≠ò(integer) 0127.0.0.1:6379&gt; getbit w 1(integer) 1127.0.0.1:6379&gt; getbit w 2(integer) 1127.0.0.1:6379&gt; getbit w 4(integer) 1127.0.0.1:6379&gt; getbit w 5(integer) 0 Â¶ÇÊûúÂØπÂ∫î‰ΩçÁöÑÂ≠óËäÇÊòØ‰∏çÂèØÊâìÂç∞Â≠óÁ¨¶Ôºåredis-cli ‰ºöÊòæÁ§∫ËØ•Â≠óÁ¨¶ÁöÑ 16 ËøõÂà∂ÂΩ¢Âºè„ÄÇ 123456127.0.0.1:6379&gt; setbit x 0 1(integer) 0127.0.0.1:6379&gt; setbit x 1 1(integer) 0127.0.0.1:6379&gt; get x"\xc0" &nbsp; ÁªüËÆ°ÂíåÊü•ÊâæRedis Êèê‰æõ‰∫Ü‰ΩçÂõæÁªüËÆ°Êåá‰ª§ bitcount Âíå‰ΩçÂõæÊü•ÊâæÊåá‰ª§ bitposÔºåbitcount Áî®Êù•ÁªüËÆ°ÊåáÂÆö‰ΩçÁΩÆËåÉÂõ¥ÂÜÖ 1 ÁöÑ‰∏™Êï∞Ôºåbitpos Áî®Êù•Êü•ÊâæÊåáÂÆöËåÉÂõ¥ÂÜÖÂá∫Áé∞ÁöÑÁ¨¨‰∏Ä‰∏™ 0 Êàñ 1„ÄÇ ÊØîÂ¶ÇÊàë‰ª¨ÂèØ‰ª•ÈÄöËøá bitcount ÁªüËÆ°Áî®Êà∑‰∏ÄÂÖ±Á≠æÂà∞‰∫ÜÂ§öÂ∞ëÂ§©ÔºåÈÄöËøá bitpos Êåá‰ª§Êü•ÊâæÁî®Êà∑‰ªéÂì™‰∏ÄÂ§©ÂºÄÂßãÁ¨¨‰∏ÄÊ¨°Á≠æÂà∞„ÄÇÂ¶ÇÊûúÊåáÂÆö‰∫ÜËåÉÂõ¥ÂèÇÊï∞[start, end]ÔºåÂ∞±ÂèØ‰ª•ÁªüËÆ°Âú®Êüê‰∏™Êó∂Èó¥ËåÉÂõ¥ÂÜÖÁî®Êà∑Á≠æÂà∞‰∫ÜÂ§öÂ∞ëÂ§©ÔºåÁî®Êà∑Ëá™ÊüêÂ§©‰ª•ÂêéÁöÑÂì™Â§©ÂºÄÂßãÁ≠æÂà∞„ÄÇ ÈÅóÊÜæÁöÑÊòØÔºå start Âíå end ÂèÇÊï∞ÊòØÂ≠óËäÇÁ¥¢ÂºïÔºå‰πüÂ∞±ÊòØËØ¥ÊåáÂÆöÁöÑ‰ΩçËåÉÂõ¥ÂøÖÈ°ªÊòØ 8 ÁöÑÂÄçÊï∞ÔºåËÄå‰∏çËÉΩ‰ªªÊÑèÊåáÂÆö„ÄÇËøôÂæàÂ•áÊÄ™ÔºåÊàëË°®Á§∫‰∏çÊòØÂæàËÉΩÁêÜËß£ Antirez ‰∏∫‰ªÄ‰πàË¶ÅËøôÊ†∑ËÆæËÆ°„ÄÇÂõ†‰∏∫Ëøô‰∏™ËÆæËÆ°ÔºåÊàë‰ª¨Êó†Ê≥ïÁõ¥Êé•ËÆ°ÁÆóÊüê‰∏™ÊúàÂÜÖÁî®Êà∑Á≠æÂà∞‰∫ÜÂ§öÂ∞ëÂ§©ÔºåËÄåÂøÖÈ°ªË¶ÅÂ∞ÜËøô‰∏™ÊúàÊâÄË¶ÜÁõñÁöÑÂ≠óËäÇÂÜÖÂÆπÂÖ®ÈÉ®ÂèñÂá∫Êù• (getrange ÂèØ‰ª•ÂèñÂá∫Â≠óÁ¨¶‰∏≤ÁöÑÂ≠ê‰∏≤) ÁÑ∂ÂêéÂú®ÂÜÖÂ≠òÈáåËøõË°åÁªüËÆ°ÔºåËøô‰∏™ÈùûÂ∏∏ÁπÅÁêê„ÄÇ Êé•‰∏ãÊù•Êàë‰ª¨ÁÆÄÂçïËØïÁî®‰∏Ä‰∏ã bitcount Êåá‰ª§Âíå bitpos Êåá‰ª§: 12345678910111213141516127.0.0.1:6379&gt; set w helloOK127.0.0.1:6379&gt; bitcount w(integer) 21127.0.0.1:6379&gt; bitcount w 0 0 # Á¨¨‰∏Ä‰∏™Â≠óÁ¨¶‰∏≠ 1 ÁöÑ‰ΩçÊï∞(integer) 3127.0.0.1:6379&gt; bitcount w 0 1 # Ââç‰∏§‰∏™Â≠óÁ¨¶‰∏≠ 1 ÁöÑ‰ΩçÊï∞(integer) 7127.0.0.1:6379&gt; bitpos w 0 # Á¨¨‰∏Ä‰∏™ 0 ‰Ωç(integer) 0127.0.0.1:6379&gt; bitpos w 1 # Á¨¨‰∏Ä‰∏™ 1 ‰Ωç(integer) 1127.0.0.1:6379&gt; bitpos w 1 1 1 # ‰ªéÁ¨¨‰∫å‰∏™Â≠óÁ¨¶ÁÆóËµ∑ÔºåÁ¨¨‰∏Ä‰∏™ 1 ‰Ωç(integer) 9127.0.0.1:6379&gt; bitpos w 1 2 2 # ‰ªéÁ¨¨‰∏â‰∏™Â≠óÁ¨¶ÁÆóËµ∑ÔºåÁ¨¨‰∏Ä‰∏™ 1 ‰Ωç(integer) 17 &nbsp; È≠îÊúØÊåá‰ª§ bitfieldÂâçÊñáÊàë‰ª¨ËÆæÁΩÆ (setbit) ÂíåËé∑Âèñ (getbit) ÊåáÂÆö‰ΩçÁöÑÂÄºÈÉΩÊòØÂçï‰∏™‰ΩçÁöÑÔºåÂ¶ÇÊûúË¶Å‰∏ÄÊ¨°Êìç‰ΩúÂ§ö‰∏™‰ΩçÔºåÂ∞±ÂøÖÈ°ª‰ΩøÁî®ÁÆ°ÈÅìÊù•Â§ÑÁêÜ„ÄÇ ‰∏çËøá Redis ÁöÑ 3.2 ÁâàÊú¨‰ª•ÂêéÊñ∞Â¢û‰∫Ü‰∏Ä‰∏™ÂäüËÉΩÂº∫Â§ßÁöÑÊåá‰ª§ÔºåÊúâ‰∫ÜËøôÊù°Êåá‰ª§Ôºå‰∏çÁî®ÁÆ°ÈÅì‰πüÂèØ‰ª•‰∏ÄÊ¨°ËøõË°åÂ§ö‰∏™‰ΩçÁöÑÊìç‰Ωú„ÄÇ bitfield Êúâ‰∏â‰∏™Â≠êÊåá‰ª§ÔºåÂàÜÂà´ÊòØ get/set/incrbyÔºåÂÆÉ‰ª¨ÈÉΩÂèØ‰ª•ÂØπÊåáÂÆö‰ΩçÁâáÊÆµËøõË°åËØªÂÜôÔºå‰ΩÜÊòØÊúÄÂ§öÂè™ËÉΩÂ§ÑÁêÜ 64 ‰∏™ËøûÁª≠ÁöÑ‰ΩçÔºåÂ¶ÇÊûúË∂ÖËøá 64 ‰ΩçÔºåÂ∞±Âæó‰ΩøÁî®Â§ö‰∏™Â≠êÊåá‰ª§Ôºåbitfield ÂèØ‰ª•‰∏ÄÊ¨°ÊâßË°åÂ§ö‰∏™Â≠êÊåá‰ª§„ÄÇ Êé•‰∏ãÊù•Êàë‰ª¨ÂØπÁÖßÁùÄ‰∏äÈù¢ÁöÑÂõæÁúã‰∏™ÁÆÄÂçïÁöÑ‰æãÂ≠ê: 12345678910127.0.0.1:6379&gt; set w helloOK127.0.0.1:6379&gt; bitfield w get u4 0 # ‰ªéÁ¨¨‰∏Ä‰∏™‰ΩçÂºÄÂßãÂèñ 4 ‰∏™‰ΩçÔºåÁªìÊûúÊòØÊó†Á¨¶Âè∑Êï∞ (u)(integer) 6127.0.0.1:6379&gt; bitfield w get u3 2 # ‰ªéÁ¨¨‰∏â‰∏™‰ΩçÂºÄÂßãÂèñ 3 ‰∏™‰ΩçÔºåÁªìÊûúÊòØÊó†Á¨¶Âè∑Êï∞ (u)(integer) 5127.0.0.1:6379&gt; bitfield w get i4 0 # ‰ªéÁ¨¨‰∏Ä‰∏™‰ΩçÂºÄÂßãÂèñ 4 ‰∏™‰ΩçÔºåÁªìÊûúÊòØÊúâÁ¨¶Âè∑Êï∞ (i)1) (integer) 6127.0.0.1:6379&gt; bitfield w get i3 2 # ‰ªéÁ¨¨‰∏â‰∏™‰ΩçÂºÄÂßãÂèñ 3 ‰∏™‰ΩçÔºåÁªìÊûúÊòØÊúâÁ¨¶Âè∑Êï∞ (i)1) (integer) -3 ÊâÄË∞ìÊúâÁ¨¶Âè∑Êï∞ÊòØÊåáËé∑ÂèñÁöÑ‰ΩçÊï∞ÁªÑ‰∏≠Á¨¨‰∏Ä‰∏™‰ΩçÊòØÁ¨¶Âè∑‰ΩçÔºåÂâ©‰∏ãÁöÑÊâçÊòØÂÄº„ÄÇÂ¶ÇÊûúÁ¨¨‰∏Ä‰ΩçÊòØ 1ÔºåÈÇ£Â∞±ÊòØË¥üÊï∞„ÄÇÊó†Á¨¶Âè∑Êï∞Ë°®Á§∫ÈùûË¥üÊï∞ÔºåÊ≤°ÊúâÁ¨¶Âè∑‰ΩçÔºåËé∑ÂèñÁöÑ‰ΩçÊï∞ÁªÑÂÖ®ÈÉ®ÈÉΩÊòØÂÄº„ÄÇÊúâÁ¨¶Âè∑Êï∞ÊúÄÂ§öÂèØ‰ª•Ëé∑Âèñ 64 ‰ΩçÔºåÊó†Á¨¶Âè∑Êï∞Âè™ËÉΩËé∑Âèñ 63 ‰Ωç (Âõ†‰∏∫ Redis ÂçèËÆÆ‰∏≠ÁöÑ integer ÊòØÊúâÁ¨¶Âè∑Êï∞ÔºåÊúÄÂ§ß 64 ‰ΩçÔºå‰∏çËÉΩ‰º†ÈÄí 64 ‰ΩçÊó†Á¨¶Âè∑ÂÄº)„ÄÇÂ¶ÇÊûúË∂ÖÂá∫‰ΩçÊï∞ÈôêÂà∂ÔºåRedis Â∞±‰ºöÂëäËØâ‰Ω†ÂèÇÊï∞ÈîôËØØ„ÄÇ Êé•‰∏ãÊù•Êàë‰ª¨‰∏ÄÊ¨°ÊâßË°åÂ§ö‰∏™Â≠êÊåá‰ª§: 12345127.0.0.1:6379&gt; bitfield w get u4 0 get u3 2 get i4 0 get i3 21) (integer) 62) (integer) 53) (integer) 64) (integer) -3 wowÔºåÂæàÈ≠îÊ≥ïÊúâÊ≤°ÊúâÔºÅ ÁÑ∂ÂêéÊàë‰ª¨‰ΩøÁî® set Â≠êÊåá‰ª§Â∞ÜÁ¨¨‰∫å‰∏™Â≠óÁ¨¶ e ÊîπÊàê aÔºåa ÁöÑ ASCII Á†ÅÊòØ 97„ÄÇ 1234127.0.0.1:6379&gt; bitfield w set u8 8 97 # ‰ªéÁ¨¨ 8 ‰∏™‰ΩçÂºÄÂßãÔºåÂ∞ÜÊé•‰∏ãÊù•ÁöÑ 8 ‰∏™‰ΩçÁî®Êó†Á¨¶Âè∑Êï∞ 97 ÊõøÊç¢1) (integer) 101127.0.0.1:6379&gt; get w"hallo" ÂÜçÁúãÁ¨¨‰∏â‰∏™Â≠êÊåá‰ª§ incrbyÔºåÂÆÉÁî®Êù•ÂØπÊåáÂÆöËåÉÂõ¥ÁöÑ‰ΩçËøõË°åËá™Â¢ûÊìç‰Ωú„ÄÇÊó¢ÁÑ∂ÊèêÂà∞Ëá™Â¢ûÔºåÂ∞±ÊúâÂèØËÉΩÂá∫Áé∞Ê∫¢Âá∫„ÄÇÂ¶ÇÊûúÂ¢ûÂä†‰∫ÜÊ≠£Êï∞Ôºå‰ºöÂá∫Áé∞‰∏äÊ∫¢ÔºåÂ¶ÇÊûúÂ¢ûÂä†ÁöÑÊòØË¥üÊï∞ÔºåÂ∞±‰ºöÂá∫Áé∞‰∏ãÊ∫¢Âá∫„ÄÇRedis ÈªòËÆ§ÁöÑÂ§ÑÁêÜÊòØÊäòËøî„ÄÇÂ¶ÇÊûúÂá∫Áé∞‰∫ÜÊ∫¢Âá∫ÔºåÂ∞±Â∞ÜÊ∫¢Âá∫ÁöÑÁ¨¶Âè∑‰Ωç‰∏¢Êéâ„ÄÇÂ¶ÇÊûúÊòØ 8 ‰ΩçÊó†Á¨¶Âè∑Êï∞ 255ÔºåÂä† 1 ÂêéÂ∞±‰ºöÊ∫¢Âá∫Ôºå‰ºöÂÖ®ÈÉ®ÂèòÈõ∂„ÄÇÂ¶ÇÊûúÊòØ 8 ‰ΩçÊúâÁ¨¶Âè∑Êï∞ 127ÔºåÂä† 1 ÂêéÂ∞±‰ºöÊ∫¢Âá∫ÂèòÊàê -128„ÄÇ Êé•‰∏ãÊù•Êàë‰ª¨ÂÆûË∑µ‰∏Ä‰∏ãËøô‰∏™Â≠êÊåá‰ª§ incrby : 1234567891011121314127.0.0.1:6379&gt; set w helloOK127.0.0.1:6379&gt; bitfield w incrby u4 2 1 # ‰ªéÁ¨¨‰∏â‰∏™‰ΩçÂºÄÂßãÔºåÂØπÊé•‰∏ãÊù•ÁöÑ 4 ‰ΩçÊó†Á¨¶Âè∑Êï∞ +11) (integer) 11127.0.0.1:6379&gt; bitfield w incrby u4 2 11) (integer) 12127.0.0.1:6379&gt; bitfield w incrby u4 2 11) (integer) 13127.0.0.1:6379&gt; bitfield w incrby u4 2 11) (integer) 14127.0.0.1:6379&gt; bitfield w incrby u4 2 11) (integer) 15127.0.0.1:6379&gt; bitfield w incrby u4 2 1 # Ê∫¢Âá∫ÊäòËøî‰∫Ü1) (integer) 0 bitfield Êåá‰ª§Êèê‰æõ‰∫ÜÊ∫¢Âá∫Á≠ñÁï•Â≠êÊåá‰ª§ overflowÔºåÁî®Êà∑ÂèØ‰ª•ÈÄâÊã©Ê∫¢Âá∫Ë°å‰∏∫ÔºåÈªòËÆ§ÊòØÊäòËøî (wrap)ÔºåËøòÂèØ‰ª•ÈÄâÊã©Â§±Ë¥• (fail) Êä•Èîô‰∏çÊâßË°åÔºå‰ª•ÂèäÈ•±ÂíåÊà™Êñ≠ (sat)ÔºåË∂ÖËøá‰∫ÜËåÉÂõ¥Â∞±ÂÅúÁïôÂú®ÊúÄÂ§ßÊúÄÂ∞èÂÄº„ÄÇoverflow Êåá‰ª§Âè™ÂΩ±ÂìçÊé•‰∏ãÊù•ÁöÑÁ¨¨‰∏ÄÊù°Êåá‰ª§ÔºåËøôÊù°Êåá‰ª§ÊâßË°åÂÆåÂêéÊ∫¢Âá∫Á≠ñÁï•‰ºöÂèòÊàêÈªòËÆ§ÂÄºÊäòËøî (wrap)„ÄÇ Êé•‰∏ãÊù•Êàë‰ª¨ÂàÜÂà´ËØïËØïËøô‰∏§‰∏™Á≠ñÁï•ÁöÑË°å‰∏∫ È•±ÂíåÊà™Êñ≠ SAT1234567891011121314127.0.0.1:6379&gt; set w helloOK127.0.0.1:6379&gt; bitfield w overflow sat incrby u4 2 11) (integer) 11127.0.0.1:6379&gt; bitfield w overflow sat incrby u4 2 11) (integer) 12127.0.0.1:6379&gt; bitfield w overflow sat incrby u4 2 11) (integer) 13127.0.0.1:6379&gt; bitfield w overflow sat incrby u4 2 11) (integer) 14127.0.0.1:6379&gt; bitfield w overflow sat incrby u4 2 11) (integer) 15127.0.0.1:6379&gt; bitfield w overflow sat incrby u4 2 1 # ‰øùÊåÅÊúÄÂ§ßÂÄº1) (integer) 15 Â§±Ë¥•‰∏çÊâßË°å FAIL1234567891011121314127.0.0.1:6379&gt; set w helloOK127.0.0.1:6379&gt; bitfield w overflow fail incrby u4 2 11) (integer) 11127.0.0.1:6379&gt; bitfield w overflow fail incrby u4 2 11) (integer) 12127.0.0.1:6379&gt; bitfield w overflow fail incrby u4 2 11) (integer) 13127.0.0.1:6379&gt; bitfield w overflow fail incrby u4 2 11) (integer) 14127.0.0.1:6379&gt; bitfield w overflow fail incrby u4 2 11) (integer) 15127.0.0.1:6379&gt; bitfield w overflow fail incrby u4 2 1 # ‰∏çÊâßË°å1) (nil) &nbsp; ÊÄùËÄÉ &amp; ‰Ωú‰∏ö Êñá‰∏≠Êàë‰ª¨‰ΩøÁî®‰ΩçÊìç‰ΩúËÆæÁΩÆ‰∫Ü he ‰∏§‰∏™Â≠óÁ¨¶ÔºåËØ∑ËØªËÄÖÂ∞ÜÂÆåÊï¥ÁöÑ hello ÂçïËØç‰∏≠ 5 ‰∏™Â≠óÁ¨¶ÈÉΩ‰ΩøÁî®‰ΩçÊìç‰ΩúËÆæÁΩÆ‰∏Ä‰∏ã„ÄÇ bitfield ÂèØ‰ª•ÂêåÊó∂Ê∑∑ÂêàÊâßË°åÂ§ö‰∏™ set/get/incrby Â≠êÊåá‰ª§ÔºåËØ∑ËØªËÄÖÂ∞ùËØïÂÆåÊàê„ÄÇ]]></content>
      <tags>
        <tag>ËΩ¨Âèë</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â¶Ç‰ΩïÂú®Èù¢ËØï‰∏≠‰ªãÁªçËá™Â∑±ÁöÑÈ°πÁõÆÁªèÈ™å]]></title>
    <url>%2F2018%2F09%2F24%2F%E5%A6%82%E4%BD%95%E5%9C%A8%E9%9D%A2%E8%AF%95%E4%B8%AD%E4%BB%8B%E7%BB%8D%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B9%E7%9B%AE%E7%BB%8F%E9%AA%8C%2F</url>
    <content type="text"><![CDATA[Â¶Ç‰ΩïÂú®Èù¢ËØï‰∏≠‰ªãÁªçËá™Â∑±ÁöÑÈ°πÁõÆÁªèÈ™å‚Äã Âú®Èù¢ËØïÊó∂ÔºåÁªèËøáÂØíÊöÑÂêéÔºå‰∏ÄËà¨Èù¢ËØïÂÆò‰ºöËÆ©‰ªãÁªçÈ°πÁõÆÁªèÈ™å „ÄÇÂ∏∏ËßÅÁöÑÈóÆÊ≥ïÊòØÔºåËØ¥‰∏ã‰Ω†ÊúÄËøëÁöÑÔºàÊàñÊúÄÊãøÂæóÂá∫ÊâãÁöÑÔºâ‰∏Ä‰∏™È°πÁõÆ„ÄÇ ‚Äã Ê†πÊçÆÊàë‰ª¨ÁöÑÈù¢ËØïÁªèÈ™åÔºåÂèëÁé∞Êúâ‰∏çÂ∞ëÂÄôÈÄâ‰∫∫ÂØπÊ≠§Ê≤°ÂáÜÂ§áÔºåËØ¥Ëµ∑Êù•Á£ïÁ£ïÂ∑¥Â∑¥ÔºåÁîöËá≥Êúâ‰∫∫ËØ¥Âá∫È°πÁõÆÁªèÈ™å‰ªéÊó∂Èó¥ÊÆµÊàñÊäÄÊúØÁ≠âÊñπÈù¢ÂíåÁÆÄÂéÜ‰∏äÁöÑ‰∏çÂåπÈÖçÔºåËøôÊ†∑Â∞±‰ºöÈÄ†ÊàêÂ¶Ç‰∏ãÁöÑÂêéÊûú„ÄÇ ‚Äã 1 Á¨¨‰∏ÄÂç∞Ë±°Â∞±‰∏çÂ•Ω‰∫ÜÔºåËá≥Â∞ë‰ºöÊÑüËßâËØ•ÂÄôÈÄâ‰∫∫Ë°®Ëø∞ËÉΩÂäõ‰∏çÂº∫„ÄÇ ‚Äã 2 ‰∏ÄËà¨Êù•ËØ¥ÔºåÈù¢ËØïÂÆò‰ºöÊ†πÊçÆÂÄôÈÄâ‰∫∫‰ªãÁªçÁöÑÈ°πÁõÆËÉåÊôØÊù•ÊèêÈóÆÈ¢òÔºåÂÅáËÆæÈù¢ËØïÊó∂‰ºöÈóÆ10‰∏™ÈóÆÈ¢òÔºåÈÇ£‰πàËá≥Â∞ëÊúâ5‰∏™ÈóÆÈ¢ò‰ºöÊ†πÊçÆÂÄôÈÄâ‰∫∫ÊâÄ‰ªãÁªçÁöÑÈ°πÁõÆËÉåÊôØÊù•ÈóÆÔºåÂÄôÈÄâ‰∫∫Â¶ÇÊûúÊ≤°ËØ¥Â•ΩÔºåÈÇ£‰πàÂ∞±Ê≤°Ê≥ïÂæàÂ•ΩÂú∞ÂºïÂØºÂêéÁªßÈóÆÈ¢ò‰∫ÜÔºåÂ∞±Áõ∏ÂΩì‰∫éÊääÊèêÈóÆÊùÉÂÆåÂÖ®‰∫§ÁªôÈù¢ËØïÂÆò‰∫Ü„ÄÇ ‚Äã Èù¢ËØïÊó∂7‰ªΩÈù†ËÉΩÂäõÔºå3‰ªΩÈù†ÊäÄËÉΩÔºåËÄåÂàöÂºÄÂßãÊó∂ÁöÑ‰ªãÁªçÈ°πÁõÆÂèàÊòØÊäÄËÉΩ‰∏≠ÁöÑÈáç‰∏≠‰πãÈáçÔºåÊâÄ‰ª•Êú¨ÊñáÂ∞Ü‰ªé‚Äú‰ªãÁªç‚ÄùÂíå‚ÄúÂºïÂØº‚Äù‰∏§Â§ßÂ±ÇÈù¢ÂëäËØâÂ§ßÂÆ∂Â¶Ç‰ΩïÂáÜÂ§áÈù¢ËØïÊó∂ÁöÑÈ°πÁõÆ‰ªãÁªç„ÄÇ ‚Äã Â•Ω‰∫ÜÔºåÂ¶Ç‰∏ãÊòØÊ≠£ÊñáÂÜÖÂÆπ„ÄÇ &nbsp; 1 Âú®Èù¢ËØïÂâçÂáÜÂ§áÈ°πÁõÆÊèèËø∞ÔºåÂà´ÂÆ≥ÊÄïÔºåÂõ†‰∏∫Èù¢ËØïÂÆò‰ªÄ‰πàÈÉΩ‰∏çÁü•ÈÅì‚Äã Èù¢ËØïÂÆòÊòØ‰∫∫Ôºå‰∏çÊòØÁ•ûÔºåÊãøÂà∞‰Ω†ÁöÑÁÆÄÂéÜÁöÑÊó∂ÂÄôÔºåÊòØÊ≤°Ê≥ïÊ†∏ÂÆû‰Ω†ÁöÑÈ°πÁõÆÁªÜËäÇÁöÑÔºà‰∏ÄËà¨ÂÖ¨Âè∏‰ºöÂà∞ÂΩïÁî®ÂêéÔºåÁî®ËÉåÊôØË∞ÉÊü•ÁöÑÊñπÂºèÊù•Ê†∏ÂÆûÔºâ„ÄÇÊõ¥‰ΩïÂÜµÔºå‰Ω†ÂÅöÁöÑÈ°πÁõÆÊòØ‰ª•Êúà‰∏∫Âçï‰ΩçÁÆóÁöÑÔºåËÄåÈù¢ËØïÂÆòÊúÄÂ§öÁî®30ÂàÜÈíüÊù•‰ªé‰Ω†ÁöÑÁÆÄÂéÜ‰∏ä‰∫ÜËß£‰Ω†ÁöÑÈ°πÁõÆÁªèÈ™åÔºåÊâÄ‰ª•‰Ω†ÂØπÈ°πÁõÆÁöÑÁÜüÊÇâÁ®ãÂ∫¶Ë¶ÅËøúËøúË∂ÖËøáÈù¢ËØïÂÆòÔºåÊâÄ‰ª•‰Ω†‰∏ÄÁÇπ‰πü‰∏çÁî®Á¥ßÂº†„ÄÇÂ¶ÇÊûú‰Ω†ÁöÑÂ∑•‰ΩúÁªèÈ™åÊØîÈù¢ËØïÂÆòËøò‰∏∞ÂØåÁöÑËØùÔºåÁîöËá≥ËøòÂèØ‰ª•ÊéßÂà∂Êï¥‰∏™Èù¢ËØïÊµÅÁ®ãÔºàÁ¨îËÄÖÂú®Èù¢ËØïÊñπÈù¢ÊàêÁ≤æÂêé‰πüÁªèÂ∏∏Âπ≤ËøôÁßç‰∫ãÊÉÖÔºåÂ§ßÂÆ∂‰∏ÄÂÆö‰πüËÉΩË°åÔºâ„ÄÇ ‰Ω† Èù¢ËØïÂÆò ÂØπ‰Ω†‰ª•ÂâçÁöÑÈ°πÁõÆÂíåÊäÄËÉΩ Âæà‰∫ÜËß£ Âè™ËÉΩÂê¨‰Ω†ËØ¥ÔºåÂè™ËÉΩÊ†πÊçÆ‰Ω†ËØ¥ÁöÑÂÜÖÂÆπÂÅöÂá∫Âà§Êñ≠ Âú®Èù¢ËØïËøáÁ®ã‰∏≠ÁöÑËÅåË¥£ Âú®ÂæàÁü≠ÁöÑÊó∂Èó¥ÂÜÖÈò≤ÂÆàÊàêÂäüÂç≥ÂèØ Â¶ÇÊûúÊâæ‰∏çÂá∫ÊºèÊ¥ûÔºåÂ∞±Âè™ËÉΩÁÆó‰Ω†‰ª•ÂâçÂÅöËøá ÂáÜÂ§áÊó∂Èó¥ Èù¢ËØïÂâç‰Ω†ÊúâÂÖÖË∂≥ÁöÑÊó∂Èó¥ÂáÜÂ§á ‰∏ÄËà¨Âú®Èù¢ËØïÂâçÁî®30ÂàÜÈíüÈòÖËØª‰Ω†ÁöÑÁÆÄÂéÜ Ê≤üÈÄöËøáÁ®ã ‰Ω†ÂèØ‰ª•Âá∫ÈîôÔºå‰ΩÜÂà´Âá∫ÂÖ≥ÈîÆÊÄßÁöÑÈîôËØØ ‰∏ç‰ºöÂ§™‰∏∫Èöæ‰Ω†ÔºåÈô§Èùû‰Ω†Â§™Â∑Æ ÊäÄÂ∑ß ‰Ω†ÊúâË∂≥Â§üÁöÑÊäÄÂ∑ßÔºå‰πüÂèØ‰ª•‰ªéÁΩë‰∏äÊâæÂà∞Ë∂≥Â§üÂ§öÁöÑÈù¢ËØïÈ¢ò ÂÖ∂ÂÆûÂ∞±ÈóÆ‰∫õÈÄöÁî®ÁöÑÊúâËßÑÂæãÁöÑÈóÆÈ¢ò ‚Äã Êó¢ÁÑ∂Èù¢ËØïÂÆòÊó†Ê≥ï‰∫ÜËß£‰Ω†ÁöÑÂ∫ïÁªÜÔºåÈÇ£‰πà‰ªñ‰ª¨ÊÄé‰πàÊù•È™åËØÅ‰Ω†ÁöÑÈ°πÁõÆÁªèÈ™åÂíåÊäÄÊúØÔºü‰∏ãÈù¢ÊÄªÁªì‰∫Ü‰∏Ä‰∫õÂ∏∏Áî®ÁöÑÊèêÈóÆÊñπÂºè„ÄÇ ÊèêÈóÆÊñπÂºè ÁõÆÁöÑ ËÆ©‰Ω†ÊèèËø∞Â∑•‰ΩúÁªèÈ™åÂíåÈ°πÁõÆÔºàÊûÅÊúâÂèØËÉΩÊòØÊúÄËøëÁöÑÔºâÔºåÁúãÁúã‰Ω†ËØ¥ÁöÑÊòØÂê¶ÂíåÁÆÄÂéÜ‰∏ä‰∏ÄËá¥ Áúã‰Ω†ÊòØÂê¶ÁúüÁöÑÂÅöËøáËøô‰∫õÈ°πÁõÆ Áúã‰Ω†ÁÆÄÂéÜ‰∏äÈ°πÁõÆÈáåÁî®Âà∞ÁöÑÊäÄÊúØÔºåÊØîÂ¶ÇÊ°ÜÊû∂„ÄÅÊï∞ÊçÆÂ∫ìÔºåÁÑ∂ÂêéÈíàÂØπËøô‰∫õÊäÄÊúØÊèê‰∫õÂü∫Êú¨ÈóÆÈ¢ò ËøòÊòØÈ™åËØÅ‰Ω†ÊòØÂê¶ÂÅöËøáÈ°πÁõÆÔºåÂêåÊó∂Áúã‰Ω†ÊòØÂê¶‰∫ÜËß£Ëøô‰∫õÊäÄÊúØÔºå‰∏∫Ëøõ‰∏ÄÊ≠•ÊèêÈóÆÂÅöÂáÜÂ§á ÈíàÂØπÊüê‰∏™È°πÁõÆÔºå‰∏çÊñ≠Ê∑±ÂÖ•Âú∞ÈóÆ‰∏Ä‰∫õÊäÄÊúØ‰∏äÁöÑÈóÆÈ¢òÔºåÊàñËÄÖ‰ªé‰∏çÂêå‰æßÈù¢ÈóÆ‰∏Ä‰∫õÊäÄÊúØÂÆûÁé∞ÔºåÁúã‰Ω†ÂâçÂêéÂõûÁ≠îÈáåÈù¢ÊòØÂê¶ÊúâÁüõÁõæ Ê∑±ÂÖ•Ê†∏ÂÆû‰Ω†ÁöÑÈ°πÁõÆÁªÜËäÇ ÈíàÂØπÊüêÊäÄÊúØÔºåÈóÆ‰∫õÈ°πÁõÆÈáå‰∏ÄÂÆö‰ºöÈÅáÂà∞ÁöÑÈóÆÈ¢òÔºåÊØîÂ¶ÇÂÄôÈÄâ‰∫∫ËØ¥ÂÅöËøáÊï∞ÊçÆÂ∫ìÔºåÈÇ£‰πàÂ∞±‰ºöÈóÆÁ¥¢ÂºïÊñπÈù¢ÁöÑÈóÆÈ¢ò ÈÄöËøáËøôÁ±ªÈóÆÈ¢òÔºåÊ†∏ÂÆûÂÄôÈÄâ‰∫∫ÊòØÂê¶ÁúüÁöÑÊúâËøáÈ°πÁõÆÁªèÈ™åÔºàÊàñËÄÖËøò‰ªÖ‰ªÖÊòØÂ≠¶‰π†ÁªèÈ™åÔºâ &nbsp; 2 ÂáÜÂ§áÈ°πÁõÆÁöÑÂêÑÁßçÁªÜËäÇÔºå‰∏ÄÊó¶Ë¢´ÈóÆÂÄí‰∫ÜÔºåÂ∞±ËØ¥Êòé‰Ω†Ê≤°ÂÅöËøá‚Äã ‰∏ÄËà¨Êù•ËØ¥ÔºåÂú®Èù¢ËØïÂâçÔºåÂ§ßÂÆ∂Â∫îÂΩìÂáÜÂ§áÈ°πÁõÆÊèèËø∞ÁöÑËØ¥ËæûÔºåËá™‰ø°‰∫õÔºåÂõ†‰∏∫ËøôÈÉ®ÂàÜ‰Ω†ËØ¥‰∫ÜÁÆóÔºåÊµÅÂà©‰∫õÔºåÂõ†‰∏∫‰Ω†ÁªèËøáÂÖÖÂàÜÂáÜÂ§áÂêéÔºåÂèØ‰ª•Áü•ÈÅì‰Ω†Ë¶ÅËØ¥‰∫õ‰ªÄ‰πà„ÄÇËÄå‰∏îËøô‰∫õÊòØ‰Ω†ÂÆûÈôÖÁöÑÈ°πÁõÆÁªèÈ™åÔºà‰∏çÊòØÂ≠¶‰π†ÁªèÈ™åÔºå‰πü‰∏çÊòØÂüπËÆ≠ÁªèÈ™åÔºâÔºåÈÇ£‰πà‰∏ÄÊó¶ËÆ©Èù¢ËØïÂÆòÊÑüËßâ‰Ω†ÈÉΩËØ¥‰∏ç‰∏äÊù•ÔºåÈÇ£‰πàÂèØ‰ø°Â∫¶Â∞±Âæà‰Ωé‰∫Ü„ÄÇ ‚Äã ‰∏çÂ∞ë‰∫∫ÊòØÊãòÊ≥•‰∫é‚ÄúÈ°πÁõÆÈáåÂÅö‰∫Ü‰ªÄ‰πà‰∏öÂä°Ôºå‰ª•Âèä‰ª£Á†ÅÂÆûÁé∞ÁöÑÁªÜËäÇ‚ÄùÔºåËøôÂ∞±Áõ∏ÂΩì‰∫éÊääÂêéÁªßÊèêÈóÆÊùÉÁõ¥Êé•‰∫§ÁªôÈù¢ËØïÂÆò„ÄÇ‰∏ãË°®ÂàóÂá∫‰∫Ü‰∏Ä‰∫õ‰∏çÂ•ΩÁöÑÂõûÁ≠îÊñπÂºè„ÄÇ ÂõûÁ≠îÊñπÂºè ÂêéÊûú ÊàëÂú®XXËΩØ‰ª∂ÂÖ¨Âè∏ÂÅö‰∫ÜXXÈó®Êà∑ÁΩëÁ´ôÈ°πÁõÆÔºåËøô‰∏™È°πÁõÆÂÅöÂà∞‰∫ÜXXÂäüËÉΩÔºåÂÖ∑‰ΩìÊòØXXÂíåXXÊ®°ÂùóÔºåÂêÑÊ®°ÂùóÂÅö‰∫ÜXXÂäüËÉΩÔºåÂÆ¢Êà∑ÊòØXXÔºåÊúÄÂêéËøô‰∏™È°πÁõÆÊå£‰∫ÜXXÈí± Áõ¥Êé•ÊâìÊñ≠ÔºåÂõ†‰∏∫‰∏öÂä°ÈúÄÊ±ÇÊàë‰∏çÈúÄË¶Å‰∫ÜËß£ÔºåÊàë‰ºöÁõ¥Êé•ÈóÆ‰ªñÈ°πÁõÆÈáåÁöÑÊäÄÊúØ ÔºàÈúÄË¶ÅÊãõËÅò‰∏Ä‰∏™JavaÂêéÁ´ØÂºÄÂèëÔºå‰ºöSpring MVCÔºâÊúÄËøë‰∏Ä‰∏™È°πÁõÆÊàëÊòØÁî®C#ÔºàÊàñÂÖ∂‰ªñÈùûJavaÊäÄÊúØÔºâÂÆûÁé∞ÁöÑÔºåÂÆûÁé∞‰∫Ü‚Ä¶‚Ä¶ÊàñËÄÖÊàëÊúÄËøëÂÅöÁöÑ‰∏çÊòØÂºÄÂèëÔºåËÄåÊòØÊµãËØï‚Ä¶‚Ä¶ÊàñËÄÖÊàëÊúÄËøëÁöÑÈ°πÁõÆÊ≤°ÊúâÁî®Âà∞Spring MVC ÊèêÈóÆÔºå‰Ω†ÊúÄËøëÁî®Âà∞SSHÊäÄÊúØÁöÑÈ°πÁõÆÊòØ‰ªÄ‰πàÊó∂ÂÄôÔºåÁÑ∂ÂêéÂú®ËØÑËØ≠‰∏äÂÜôÔºöÊúÄËøëXXÊó∂Èó¥Ê≤°Êé•Ëß¶ËøáSSH Âú®ÊØï‰∏öËÆæËÆ°ÁöÑÊó∂ÂÄôÔºàÊàñËÄÖÂú®ËØª‰π¶ÁöÑÊó∂ÂÄôÔºåÂú®Â≠¶‰π†ÁöÑÊó∂ÂÄôÔºåÂú®XXÂüπËÆ≠Â≠¶Ê†°ÔºåÂú®XXÂÆûËÆ≠ËØæÁ®ã‰∏≠ÔºâÔºå‚Ä¶‚Ä¶ Áõ¥Êé•ÊâìÊñ≠ÔºåÊèêÈóÆ‰Ω†Ëøô‰∏™ÊòØÂê¶ÊòØÂïÜ‰∏öÈ°πÁõÆÔºåÂ¶ÇÊûú‰∏çÊòØÔºå‰Ω†ÊúâÊ≤°ÊúâÂÖ∂‰ªñÁöÑÂïÜ‰∏öÁªèÈ™å„ÄÇÂ¶ÇÊûúÊ≤°ÂïÜ‰∏öÈ°πÁõÆÁªèÈ™åÔºåÈô§ÈùûÊòØÊ†°ÊãõÔºåÂê¶ÂàôÂ∞±Áõ¥Êé•ÁªìÊùüÈù¢ËØï ÊèèËø∞È°πÁõÆÊó∂Ôºå‰∏Ä‰∫õÂÖ≥ÈîÆË¶ÅÁ¥†ÔºàÊØîÂ¶ÇÂÖ¨Âè∏„ÄÅÊó∂Èó¥„ÄÅÊâÄÁî®ÊäÄÊúØÁ≠âÔºâÂíåÁÆÄÂéÜ‰∏äÁöÑ‰∏çÂåπÈÖç Êàë‰ª¨‰ºöÊ∑±Á©∂Ëøô‰∏™‰∏ç‰∏ÄËá¥ÁöÑÊÉÖÂÜµÔºåÂ¶ÇÊûúÊòØÁÆÄÂéÜÈÄ†ÂÅáÔºåÈÇ£‰πàÂèØËÉΩÁõ¥Êé•‰∏≠Êñ≠Èù¢ËØïÔºåÂ¶ÇÊûúÁúüÁöÑÊòØÁ¨îËØØÔºåÈÇ£‰πàÂ∞±ÈúÄË¶ÅÊèê‰æõÂêàÁêÜÁöÑËß£Èáä ‚Äã Âú®ÈÅøÂÖç‰∏äËø∞‰∏çÂ•ΩÁöÑÂõûÁ≠îÁöÑÂêåÊó∂ÔºåÂ§ßÂÆ∂ÂèØ‰ª•Êåâ‰∏ãË°®ÊâÄÁªôÂá∫ÁöÑË¶ÅÁ¥†ÂáÜÂ§áÈ°πÁõÆ‰ªãÁªç„ÄÇÂ¶ÇÊûúÂèØ‰ª•Ôºå‰πüËØ∑Â§ßÂÆ∂ÂáÜÂ§á‰∏Ä‰∏ãÁî®Ëã±ËØ≠ÊèèËø∞„ÄÇÂÖ∂ÂÆûÂàöÊØï‰∏öÁöÑÂ≠¶ÁîüÔºåÊàñËÄÖÂ∑•‰ΩúÁªèÈ™åËæÉÂ∞ëÁöÑ‰∫∫ÔºåËã±ËØ≠ËÉΩÂäõÈÉΩÂ∑Æ‰∏çÂ§öÔºå‰ΩÜ‰Ω†ËØ¥‰∫ÜÔºåËøôÂ∞±ÊòØË¥®ÁöÑËøõÊ≠•„ÄÇ Ë¶ÅÁ¥† Ê†∑Âºè ÊéßÂà∂Âú®1ÂàÜÈíüÈáåÈù¢ÔºåËÆ≤Âá∫È°πÁõÆÂü∫Êú¨ÊÉÖÂÜµÔºåÊØîÂ¶ÇÈ°πÁõÆÂêçÁß∞ÔºåËÉåÊôØÔºåÁªôÂì™‰∏™ÂÆ¢Êà∑ÂÅöÔºåÂÆåÊàê‰∫ÜÂü∫Êú¨ÁöÑ‰∫ãÊÉÖÔºåÂÅö‰∫ÜÂ§ö‰πÖÔºåÈ°πÁõÆËßÑÊ®°Â§öÂ§ßÔºåÁî®Âà∞Âì™‰∫õÊäÄÊúØÔºåÊï∞ÊçÆÂ∫ìÁî®‰ªÄ‰πàÔºåÁÑ∂ÂêéÈÖåÊÉÖÁÆÄÂçïËØ¥‰∏Ä‰∏ãÊ®°Âùó„ÄÇÈáçÁÇπÁ™ÅÂá∫ËÉåÊôØÔºåÊäÄÊúØÔºåÊï∞ÊçÆÂ∫ìÂíåÂÖ∂‰ªñÂíåÊäÄÊúØÊúâÂÖ≥ÁöÑ‰ø°ÊÅØ„ÄÇ ÊàëÂú®XXÂÖ¨Âè∏ÂÅö‰∫ÜXXÂ§ñÊ±á‰øùËØÅÈáë‰∫§ÊòìÂπ≥Âè∞ÔºåÂÆ¢Êà∑ÊòØXXÈì∂Ë°åÔºå‰∏ªË¶ÅÂÆåÊàê‰∫ÜÊåÇÁõòÔºåÂÆûÁõòÊàê‰∫§Ôºå‰øùËØÅÈáëÊù†ÊùÜÊàê‰∫§Á≠âÂäüËÉΩÔºåÊï∞ÊçÆÂ∫ìÊòØOracleÔºåÂâçÂè∞Áî®Âà∞JSÁ≠âÊäÄÊúØÔºåÂêéÂè∞Áî®Âà∞JavaÁöÑSSHÔºåÂá†‰∏™‰∫∫ÂÅö‰∫ÜX‰∏™Êúà„ÄÇ‰∏çÈúÄË¶ÅËØ¶ÁªÜÊèèËø∞ÂêÑÂäüËÉΩÊ®°ÂùóÔºå‰∏çÈúÄË¶ÅËØ¥Â§™Â§öÂíå‰∏öÂä°ÊúâÂÖ≥‰ΩÜÂíåÊäÄÊúØÊó†ÂÖ≥ÁöÑ„ÄÇÂ¶ÇÊûúÈù¢ËØïÂÆòÊÑüÂÖ¥Ë∂£ÔºåÁ≠â‰ªñÈóÆ„ÄÇ Ë¶Å‰∏ªÂä®ËØ¥Âá∫‰Ω†ÂÅö‰∫ÜÂì™‰∫õ‰∫ãÊÉÖÔºåËøôÈÉ®ÂàÜÁöÑÊèèËø∞‰∏ÄÂÆöÈúÄË¶ÅÂíå‰Ω†ÁöÑÊäÄÊúØËÉåÊôØ‰∏ÄËá¥„ÄÇ ÊàëÂÅö‰∫ÜÂ§ñÊ±áÂÆûÁõò‰∫§ÊòìÁ≥ªÁªüÔºåÊåÇÂçïÊàê‰∫§Á≥ªÁªüÔºåXXXÊ®°ÂùóÔºåÂÅö‰∫ÜX‰∏™Êúà ÊèèËø∞‰Ω†Âú®È°πÁõÆÈáåÁöÑËßíËâ≤ Êàë‰∏ªË¶ÅÊòØÂÅö‰∫ÜÂºÄÂèëÔºå‰ΩÜÂú®ÂºÄÂèëÂâçÔºåÊàëÂú®È°πÁõÆÁªèÁêÜÁöÑÂ∏¶È¢Ü‰∏ãÂèÇ‰∏é‰∫Ü‰∏öÂä°Ë∞ÉÁ†îÔºåÊï∞ÊçÆÂ∫ìËÆæËÆ°Á≠âÂ∑•‰ΩúÔºåÂêéÊúüÊàëÂèÇ‰∏é‰∫ÜÊµãËØïÂíåÈÉ®ÁΩ≤Â∑•‰Ωú„ÄÇ ÂèØ‰ª•ÊèèËø∞Áî®Âà∞ÁöÑÊäÄÊúØÁªÜËäÇÔºåÁâπÂà´ÊòØ‰Ω†Áî®Âà∞ÁöÑÊäÄÊúØÁªÜËäÇÔºåËøôÈÉ®ÂàÜÂ∞§ÂÖ∂Ë¶ÅÊ≥®ÊÑèÔºå‰Ω†ËØ¥Âá∫Âè£ÁöÑÔºå‰∏ÄÂÆöË¶ÅÁü•ÈÅìÔºåÂõ†‰∏∫Èù¢ËØïÂÆòÂêéÈù¢Â∞±Ê†πÊçÆËøô‰∏™ÈóÆÁöÑ„ÄÇ‰Ω†Â¶ÇÊûúÂÅö‰∫Ü5‰∏™Ê®°ÂùóÔºåÂÆÅÂèØÂè™ËØ¥‰Ω†ËÉΩÁÜüÁªÉËØ¥‰∏äÂè£ÁöÑ2‰∏™„ÄÇ Áî®Âà∞‰∫ÜJavaÈáåÈù¢ÁöÑÈõÜÂêàÔºåJDBCÔºå‚Ä¶Á≠âÊäÄÊúØÔºåÁî®Âà∞‰∫ÜSpring MVCÁ≠âÊ°ÜÊû∂ÔºåÁî®ÊäÄÊúØËøûÊé•Êï∞ÊçÆÂ∫ì„ÄÇ ËøôÈÉ®ÂàÜ‰Ω†È£éÈô©Ëá™Â∑±ÊâøÊãÖÔºåÂ¶ÇÊûúÂèØ‰ª•Ôºå‰∏çÈú≤Â£∞Ëâ≤ËØ¥Âá∫‰∏Ä‰∫õÁÉ≠Èó®ÁöÑË¶ÅÁ¥†ÔºåÊØîÂ¶ÇLinuxÔºåÂ§ßÊï∞ÊçÆÔºåÂ§ßËÆøÈóÆÂéãÂäõÁ≠â„ÄÇ‰ΩÜ‰∏ÄÊó¶‰Ω†ËØ¥‰∫ÜÔºåÈù¢ËØïÂÆòÂ∞±‰ºöÁõ¥Êé•ÈóÆÁªÜËäÇ„ÄÇ Ëøô‰∏™Á≥ªÁªüÈáåÔºåÈÉ®ÁΩ≤Âú®Linux‰∏äÔºåÊØèÂ§©Ë¶ÅÂ§ÑÁêÜÁöÑÊï∞ÊçÆÈáèÊòØXXÔºåË¶ÅÊ±ÇÊòØÂú®4Â∞èÊó∂Ôºå1GÂÜÖÂ≠òÊòØÁöÑÊÉÖÂÜµ‰∏ãÂ§ÑÁêÜÂÆå5ÂçÉ‰∏áÊù°Êï∞ÊçÆ„ÄÇÂπ≥ÂùáËÆøÂÆ¢ÊòØÊØèÂàÜÈíüXXX„ÄÇ ‚Äã Èù¢ËØïÂâçÔºå‰Ω†‰∏ÄÂÆöË¶ÅÂáÜÂ§áÔºå‰∏ÄÂÆöË¶ÅÊúâËá™‰ø°Ôºå‰ΩÜ‰πüË¶ÅÈÅøÂÖçÂ¶Ç‰∏ãÁöÑ‰∏Ä‰∫õÊÉÖÂÜµ„ÄÇ Ë¶ÅÈÅøÂÖçÁöÑÊÉÖÂÜµ Ê≠£Á°ÆÁöÑÂÅöÊ≥ï ÂéüÂõ† ÂõûÁ≠îÂæàÁÆÄÂçï„ÄÇÈóÆ‰ªÄ‰πàÁ≠î‰ªÄ‰πàÔºåÂæÄÂæÄÂ∞±Áî®‰∏ÄÂè•ËØùÂõûÁ≠î Êää‰Ω†Áü•ÈÅìÁöÑÈÉΩËØ¥Âá∫Êù•ÔºåÈáçÁÇπÁ™ÅÂá∫‰Ω†Áü•ÈÅìÁöÑÊÄùÊÉ≥ÔºåÊ°ÜÊû∂ ÈóÆÔºö‰Ω†SSHÁî®ËøáÂêóÔºüÁ≠îÔºöÁî®Ëøá„ÄÇÈóÆÔºöÂú®‰ªÄ‰πàÈ°πÁõÆÈáåÁî®Âà∞ÔºüÁ≠îÔºö‰∏Ä‰∏™‰øùÈô©È°πÁõÆÈóÆÔºö‰Ω†ÂÅö‰∫ÜÂì™ÊñπÈù¢ÁöÑ‰∫ãÊÉÖÔºüÁ≠îÔºöÂºÄÂèëÊàëÁõ¥Êé•‰∏çÈóÆ‰∫Ü ËØ¥ÂæóÂ§™ÊµÅÂà© ÈÄÇÂΩìÂÅúÈ°øÔºåËæπÊÄùËÄÉËæπËØ¥ ËÆ©Èù¢ËØïÂÆòÊÑüËßâ‰Ω†Âú®ËÉåÂáÜÂ§áÁöÑ‰∏úË•øÔºåËøôÊ†∑ÂêéÈù¢ÈóÆÈ¢òÂ∞±ÂæàÈöæ È°πÁõÆ‰ªãÁªçÊó∂‰ªÄ‰πàÈÉΩËØ¥Ôºå Â∞±ËØ¥‰∫õÂàöÊâçËÆ©ÂáÜÂ§áÁöÑ‰∏Ä‰∫õÔºåËÄå‰∏îË¶ÅÊúâÈÄªËæëÂú∞ËØ¥ ‰ºöËÆ©Èù¢ËØïÂÆòÊÑüËßâ‰Ω†ÊÄùË∑ØÂ§™‰π± Âà´Â§™Â§ö‰ªãÁªçÊäÄÊúØÁªÜËäÇÔºåÂ∞±ËØ¥‰Ω†ÁÜüÊÇâÁöÑÊäÄÊúØ ÊäÄÊúØÈù¢ÁÇπÂà∞‰∏∫Ê≠¢ÔºåÁ≠âÈù¢ËØïÂÆòÊù•ÈóÆ ‰Ω†ËØ¥Âà∞ÁöÑÊâÄÊúâÊäÄÊúØË¶ÅÁÇπÔºåÈÉΩÂèØËÉΩ‰ºöË¢´Ê∑±ÈóÆ„ÄÇÈù¢ËØïÂÆò‰∏ÄËà¨‰ºöÊúâËá™Â∑±ÁöÑÈù¢ËØïËäÇÂ•èÔºåÂ¶ÇÊûú‰Ω†Âú®‰ªãÁªçÊó∂Â∞±Â§™Â§öËØ¥ÊäÄÊúØÁªÜËäÇÔºåÂæàÊúâÂèØËÉΩË¢´ÊâìÊñ≠Ôºå‰ªéËÄåÊ≤°Ê≥ïËØ¥Âá∫‰Ω†ÂáÜÂ§áÂ•ΩÁöÑ‰∫ÆÁÇπ„ÄÇ &nbsp; 3 ‰∏çÈú≤ÁóïËøπÂú∞ËØ¥Âá∫Èù¢ËØïÂÆòÁà±Âê¨ÁöÑËØù‚Äã Âú®È°πÁõÆ‰ªãÁªçÁöÑÊó∂ÂÄôÔºàÂΩìÁÑ∂ÂåÖÊã¨ÂêéÁªßÁöÑÈù¢ËØïÔºâÔºåÈù¢ËØïÂÆòÂÖ∂ÂÆûÂæàÊÉ≥Ë¶ÅÂê¨‰∏Ä‰∫õÂÖ≥ÈîÆÁÇπÔºåÂè™Ë¶Å‰Ω†ËØ¥Âá∫Êù•ÔºåËÄå‰∏îÂõûÁ≠îÁõ∏ÂÖ≥ÈóÆÈ¢òÊØîËæÉÂ•ΩÔºåËøôÁªùÂØπÊòØÂä†ÂàÜÈ°π„ÄÇÊàëÂú®Èù¢ËØïÂà´‰∫∫ÁöÑÊó∂ÂÄôÔºå‰∏ÄÊó¶Ëøô‰∫õÂÖ≥ÈîÆÁÇπÂæóÂà∞Á°ÆËÆ§ÔºåÊàëÊòØÁªùÂØπ‰ºöÂú®ËØÑËØ≠‰∏äÂä†‰∏ä‰∏ÄÁ¨îÁöÑ„ÄÇ ‚Äã ‰∏ãÈù¢Âàó‰∫õÈù¢ËØïÂÆòÁà±Âê¨ÁöÑÂÖ≥ÈîÆÁÇπÂíåÂØπÂ∫îÁöÑËØ¥Ëæû„ÄÇ ÂÖ≥ÈîÆÁÇπ ËØ¥Ëæû ËÉΩËÄÉËôëÂà∞‰ª£Á†ÅÁöÑÊâ©Â±ïÊÄßÔºåÊúâÂèÇ‰∏éÊ°ÜÊû∂ËÆæËÆ°ÁöÑÊÑèËØÜ ÊàëÁöÑÈ°πÁõÆXX‰øùÈô©È°πÁõÆÔºåÁî®Âà∞SSHÊäÄÊúØÔºåÊï∞ÊçÆÂ∫ìÊòØOracleÔºåÔºàËøô‰∏™ÊòØÈì∫Âû´ÔºâÔºåÂºÄÂèëÁöÑÊó∂ÂÄôÔºåÊàë‰ºöÂÖàÂíåÈ°πÁõÆÁªèÁêÜ‰∏ÄËµ∑ËÆæËÆ°Ê°ÜÊû∂ÔºåÂπ∂ÂèÇ‰∏é‰∫ÜÊ°ÜÊû∂ÁöÑÊûÑÂª∫ÔºåËøûÊé•Êï∞ÊçÆÂ∫ìÁöÑÊó∂ÂÄôÔºåÊàë‰ª¨Áî®Âà∞‰∫ÜDAOÔºåËøôÊ†∑ÂÅöÁöÑÁêÜÁî±ÊòØÔºåÊääSQLËØ≠Âè•Â∞ÅË£ÖÂà∞DAOÂ±ÇÔºå‰∏ÄÊó¶Ë¶ÅÊâ©Â±ïÂäüËÉΩÊ®°ÂùóÔºåÂ∞±ÂèØ‰ª•‰∏çÁî®ÂÅöÂ§™Â§öÁöÑÊîπÂä®„ÄÇ ÊúâË∞É‰ºòÊÑèËØÜÔºåËÉΩÈÄöËøáÁõëÊéßÂèëÁé∞ÈóÆÈ¢òÁÇπÔºåÁÑ∂ÂêéËß£ÂÜ≥ Âú®ÂºÄÂèëÈò∂ÊÆµÔºåÊàëÂ∞±Ê≥®ÊÑèÂà∞ÂÜÖÂ≠òÁöÑÊÄßËÉΩÈóÆÈ¢òÂíåSQLËøêË°åÁöÑÊó∂Èó¥ÈóÆÈ¢òÔºåÂú®ÂéãÂäõÊµãËØïÈò∂ÊÆµÔºåÊàë‰ºöÈÄöËøáxxÂ∑•ÂÖ∑Êù•ÁõëÊéßÂÜÖÂ≠òÂíåÊï∞ÊçÆÂ∫ìÔºåÂèëÁé∞ÂæÖÊèêÂçáÁöÑ‰ª£Á†ÅÁÇπÔºåÁÑ∂ÂêéÈÄöËøáÊü•ËµÑÊñôÊù•‰ºòÂåñ„ÄÇÊúÄÂêéÁ≠âÈ°πÁõÆ‰∏äÁ∫øÂêéÔºåÊàë‰ª¨‰ºöÈÉ®ÁΩ≤ÁõëÊéßÁ≥ªÁªüÔºå‰∏ÄÊó¶ÂèëÁé∞ÂÜÖÂ≠òÂíåÊï∞ÊçÆÂ∫ìÈóÆÈ¢òÔºåÊàë‰ª¨‰ºöÁ¨¨‰∏ÄÊó∂Èó¥Ëß£ÂÜ≥„ÄÇ Âä®ÊâãËÉΩÂäõÂæàÂº∫ÔºåËÇØÂπ≤Ê¥ªÔºå‰ºöÁöÑ‰∏úË•øÊØîËæÉÂ§öÔºåÂõ¢ÈòüÂêà‰ΩúÁ≤æÁ•ûÊØîËæÉÂ•Ω Âú®È°πÁõÆÈáåÔºåÊàë‰∏ç‰ªÖË¶ÅÂÅöÂºÄÂèëÁöÑÂ∑•‰ΩúÔºåËÄå‰∏îÈúÄË¶ÅËá™Â∑±ÊµãËØïÔºåÈúÄË¶ÅËá™Â∑±Ê†πÊçÆ‰∏Ä‰∫õÊó•ÂøóÁöÑËæìÂá∫Âà∞Êï∞ÊçÆÂ∫ìÊàñJavaÁ´ØÂéªdebugÔºåÂΩìÊàëÂºÄÂ•Ω‰∏Ä‰∏™Ê®°ÂùóÊó∂ÔºåÈúÄË¶ÅËá™Â∑±ÈÉ®ÁΩ≤Âà∞Linux‰∏äÊµãËØï„ÄÇÊàñËÄÖÔºå‰∏ÄÊó¶ÈÅáÂà∞ÈóÆÈ¢òÔºåÂ¶ÇÊûúÊòØ‰∏öÂä°ÊñπÈù¢ÁöÑÔºåÊàë‰ºöÂèäÊó∂ÂíåÈ°πÁõÆÁªèÁêÜÊ≤üÈÄöÔºåÂ¶ÇÊûúÊòØÊäÄÊúØÊñπÈù¢ÁöÑÔºåÊàë‰ºöËá™Â∑±Êü•ËµÑÊñôÔºåÂ¶ÇÊûúÊòØÊµãËØïÊñπÈù¢ÁöÑÔºåÊàë‰ºöÂèäÊó∂ÂíåÊµãËØïÁöÑ‰∫∫Ê≤üÈÄö„ÄÇ Ë¥£‰ªªÂøÉÊØîËæÉÂº∫ÔºåËÉΩÈÄÇÂ∫îÂ§ßÂéãÂäõÁöÑÁéØÂ¢É Ë¢´ÈóÆ‚Äú‰Ω†Â¶ÇÊûúÂú®È°πÁõÆÈáåÈÅáÂà∞ÈóÆÈ¢òÊÄé‰πàÂäûÔºü‚ÄùÂõûÁ≠îÔºöÈÅáÂà∞ÈóÆÈ¢òÊàëÂÖàÊü•ËµÑÊñôÔºåÂ¶ÇÊûúÂÆûÂú®Ê≤°Ê≥ïËß£ÂÜ≥Ôºå‰∏ç‰ºöÊãñÔºå‰ºöÂèäÊó∂ÈóÆÁõ∏ÂÖ≥ÁöÑ‰∫∫ÔºåÂç≥‰ΩøÂä†Áè≠Ôºå‰πü‰ºöÂú®ËßÑÂÆöÁöÑÊó∂Èó¥ÂÜÖËß£ÂÜ≥„ÄÇ Êúâ‰∏ªËßÅÔºåËÉΩ‰∏çÊñ≠Êé¢Á¥¢Êñ∞ÁöÑÁü•ËØÜ Âú®È°πÁõÆÈáåÔºåÊàë‰ºöÂú®‰øùËØÅËøõÂ∫¶ÁöÑÂâçÊèê‰∏ãÂíåÈ°πÁõÆÁªèÁêÜËØ¥ÊàëÁöÑÊÉ≥Ê≥ïÔºåÊèêÂá∫ÊàëÁöÑËß£ÂÜ≥ÊñπÊ°à„ÄÇÂú®ÂºÄÂèëËøáÁ®ã‰∏≠ÔºåÊàë‰ºöÂÖàÊÄùËÄÉ‰∏Ä‰∏ãÔºåÁî®‰∏ÄÁßçÊØîËæÉÂ•ΩÁöÑÊñπÂºèÔºåÊØîÂ¶ÇÊïàÁéáÊúÄÈ´òÁöÑÊñπÊ≥ïÂÆûÁé∞„ÄÇÂè¶Â§ñ‰Ω†Ë¶ÅÊâæÊú∫‰ºöËØ¥Âá∫ÔºöÂπ≥Êó∂Êàë‰ºö‰∏çÊñ≠Áúã‰∏Ä‰∫õÊñ∞ÊäÄÊúØÔºàÊØîÂ¶ÇÂ§ßÊï∞ÊçÆHadoopÔºâÔºå‰ºö‰∏çÊñ≠Ê∑±ÂÖ•‰∫ÜËß£‰∏Ä‰∫õÊ°ÜÊû∂ÂíåÊäÄÊúØÁöÑÂÆûÁé∞Â∫ïÂ±Ç„ÄÇ &nbsp; 4 ‰∏ÄÂÆöË¶Å‰∏ªÂä®ÔºåÈù¢ËØïÂÆòÊ≤°Êúâ‰πâÂä°ÊåñÊéò‰Ω†ÁöÑ‰∫ÆÁÇπ‚Äã ÊàëÂéªÈù¢ËØï‰∫∫ÂÆ∂ÁöÑÊó∂ÂÄôÔºåÂæÄÂæÄ‰ºöÁâπÂà´ÊèêÈóÆÔºö‰Ω†È°πÁõÆÈáåÊúâ‰ªÄ‰πà‰∫ÆÁÇπÔºüÊàñËÄÖ‰Ω†‰Ωú‰∏∫Â∫îËÅòËÄÖÔºåÊúâ‰ªÄ‰πàÂÖ∂‰ªñÂä†ÂàÜÈ°πËÉΩÂ∏Æ‰Ω†ÊàêÂäüÂ∫îËÅòÂà∞Ëøô‰∏™Â≤ó‰Ωç„ÄÇÂç≥‰ΩøËøôÊ†∑ÈóÆÔºåËøòÊúâ‰∫õ‰∫∫Áõ¥Êé•ËØ¥Ê≤°Êúâ„ÄÇ ‚Äã ÊàëËøôÊ†∑ÈóÆÂ∑≤ÁªèÊòØÂ§Ñ‰∫éËßíËâ≤Èîô‰Ωç‰∫ÜÔºå‰Ωú‰∏∫Èù¢ËØïËÄÖÔºåÂ∫îÂΩì‰∏ªÂä®ËØ¥Âá∫ÔºåËÄå‰∏çÊòØÁ≠âÁùÄÈóÆÔºå‰ΩÜËØ∑Ê≥®ÊÑèÔºåËØ¥ÁöÑÊó∂ÂÄôË¶ÅÊúâÊäÄÂ∑ßÔºåÊâæÊú∫‰ºöËØ¥ÔºåÈÄöÂ∏∏ÊòØÊâæ‰∏Ä‰∫õÂºÄÊîæÊÄßÁöÑÈóÆÈ¢òËØ¥„ÄÇ ‚Äã ÊØîÂ¶ÇÔºöÂú®Ëøô‰∏™È°πÁõÆÈáåÁî®Âà∞‰∫Ü‰ªÄ‰πàÊäÄÊúØÔºü‰Ω†Èô§‰∫ÜËØ¥‰∏Ä‰∫õÂü∫Êú¨ÁöÑÊäÄÊúØÔºåÊØîÂ¶ÇSpring MVCÔºåHibernateÔºåËøòÊúâÊï∞ÊçÆÂ∫ìÊñπÈù¢ÁöÑÂ∏∏ËßÑÊäÄÊúØÊó∂ÔºåËøòÂæóËØ¥ÔºåÁî®Âà∞‰∫ÜJavaÂÜÖÂ≠òÁÆ°ÁêÜÔºåËøôÊ†∑ËÉΩÂáèÂ∞ëÂØπËôöÊãüÊú∫ÂÜÖÂ≠òÁöÑÂéãÂäõÔºåÊàñËÄÖËØ¥Áî®Âà∞‰∫ÜÂ§ßÊï∞ÊçÆÂ§ÑÁêÜÊäÄÊúØÁ≠â„ÄÇ‰πüÂ∞±ÊòØËØ¥ÔºåÂæóÊâæ‰∏ÄÂàáÊú∫‰ºöËØ¥Âá∫‰Ω†ÊãøÂæóÂá∫ÊâãÁöÑËÄå‰∏îÂΩìÂâç‰πüÈùûÂ∏∏ÁÉ≠Èó®ÁöÑÊäÄÊúØ„ÄÇ ‚Äã ÊàñËÄÖÊâæ‰∏™Áõ∏ÂÖ≥ÁöÑÈóÆÈ¢òÂÅöÊâ©Â±ïÊÄßËØ¥ÊòéÔºåÊØîÂ¶ÇË¢´ÈóÆÂà∞Ôºö‰Ω†ÊúâÊ≤°ÊúâÁî®Âà∞Ëøá‰∏ÄÂØπÂ§öÂíåÂ§öÂØπÂ§öÔºü‰Ω†Èô§‰∫ÜËØ¥Âü∫Êú¨Áü•ËØÜÁÇπ‰ª•Â§ñÔºåËøòÂèØ‰ª•ËØ¥Ôºå‰∏ÄËà¨ÊàëËøò‰ºöÊ†πÊçÆÈúÄÊ±ÇÈÄÇÂΩìÂú∞ËÆæÁΩÆcascadeÂíåinverseÂÖ≥ÈîÆÂ≠óÔºåÈöèÂêéÈÄöËøá‰∏Ä‰∏™ÂÆûÈôÖÁöÑÊ°à‰æãÊù•ËØ¥ÊòéÂêàÁêÜËÆæËÆ°ÂØπ‰Ω†È°πÁõÆÁöÑÂ∏ÆÂä©ÔºåËøôÊ†∑Â∞±ËÉΩÂª∂‰º∏ÊÄßÂú∞ËØ¥Êòé‰Ω†ÁöÑÊäÄËÉΩ‰∫Ü„ÄÇÁõ∏ÂèçÂ¶ÇÊûú‰Ω†‰∏çËØ¥ÔºåÈù¢ËØïËØù‰∏ÄÂÆö‰ºöËÆ§‰∏∫‰Ω†Âè™‰ºöÁÆÄÂçïÁöÑ‰∏ÄÂØπ‰∏ÄÂíå‰∏ÄÂØπÂ§öÊìç‰Ωú„ÄÇ ‚Äã Èù¢ËØïÁöÑÊó∂ÂÄôÔºåÂ¶ÇÊûúÂÄôÈÄâ‰∫∫ÂõûÁ≠îÈóÆÈ¢òÂæàÁÆÄÂçïÔºåÊúâ‰∏ÄËØ¥‰∏ÄÔºå‰∏ç‰ºöÊâ©Â±ïÔºåÊàñËÄÖÁî®ÈùûÂ∏∏ÂêùÂï¨ÁöÑËØ≠Âè•Êù•ÂõûÁ≠îÊàëÁöÑÈóÆÈ¢òÔºåÈÇ£‰πàÊàë‰∏ÄËà¨‰ºöÁªôÊú∫‰ºöËÆ©‰ªñ‰ª¨Ê∑±ÂÖ•ËÆ≤Ëø∞Ôºà‰ΩÜÊàë‰∏çÊï¢‰øùËØÅ‰∏çÊòØÊØè‰∏™Èù¢ËØïÂÆòÈÉΩ‰ºöÊ∑±ÂÖ•ÊèêÈóÆÔºâÔºåÂ¶ÇÊûúÂõûÁ≠îÂÜçÁÆÄÊ¥ÅÔºåÈÇ£‰πà‰πü‰ºöÂæàÂêùÂï¨Âú∞ÁªôÂá∫Â•ΩÁöÑËØÑËØ≠„ÄÇ ‚Äã ËÆ∞‰ΩèÔºöÈù¢ËØïÂÆò‰∏çÊòØ‰Ω†ÁöÑ‰∫≤ÊàöÔºåÈù¢ËØïÂÆòÂæàÂøôÔºåËÉΩÊåñÊéòÂá∫‰Ω†ÁöÑ‰∫ÆÁÇπÁöÑÈù¢ËØïÂÆòÂæàÂ∞ëÔºåËÄåËØ¥Âá∫‰Ω†ÁöÑ‰∫ÆÁÇπÊòØ‰Ω†ÁöÑ‰πâÂä°„ÄÇ ‚Äã ÊàëÂú®Èù¢ËØïÂà´‰∫∫ËøáÁ®ã‰∏≠ÔºåÊ†πÊçÆ‰∏çÂêåÁöÑÊÉÖÂÜµ‰∏ÄËà¨‰ºöÁªôÂá∫Â¶Ç‰∏ãÁöÑËØÑËØ≠„ÄÇ ‚Äã 1 ÂõûÁ≠îÂæàÁÆÄÁ≠îÔºå‰ΩÜÂõûÁ≠îÈáåËÉΩËØÅÊòéÂá∫‰ªñÂØπÊ°ÜÊû∂Á≠âÊäÄÊúØÁ°ÆÂÆûÊòØÂÅöËøáÔºåÊàë‰ºöÂú®ËØÑËØ≠Èáå‰∫õ‚ÄúÂØπÊ°ÜÊû∂‰∫ÜËß£‰∏ÄËà¨Ôºå‰∏çÁü•ÈÅì‰∏Ä‰∫õÊ∑±Â±ÇÊ¨°ÁöÑÁü•ËØÜÔºàÊàëÈÉΩÈóÆ‰∫ÜÂ§öÊ¨°‰∫Ü‰Ω†ÈÉΩÂõûÁ≠îÂæàÁÆÄÁ≠îÔºåÈÇ£‰πàÂØπ‰∏çËµ∑‰∫ÜÔºåÊàëÂè™ËÉΩËøô‰πàÂÜôÔºåÊàñËÆ∏‰Ω†Á°ÆÂÆûÊäÄÊúØÂæàÂº∫ÔºåÈÇ£‰πüÊ≤°ÂäûÊ≥ïÔºåË∞ÅËÆ©‰Ω†‰∏çËÇØËØ¥Âë¢ÔºüÔºâ‚ÄùÔºåÂêåÊó∂‰ºöÂä†‰∏ÄÂè•‚ÄúË°®ËææËÉΩÂäõÂæà‰∏ÄËà¨ÔºåÊ≤üÈÄöËÉΩÂäõ‰∏çÂº∫‚ÄùÔºåËøôÊ†∑Âç≥‰Ωø‰ªñÈÄöËøáÊäÄÊúØÈù¢ËØïÔºåÂêéÈù¢ÁöÑÈù¢ËØï‰ªñ‰πü‰ºöÂæàÂêÉÂäõ„ÄÇ ‚Äã 2 ÂõûÁ≠îÂæàÁÆÄÂçïÔºåÈÄöËøáÂõûÁ≠îÊàëÊ≤°Ê≥ïÈ™åËØÅ‰ªñÊòØÂú®È°πÁõÆÈáåÂÅöËøáËøô‰∏™ÊäÄÊúØÔºåËøòÊòØ‰ªÖ‰ªÖÂú®Âπ≥Êó∂Â≠¶‰π†‰∏≠Â≠¶ËøáËøô‰∏™ÊäÄÊúØ„ÄÇÊàëÂ∞±‰ºöÂÜô‚ÄúÂú®ÁÆÄÂéÜ‰∏≠ËØ¥Áî®ËøáXXÊäÄÊúØÔºå‰ΩÜÂØπÊüê‰∫õÁªÜËäÇËØ¥‰∏ç‰∏äÊù•ÔºåÊ≤°Ê≥ïÁúãÂá∫Âú®È°πÁõÆÈáåÁî®Âà∞Ëøô‰∏™ÊäÄÊúØ‚ÄùÔºåÂ¶ÇÊûúËøô‰∏™ÊäÄÊúØÊòØËÅåÂä°ÂøÖÈúÄÁÇπÔºåÈÇ£‰πà‰ªñÈÄöËøáÈù¢ËØïÁöÑÂèØËÉΩÊÄßÂ∞±ÈùûÂ∏∏Â∞è„ÄÇ ‚Äã 3 ÂõûÁ≠îÂæàÁÆÄÂçïÔºåËÄå‰∏îÂè™ÈÄöËøáÂóØÂïä‰πãÁ±ªÁöÑËôöËØçÂõûÁ≠îÔºåÁªèËøáÊèêÈÜíËøòËøôÊ†∑ÔºåÊàë‰ºöÊï∑Ë°çÂá†Âè•ÁªìÊùüÈù¢ËØïÔºåÁõ¥Êé•ÂÜô‚ÄúÊäÄÊúØÂæàËñÑÂº±ÔºåÊ≤°Ê≥ïÈÄöËøáÈù¢ËØï‚Äù„ÄÇ ‚Äã 4 ËôΩÁÑ∂ÈÄöËøáÂõûÁ≠îËÉΩÂæàÂ•ΩÂú∞Â±ïÁ§∫Ëá™Â∑±ÁöÑÊäÄËÉΩÔºå‰ΩÜÈÄªËæëË∞ÉÁêÜ‰∏çÊ∏ÖÊô∞ÔºåÈÇ£‰πàÊàë‰ºöËÆ©‰ªñÈÄöËøáÊäÄÊúØÈù¢ËØïÔºå‰ΩÜ‰ºöÂÜô‰∏ä‚ÄúÊäÄËÉΩÂæàÂ•ΩÔºå‰ΩÜË°®ËææËÉΩÂäõ‰∏ÄËà¨ÔºàÊàñÊúâÂæÖÊèêÈ´òÔºâÔºåËØ∑ÂêéÁªßÈù¢ËØïÁªèÁêÜÊñüÈÖå‚Äù„ÄÇËøôÊ†∑ÈÄöËøáÂêéÁªßÁªºÂêàÈù¢ËØïÁöÑÊú∫‰ºöÂ∞±‰∏ÄËà¨‰∫ÜÔºåÊØïÁ´üÁªºÂêàÈù¢ËØï‰ºöÁùÄÈáçËÄÉÂØüË°®ËææËÉΩÂäõ‰∫§ÂæÄËÉΩÂäõÁ≠âÈùûÊäÄÊúØÂõ†Á¥†„ÄÇ ‰∏çÁÆ°ÊÄéÊ†∑Ôºå‰∏ÄÊó¶ÂõûÁ≠îÁÆÄÂçïÔºå‰∏ç‰∏ªÂä®ËØ¥Âá∫‰Ω†ÁöÑÊìÖÈïøÁÇπÔºåÊàñÊ≤°ÊúâÊù°ÁêÜÂæàÊ∏ÖÊ•öÂú∞ËØ¥Âá∫‰Ω†ÁöÑ‰∫ÆÁÇπÔºåÂ∞±ÁÆóÊàëËÆ©‰Ω†ÈÄöËøáÈù¢ËØïÔºå‰πü‰∏ç‰ºöÂÜô‰∏ä‚ÄúÊ°ÜÊû∂ÁªÜËäÇ‰∫ÜËß£ÊØîËæÉÊ∑±ÔºåÊï∞ÊçÆÂ∫ìÂ∫îÁî®ÊØîËæÉÁÜüÁªÉ‚ÄùÁ≠â‰πãÁ±ªÁöÑÂ•ΩËØÑËØ≠Ôºå‰Ω†Âç≥‰ΩøÈÄöËøáÊäÄÊúØÂíåÂêéÈù¢ÁöÑÁªºÂêàÈù¢ËØïÔºåÂ∑•ËµÑ‰πüÊòØÊØîËæÉ‰ΩéÁöÑ„ÄÇ &nbsp; 5 ‰∏ÄÊó¶Êúâ‰ΩéÁ∫ßÈîôËØØÔºåÂèØËÉΩ‰ºöÁõ¥Êé•Âá∫Â±Ä‚Äã Èù¢ËØïËøáÁ®ã‰∏≠Êúâ‰∫õÊñπÈù¢‰Ω†ÊòØÁªùÂØπ‰∏çËÉΩÂá∫ÈîôÔºåÊâÄ‰ª•‰Ω†Âú®ÂáÜÂ§áËøáÁ®ã‰∏≠ÈúÄË¶ÅÂ∞§ÂÖ∂Ê≥®ÊÑèÂ¶Ç‰∏ãÁöÑÂõ†Á¥†„ÄÇ‰∏ãÈù¢Âàó‰∫Ü‰∫õ‰ºöÂØºËá¥‰Ω†Áõ¥Êé•Âá∫Â±ÄÁöÑÈîôËØØÂõûÁ≠î„ÄÇ ÈîôËØØÁ±ªÂûã ÂØºËá¥ÁöÑÂêéÊûú ÂâçÂêéÁüõÁõæÔºåÂêéÈù¢ÁöÑÂõûÁ≠îÊó†Ê≥ïËØÅÊòé‰Ω†ÁöÑÈ°πÁõÆÊèèËø∞ÔºåÊØîÂ¶Ç‰∏ÄÂºÄÂßãËØ¥Áî®Âà∞‰∫ÜSpring MVCÔºåÂêéÈù¢Ê≤°Ê≥ïËØ¥Âá∫ÊúÄÂü∫Êú¨ÁöÑÂÆûÁé∞ÔºåÊØîÂ¶Ç‰∏çÁü•ÈÅìSpringÊúâÂì™‰∫õÁ±ªÔºåÊàñËÄÖÊ≤°Ê≥ïËØ¥Âá∫È°πÁõÆÁöÑÁªÜËäÇ„ÄÇ Êàë‰ºöÊÄÄÁñëËøô‰∏™È°πÁõÆÁöÑÁúüÂÆûÊÄßÔºåÊàëÂ∞±‰ºöËøõ‰∏ÄÊ≠•ÈóÆÔºöÊï∞ÊçÆÂ∫ìÁî®‰ªÄ‰πàÔºåÊï∞ÊçÆÈáèÂ§öÂ∞ëÔºüÂ§öÂ∞ë‰∫∫ÂÅö‰∫ÜÂ§öÂ∞ëÊó∂Èó¥Ôºå‰∏ÄÊó¶ÂÜçÂá∫Áé∞ÊòéÊòæÊºèÊ¥ûÔºåÊØîÂ¶Ç‰∏Ä‰∏™Â∞èÈ°πÁõÆÁî®Âà∞ÈùûÂ∏∏Â§öÁöÑÊó∂Èó¥ÔºåÈÇ£‰πàÂ∞±‰∏ç‰ªÖ‰ªÖÊòØÊäÄÊúØÈóÆÈ¢òÔºåËÄåÊòØÂú®Èù¢ËØïËøáÁ®ã‰∏≠‰ºÅÂõæ‚ÄúËíôÊ∑∑ËøáÂÖ≥‚ÄùÁöÑÊÄßË¥®‰∫Ü„ÄÇ È°πÁõÆÈáå‰∏ÄÂÆö‰ºöÁî®Âà∞ÁöÑÂü∫Êú¨Ê¶ÇÂøµÊÄßÈóÆÈ¢òÈÉΩÂõûÁ≠î‰∏ç‰∏äÔºåSpringÁöÑ‰æùËµñÊ≥®ÂÖ•Ê¶ÇÂøµÊòØ‰ªÄ‰πàÔºåÊÄé‰πàÁî®ÁöÑÔºåÊàñËÄÖHibernateÁöÑ‰∏ÄÂØπÂ§öÊÄé‰πàÂÆûÁé∞ ‰∏ÄÊó¶Ë¢´ÊàëÂèëÁé∞Ê¶ÇÂøµ‰∏çÁü•ÈÅìÔºåÊàëÂ∞±‰ºöÈÄöËøáÊõ¥Â§öÈóÆÈ¢òÁ°ÆËÆ§ÔºåÂ¶ÇÊûúË¢´ÊàëÁ°ÆËÆ§ÂæàÂº±ÔºåËøôÂ∞±Áõ∏ÂΩì‰∏•ÈáçÔºåÂõ†‰∏∫ÊäÄÊúØËÉΩÂäõÂ∑ÆÂíåÊäÄÊúØÊ≤°Áî®ËøáÊòØ‰∏§‰∏™Êà™ÁÑ∂‰∏çÂêåÁöÑÁä∂ÂÜµÔºåÊäÄÊúØÊ≤°Áî®Ëøá‰ºöÂØºËá¥Áõ¥Êé•Âá∫Â±Ä„ÄÇ Èù¢ËØïÊó∂ËØ¥Âá∫ÁöÑÂ∑•‰ΩúÁªèÈ™åÂíåÁÆÄÂéÜ‰∏äÁöÑ‰∏ç‰∏ÄËá¥ Êàë‰ºöÁõ¥Êé•ÊÄÄÁñëÁÆÄÂéÜÊòØÁºñÁöÑÔºåÊàë‰ºöËÆ©ÂÄôÈÄâ‰∫∫Ëß£ÈáäÔºåÂç≥‰ΩøÊòØËØ¥ÁÆÄÂéÜÂÜôÈîô‰∫ÜÔºåÊàë‰πü‰ºöÈóÆÊØîËæÉÊ∑±ÂÖ•ÁöÑÈóÆÈ¢òÊù•Ê†∏ÂÆû‰ªñÁöÑÊäÄËÉΩÂíåËÉΩÂäõ„ÄÇ ÁÆÄÂéÜ‰∏äÁöÑÊäÄËÉΩÊèèËø∞ÂíåÂõûÁ≠îÂá∫Êù•ÁöÑÊòéÊòæ‰∏ç‰∏ÄËá¥ÔºåÊØîÂ¶ÇÊòéÊòéÊòØÂè™‰ºöÁÆÄÂçïÁöÑLinuxÔºå‰ΩÜÂêπÂæóÂ§©Ëä±‰π±Âù† Êàë‰ºöÈÄöËøá‰∏Ä‰∫õÊØîËæÉÊ∑±ÁöÑÈóÆÈ¢òÊ†∏ÂÆûÂÖ∂‰ªñÊäÄËÉΩÔºåÊâæÂá∫ÂÖ∂‰ªñÊñπÈù¢ÂêπÂòòÁöÑÊ∞¥ÂàÜ„ÄÇÊâÄ‰ª•Âª∫ËÆÆÔºå‰Ω†ÂèØ‰ª•ÈÄÇÂΩìÂ§∏Âº†Ôºå‰ΩÜÂà´ËøáÂàÜÔºåÊØîÂ¶Ç‰Ω†Âú®È°πÁõÆÈáåÊ≤°Êê≠Âª∫Ê°ÜÊû∂‰ΩÜÂπ≥Êó∂Â≠¶‰π†Êó∂Êê≠Âª∫ËøáÔºå‰Ω†ÂèØ‰ª•ÂÜô‚ÄúXXÈ°πÁõÆÁöÑÊ°ÜÊû∂ÊòØ‰Ω†Êê≠Âª∫ÁöÑ‚ÄùÔºå‰ΩÜ‰Ω†‰∏çËÉΩËØ¥‰Ω†ÊòØ‰∏Ä‰∏™Êû∂ÊûÑÂ∏àÔºåÈùûÂ∏∏‰∫ÜËß£È°πÁõÆÁöÑÂ∫ïÂ±Ç„ÄÇ ËÆ©Èù¢ËØïÂÆòÊÑüËßâ‰Ω†‰∏çÁ®≥ÂÆöÔºåÂæàÊµÆË∫ÅÔºåÊØîÂ¶ÇËØ¥ËØù‰∏çÂ∫ÑÈáçÔºåÊàñËÄÖÈù¢ËØïÊó∂ÊâìÊâÆÈùûÂ∏∏‰∏çÊ≠£ËßÑÔºåÂ∞±Á©øËÉåÂøÉÊù•„ÄÇ Âç≥‰Ωø‰Ω†ÊäÄÊúØÂÜçÂ•ΩÔºåËøô‰∏™‰ºöÂèØËÉΩÂØºËá¥‰Ω†Áõ¥Êé•Âá∫Â±Ä„ÄÇÊàëÂØπÊ≤πÂò¥ÊªëËàåÁöÑÂÄôÈÄâ‰∫∫‰∏ÄËà¨‰ºöÁõ¥Êé•ÂÜô‰∏ä‰∏çÂ•ΩÁöÑËØÑËØ≠ÔºåËøôÊ†∑ÂæàÈöæËøáÂêéÈù¢È°πÁõÆÁªèÁêÜÁöÑÈù¢ËØï„ÄÇÊàëËøòÈÅáÂà∞‰∏Ä‰∏™‰∫∫ÔºåÁÆÄÂéÜ‰∏äÂ∑•‰ΩúÊòØÂçäÂπ¥‰∏ÄÊç¢ÔºåÊàëÈóÆ‰ªñ‰∏∫‰ªÄ‰πàÁªèÂ∏∏Êç¢Ôºå‰ªñÁõ¥Êé•ËØ¥ÊòØÂæÖÈÅáÈóÆÈ¢òÔºåËøô‰∏™‰∫∫ÊàëÊòØÁõ¥Êé•FailÊéâ„ÄÇ ÊòéËØ¥‰∏çËÉΩÂä†Áè≠Ôºå‰∏çËÉΩÂá∫Â∑Æ ÂÖ∂ÂÆûËôΩÁÑ∂ÊúâËøô‰∏ÄÈóÆÔºå‰ΩÜÂÖ¨Âè∏ÈáåÊú™ÂøÖÁúüÁöÑ‰ºöÂä†Áè≠‰ºöÂá∫Â∑Æ„ÄÇ‰ΩÜÂê¨Âà∞ËøôÁ±ªÂõûÁ≠îÔºåËØ¥ÊòéËøô‰∏™‰∫∫‰∏çËÉΩÊâøÂèóÂ§ßÂéãÂäõÁöÑÂ∑•‰ΩúÔºåÊàñËÄÖË¥£‰ªªÂøÉ‰∏çÂº∫ÔºåÂ§ßÂ§öÊï∞ÂÖ¨Âè∏ÊòØ‰∏ç‰ºöË¶ÅËøôÁßç‰∫∫ÁöÑ„ÄÇ &nbsp; 6 ÂºïÂØºÁØáÔºöÂáÜÂ§á‰∫õÂä†ÂàÜÁÇπÔºåÂú®‰ªãÁªçÊó∂ÊúâÊÑèÊèêÂà∞Ôºå‰ΩÜÂà´ËØ¥ÂÖ®‚Äã Âú®ÂÅöÈ°πÁõÆ‰ªãÁªçÁöÑÊó∂ÂÄôÔºå‰Ω†ÂèØ‰ª•Á©øÊèíËØ¥Âá∫‰∏Ä‰∫õ‰Ω†ÁöÑ‰∫ÆÁÇπÔºå‰ΩÜËØ∑ËÆ∞ÂæóÔºå‰∏çËÆ∫Âú®‰ªãÁªçÈ°πÁõÆËøòÊòØÂú®ÂõûÁ≠îÈóÆÈ¢òÔºå‰Ω†ÂΩìÂâçÁöÑËÅåË¥£‰∏çÊòØËØ¥Êòé‰∫ÆÁÇπËÄåÊòØ‰ªãÁªçÈ°πÁõÆÔºå‰∏ÄÊó¶‰Ω†ËØ¶ÁªÜËØ¥ÔºåÂèØËÉΩ‰ºöËÆ©Èù¢ËØïÂÆòÊÑüËßâ‰Ω†Ë∑ëÈ¢ò‰∫Ü„ÄÇ ‚Äã ÊâÄ‰ª•ËøôÊó∂‰Ω†ÂèØ‰ª•‰∏ÄÁ¨îÂ∏¶ËøáÔºåÊØîÂ¶Ç‰Ω†ÂèØ‰ª•ËØ¥Ôºå‚ÄúÊàë‰ª¨ÁöÑÈ°πÁõÆÂØπÊï∞ÊçÆË¶ÅÊ±ÇÊØîËæÉÂ§ßÔºåÂøôÁöÑÊó∂ÂÄôÂπ≥ÂùáÊØèÂ∞èÊó∂Ë¶ÅÂ§ÑÁêÜÂá†ÂçÅ‰∏áÊù°Êï∞ÊçÆ‚ÄùÔºåËøôÊ†∑Â∞±ÂèØ‰ª•ÊääÈù¢ËØïÂÆòÂºïÂÖ•‚ÄúÂ§ßÊï∞ÊçÆ‚ÄùÁöÑÊñπÂêë„ÄÇ ‚Äã ‰Ω†Âú®Èù¢ËØïÂâçÂèØ‰ª•Ê†πÊçÆËÅå‰ΩçÁöÑÈúÄÊ±ÇÔºåÂáÜÂ§áÂ•ΩËøôÁßç‚Äú‰∏ÄÁ¨îÂ∏¶Ëøá‚ÄùÁöÑËØù„ÄÇÊØîÂ¶ÇËøô‰∏™ËÅå‰ΩçÁöÑÈúÄÊ±ÇÁÇπÊòØSpring MVCÊ°ÜÊû∂ÔºåÂ§ßÊï∞ÊçÆÈ´òÂπ∂ÂèëÔºåË¶ÅÊúâÊï∞ÊçÆÂ∫ìË∞É‰ºòÁªèÈ™åÔºåÈÇ£‰πà‰ªãÁªç‰ª•ÂæÄÈ°πÁõÆÊó∂Ôºå‰Ω†Â∞±ÊúÄÂ•ΩÁ™ÅÂá∫Ëøô‰∫õÊñπÈù¢‰Ω†ÁöÑÂÆûÈôÖÊäÄËÉΩ„ÄÇ ‚Äã ÂÜçÁªôÂ§ßÂÆ∂‰∏æ‰∏™‰æãÂ≠êÔºåÊØîÂ¶ÇJavaËôöÊãüÊú∫ÂÜÖÂ≠òÁÆ°ÁêÜÂíåÊï∞ÊçÆÂ∫ì‰ºòÂåñÊòØÁªùÂ§ßÂ§öÊï∞È°πÁõÆÈÉΩË¶ÅÈÅáÂà∞ÁöÑ‰∏§Â§ßÈóÆÈ¢òÔºåÂ§ßÂÆ∂ÈÉΩÂèØ‰ª•Âú®ÂèôËø∞È°πÁõÆÁªèÈ™åÊó∂ËØ¥ÔºåÂú®Ëøô‰∏™È°πÁõÆÈáåÔºåÊàë‰ª¨ÈúÄË¶ÅËÄÉËôëÂÜÖÂ≠òÂõ†Á¥†ÔºåÂõ†‰∏∫Êàë‰ª¨ÁöÑ‰ª£Á†ÅÂè™ÂÖÅËÆ∏Âú®2GÂÜÖÂ≠òÁéØÂ¢É‰∏≠ËøêË°åÔºåËÄå‰∏îÂØπÊï∞ÊçÆÂ∫ìÊÄßËÉΩË¶ÅÊ±ÇÊØîËæÉÈ´òÔºåÊâÄ‰ª•Êàë‰ª¨ÁªèÂ∏∏Ë¶ÅÁõëÊéß‰ºòÂåñÂÜÖÂ≠òÂíåÊï∞ÊçÆÂ∫ìÈáåÁöÑSQLËØ≠Âè•„ÄÇËøôÊ†∑ÂΩìÈù¢ËØïÂÆòÊ∑±ÂÖ•ÊèêÈóÆÊó∂ÔºåÂ∞±ËÉΩÊäõÂá∫Ëá™Â∑±ÂáÜÂ§áÂ•ΩÁöÑËôöÊãüÊú∫ÂÜÖÂ≠ò‰ºòÂåñÂíåÊï∞ÊçÆÂ∫ì‰ºòÂåñÊñπÈù¢ÁöÑËØ¥Ëæû„ÄÇ ‚Äã ÂÆûÂú®‰∏çË°åÔºå‰Ω†‰πüÂèØ‰ª•ËØ¥‚ÄúÊàëÈô§‰∫ÜÂÅöÂºÄÂèëÔºå‰πüÂÅö‰∫Ü‰∫ÜËß£ÈúÄÊ±ÇÔºåÊµãËØïÂíåÈÉ®ÁΩ≤ÁöÑÂ∑•‰ΩúÔºåÂõ†‰∏∫Ëøô‰∏™È°πÁõÆ‰∫∫ÊâãÊØîËæÉÂ∞ëÔºåÂéãÂäõÊØîËæÉÂ§ß‚ÄùÔºåËøôÊ†∑‰Ω†‰πüËÉΩÂ±ïÁ§∫‰Ω†ÊúâËøáÁã¨Êå°‰∏ÄÈù¢ÁöÑÁªèÂéÜ„ÄÇ ‚Äã ÊàëÂú®Èù¢ËØïËøáÁ®ã‰∏≠Ôºå‰∏ÄÊó¶Âê¨Âà∞Êúâ‰∫ÆÁÇπÔºåÂ∞±‰ºöÁ≠âÂà∞‰ªñËØ¥Â•ΩÂΩìÂâçÈóÆÈ¢òÂêéÔºåÈ°∫Âè£ÂéªÈóÆÔºå‰∏ÄËà¨ÊäÄÊúØÈù¢ËØïÊúÄÂ§öÂäûÂçäÂ∞èÊó∂Ôºå‰Ω†ÊääÊó∂Èó¥Áî®Âú®ÂõûÁ≠îÂáÜÂ§áÂ•ΩÁöÑÈóÆÈ¢òÁÇπ‰∏äÁöÑÊó∂ÂÄôÔºåË¢´ÈóÆÂÖ∂‰ªñÈóÆÈ¢òÁöÑÊó∂Èó¥Â∞±‰ºöÂ∞ë‰∫Ü„ÄÇ &nbsp; 7 ‰Ω†ÂèØ‰ª•ÂºïÂØºÔºå‰ΩÜ‰∏çËÉΩËá™ËØ¥Ëá™ËØù‚Äã ÊàëÈù¢ËØïÁöÑÊó∂ÂÄôÔºå‰πü‰ºöÈÅáÂà∞‰∫õÊúâÂáÜÂ§áÁöÑ‰∫∫ÔºåÂÖ∂ÂÆûÂ¶ÇÊûú‰Ω†ÁúüÁöÑÊÉ≥Â∫îËÅòÁöÑËØùÔºå‰∏ÄÂÆöË¶Å‰∫ãÂÖàÂáÜÂ§áÔºåËøôÁÇπÊàëËÉΩÁêÜËß£ÔºåÁîöËá≥ËµûÂêåÔºå‰Ω†Âè™Ë¶ÅÂà´Èú≤Âá∫Â§™ÊòéÊòæÁöÑÁóïËøπÔºåÊàë‰∏ç‰ºöÂÜô‰∏ä‚Äú‰ºº‰πéÊúâÂáÜÂ§áÔºåÊ≤°Ê≥ïËÄÉÂØüÁúüÂÆûÊäÄËÉΩ‚ÄùËøôÁßçËØùÔºåÊõ¥‰ΩïÂÜµÊú™ÂøÖÊØè‰∏™Èù¢ËØïÂÆòÈÉΩËÉΩÊÑüËßâÂá∫‰Ω†ÂáÜÂ§áËøá„ÄÇ ‰ΩÜ‰Ω†‰∏çËÉΩÂá≠ÁùÄÊúâÂáÜÂ§áËÄåÂ§™Âº∫ÂäøÔºåÊØïÁ´üÈù¢ËØïÊòØÈù¢ËØïÂÆò‰∏ªÂØºÁöÑ„ÄÇ ‚Äã ÊàëÈÅáÂà∞‰∏™Âà´Èù¢ËØïÁöÑ‰∫∫Ôºå‰ªñ‰ª¨ËØ¥ËØùÂ§™Â§öÔºå‰∏ÄËà¨‰ºö‰∏ªÂä®Êâ©Â±ïÔºåÊØîÂ¶ÇÊàëÈóÆ‰ªñÊï∞ÊçÆÂ∫ìÁî®‰ªÄ‰πàÔºå‰ªñ‰∏ç‰ªÖÂõûÁ≠îÊï∞ÊçÆÂ∫ìÊòØ‰ªÄ‰πàÔºåËá™Â∑±ÂÅö‰∫Ü‰ªÄ‰πàÔºåÁîöËá≥È°∫‰æø‰ºöÊääÂ§ßÊï∞ÊçÆÂ§ÑÁêÜÊäÄÊúØÈÉΩËØ¥Âá∫Êù•„ÄÇ ‚Äã ÂÖ∂ÂÆûËøáÁäπ‰∏çÂèäÔºåÊàëÂ∞±‰ºöÈáçÁÇπËÄÉÂØü‰Ω†ËØ¥ÁöÑÊØè‰∏™ÁªÜËäÇÔºåÂõ†‰∏∫ÊàëÊÄÄÁñë‰Ω†ËØ¥ÁöÑÈÉΩÊòØ‰Ω†‰ªéÁΩë‰∏äÁúãÁöÑÔºåËÄå‰∏çÊòØ‰Ω†È°πÁõÆ‰∏≠Áî®Âà∞ÁöÑÔºåÊàëÁîöËá≥‰ºöÁõ¥Êé•Â®ÅËÉÅÔºö‚Äú‰Ω†ÂÖàÂíåÊàëËØ¥ÂÆûËØùËøô‰∏™ÊäÄÊúØ‰Ω†ÁúüÂú®È°πÁõÆÈáåÁî®Âà∞ÔºåÊàëÂêéÈù¢‰ºöÈáçÁÇπËÄÉÂØüÔºå‰∏ÄÊó¶Ë¢´ËÆ§‰∏∫‰Ω†È°πÁõÆÈáåÊ≤°ÂÅöÔºåËøô‰∏™ÊÄßË¥®Â∞±ÊòØËíôÊ∑∑ËøáÂÖ≥‰∫Ü‚ÄùÔºåÂæÄÂæÄËøô‰∫õ‰∫∫‰ºö‰∏ªÂä®Âù¶ÁôΩ„ÄÇ ‚Äã ‰∏çËøáËØùËØ¥ÂõûÊù•Ôºå‰ªñÂ¶ÇÊûú‰ªÖ‰ªÖËØ¥ÔºåÊï∞ÊçÆÈáèÊØîËæÉÂ§ßÔºå‰ΩÜÁÇπÂà∞‰∏∫Ê≠¢Ôºå‰∏çÁªßÁª≠ËØ¥ÂêéÈù¢ÁöÑËØùÔºåÊàëÂ∞±‰ºöÊ∑±ÂÖ•ÂéªÈóÆÔºå‰ªñËá™ÁÑ∂ÊúâÊú∫‰ºöË°®Ëææ„ÄÇÂêåÊó∂ËØ∑Ê≥®ÊÑèÔºå‰∏ÄËà¨Âú®Èù¢ËØïËøáÁ®ã‰∏≠Ôºå‰∏ÄÊó¶‰Ω†‰∫ÆÂá∫Âä†ÂàÜÁÇπÔºå‰ΩÜÈù¢ËØïÂÆòÊ≤°Êé•Âò¥ÔºåËøô‰∏™Âä†ÂàÜÁÇπÂèØËÉΩÂ∞±‰∏çÊòØÈ°πÁõÆÂøÖÂ§áÁöÑÔºå‰πü‰∏çÊòØ‰ªñÊâÄÂÖ≥Ê≥®ÁöÑÔºåÂΩìÂâç‰Ω†Â∞±ÂèØ‰ª•Âà´ÂÜçËØ¥‰∫ÜÔºåÊàñËÄÖÁ≠âÂà∞‰Ω†ÊèêÈóÆÈ¢òÁöÑÊó∂ÂÄôÂÜçËØ¥„ÄÇ &nbsp; 8 ‰∏çÊòØÁªìÂ∞æÁöÑÊÄªÁªì‚Äã Âà∞ËøôÈáåÔºåÊàë‰ª¨Â∑≤ÁªèÁªôÂá∫‰∫Ü‰ªãÁªçÈ°πÁõÆÁöÑ‰∏Ä‰∫õÊäÄÂ∑ß„ÄÇËøô‰∫õÊäÄÂ∑ßÈÉΩÊòØ‰ªé java webËΩªÈáèÁ∫ßÂºÄÂèëÈù¢ËØïÊïôÁ®ã‰ªéÊëòÂΩïÁöÑ„ÄÇ ‚Äã ‰∏§Âè•ËØùÔºåÁ¨¨‰∏ÄÔºåÈù¢ËØïÂâç‰∏ÄÂÆöË¶ÅÂáÜÂ§áÔºåÁ¨¨‰∫åÔºåÊú¨ÊñáÁªôÂá∫ÊòØÁöÑÊñπÊ≥ïÔºå‰∏çÊòØÊïôÊù°ÔºåÂ§ßÂÆ∂ÂèØ‰ª•ÊåâÊú¨ÊñáÁªôÂá∫ÁöÑÊñπÂêëÁªìÂêàËá™Â∑±ÁöÑÈ°πÁõÆËÉåÊôØÂÅöÂáÜÂ§áÔºåËÄå‰∏çÊòØÊ≠ªËÆ∞Á°¨ËÉåÊú¨ÊñáÁªôÂá∫ÁöÑ‰∏Ä‰∫õËØ¥Ëæû„ÄÇ ‚Äã ÂΩìÂ§ßÂÆ∂‰ªãÁªçÂ•ΩÈ°πÁõÆËÉåÊôØÂêéÔºåÈù¢ËØïÊâçÂàöÂàöÂºÄÂßãÔºåÂì™ÊÄï‰Ω†ËØ¥ÂæóÂÜçÂ•ΩÔºåÂì™ÊÄï‰Ω†ÊääÈóÆÈ¢òÂºïÂØºÂà∞‰Ω†ÂáÜÂ§áÁöÑËåÉÂõ¥ÈáåÔºåËøô‰πüÂæóÂ∫î‰ªòJava WebÔºàÊØîÂ¶ÇSpring MVC,ORMÁ≠âÔºâ„ÄÅJava CoreÔºàÂ§öÁ∫øÁ®ã„ÄÅÈõÜÂêà„ÄÅJDBCÁ≠âÔºâÂíåÊï∞ÊçÆÂ∫ìÁ≠âÊñπÈù¢ÁöÑÈóÆÈ¢ò„ÄÇ ‚Äã ÈÇ£‰πàÊú¨ÊñáÁöÑ‰ª∑ÂÄº‰ΩìÁé∞Âú®Âì™Âë¢ÔºüÂ¶ÇÊûúÂºïÂØº‰∏çÂ•ΩÔºå‰Ω†Ê†πÊú¨Ê≤°Êú∫‰ºöÂ±ïÁ§∫Ëá™Â∑±ÁöÑËÉΩÂäõ„ÄÇËøôÂ∞±ÊòØÊú¨ÊñáÁªôÂá∫ÁöÑÊñπÊ≥ï‰ª∑ÂÄºÊâÄÂú®„ÄÇËØ¥Âè•Ëá™Â§∏ÁöÑËØùÔºåÊú¨ÊñáÁªôÂá∫ÁöÑ‰∏Ä‰∫õÊñπÊ≥ïÂíåËØ¥Ëæû‰∏çÊòØÊãçËÑëË¢ãÊÉ≥Âá∫Êù•ÁöÑÔºåËÄåÊòØ‰ªéÈù¢ËØï‰∏äÁôæ‰∏™ÂÄôÈÄâ‰∫∫ÁöÑÁªèÂéÜ‰∏≠ÊäΩÂèñÂá∫Êù•ÁöÑÔºåÂÖ∂‰∏≠Êúâ‰∏çÂ∞ëË°ÄÊ≥™Ôºå‰πüÊúâ‰∏çÂ∞ë‰∫∫ÊàêÂäüÁöÑÈÄîÂæÑÔºåËøôÁØáÊñáÁ´†Â§öÂ∞ëÂØπÂ§ßÂÆ∂ÔºàÂ∞§ÂÖ∂ÊòØÁªèÈ™å‰∏çÊª°3Âπ¥ÁöÑÂàùÁ∫ßÁ®ãÂ∫èÂëòÔºâÊúâÂ∏ÆÂä©ÔºåËøô‰πüÊòØÊú¨ÊñáÁî≥ËØ∑ÊîæÂÖ•È¶ñÈ°µÁöÑÁêÜÁî±„ÄÇ ‚Äã Ëøô‰∏çÊòØÁªìÂ∞æÔºåÊàë‰ª¨ËøòÂ∞ÜÂú®ÂêàÈÄÇÁöÑÊó∂ÂÄôÂÜô‰∏Ä‰∫õÂÖ≥‰∫é‚ÄúÂ¶Ç‰ΩïÂ∫îÂØπÂ∏∏ËßÅÈóÆÈ¢ò‚ÄùÊàñ‚ÄúÂ¶Ç‰ΩïÂø´ÈÄüÊèêÂçáËá™Â∑±ËÉΩÂäõ‚ÄùÁ≠âÊñπÈù¢ÁöÑÂçöÊñá„ÄÇ]]></content>
      <tags>
        <tag>ËΩ¨Âèë</tag>
        <tag>Èù¢ËØï</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â∫îÁî® 2ÔºöÁºìÂÖµ‰πãËÆ° ‚Äî‚Äî Âª∂Êó∂ÈòüÂàó]]></title>
    <url>%2F2018%2F09%2F22%2FRedis%20%E6%B7%B1%E5%BA%A6%E5%8E%86%E9%99%A9%2F4%E5%BA%94%E7%94%A8%202%EF%BC%9A%E7%BC%93%E5%85%B5%E4%B9%8B%E8%AE%A1%20%E2%80%94%E2%80%94%20%E5%BB%B6%E6%97%B6%E9%98%9F%E5%88%97%2F</url>
    <content type="text"><![CDATA[‰ΩúËÄÖÔºöÊéòÈáëÂ∞èÂÜå Êù•Ê∫êÔºöhttps://juejin.im/books Êàë‰ª¨Âπ≥Êó∂‰π†ÊÉØ‰∫é‰ΩøÁî® Rabbitmq Âíå Kafka ‰Ωú‰∏∫Ê∂àÊÅØÈòüÂàó‰∏≠Èó¥‰ª∂ÔºåÊù•ÁªôÂ∫îÁî®Á®ãÂ∫è‰πãÈó¥Â¢ûÂä†ÂºÇÊ≠•Ê∂àÊÅØ‰º†ÈÄíÂäüËÉΩ„ÄÇËøô‰∏§‰∏™‰∏≠Èó¥‰ª∂ÈÉΩÊòØ‰∏ì‰∏öÁöÑÊ∂àÊÅØÈòüÂàó‰∏≠Èó¥‰ª∂ÔºåÁâπÊÄß‰πãÂ§öË∂ÖÂá∫‰∫ÜÂ§ßÂ§öÊï∞‰∫∫ÁöÑÁêÜËß£ËÉΩÂäõ„ÄÇ ‰ΩøÁî®Ëøá Rabbitmq ÁöÑÂêåÂ≠¶Áü•ÈÅìÂÆÉ‰ΩøÁî®Ëµ∑Êù•ÊúâÂ§öÂ§çÊùÇÔºåÂèëÊ∂àÊÅØ‰πãÂâçË¶ÅÂàõÂª∫ ExchangeÔºåÂÜçÂàõÂª∫ QueueÔºåËøòË¶ÅÂ∞Ü Queue Âíå Exchange ÈÄöËøáÊüêÁßçËßÑÂàôÁªëÂÆöËµ∑Êù•ÔºåÂèëÊ∂àÊÅØÁöÑÊó∂ÂÄôË¶ÅÊåáÂÆö routing-keyÔºåËøòË¶ÅÊéßÂà∂Â§¥ÈÉ®‰ø°ÊÅØ„ÄÇÊ∂àË¥πËÄÖÂú®Ê∂àË¥πÊ∂àÊÅØ‰πãÂâç‰πüË¶ÅËøõË°å‰∏äÈù¢‰∏ÄÁ≥ªÂàóÁöÑÁπÅÁêêËøáÁ®ã„ÄÇ‰ΩÜÊòØÁªùÂ§ßÂ§öÊï∞ÊÉÖÂÜµ‰∏ãÔºåËôΩÁÑ∂Êàë‰ª¨ÁöÑÊ∂àÊÅØÈòüÂàóÂè™Êúâ‰∏ÄÁªÑÊ∂àË¥πËÄÖÔºå‰ΩÜËøòÊòØÈúÄË¶ÅÁªèÂéÜ‰∏äÈù¢Ëøô‰∫õÁπÅÁêêÁöÑËøáÁ®ã„ÄÇ Êúâ‰∫Ü RedisÔºåÂÆÉÂ∞±ÂèØ‰ª•ËÆ©Êàë‰ª¨Ëß£ËÑ±Âá∫Êù•ÔºåÂØπ‰∫éÈÇ£‰∫õÂè™Êúâ‰∏ÄÁªÑÊ∂àË¥πËÄÖÁöÑÊ∂àÊÅØÈòüÂàóÔºå‰ΩøÁî® Redis Â∞±ÂèØ‰ª•ÈùûÂ∏∏ËΩªÊùæÁöÑÊêûÂÆö„ÄÇRedis ÁöÑÊ∂àÊÅØÈòüÂàó‰∏çÊòØ‰∏ì‰∏öÁöÑÊ∂àÊÅØÈòüÂàóÔºåÂÆÉÊ≤°ÊúâÈùûÂ∏∏Â§öÁöÑÈ´òÁ∫ßÁâπÊÄßÔºåÊ≤°Êúâ ack ‰øùËØÅÔºåÂ¶ÇÊûúÂØπÊ∂àÊÅØÁöÑÂèØÈù†ÊÄßÊúâÁùÄÊûÅËá¥ÁöÑËøΩÊ±ÇÔºåÈÇ£‰πàÂÆÉÂ∞±‰∏çÈÄÇÂêà‰ΩøÁî®„ÄÇ &nbsp; ÂºÇÊ≠•Ê∂àÊÅØÈòüÂàóRedis ÁöÑ list(ÂàóË°®) Êï∞ÊçÆÁªìÊûÑÂ∏∏Áî®Êù•‰Ωú‰∏∫ÂºÇÊ≠•Ê∂àÊÅØÈòüÂàó‰ΩøÁî®Ôºå‰ΩøÁî®rpush/lpushÊìç‰ΩúÂÖ•ÈòüÂàóÔºå‰ΩøÁî®lpop Âíå rpopÊù•Âá∫ÈòüÂàó„ÄÇ 123456789101112131415161718&gt; rpush notify-queue apple banana pear(integer) 3&gt; llen notify-queue(integer) 3&gt; lpop notify-queue"apple"&gt; llen notify-queue(integer) 2&gt; lpop notify-queue"banana"&gt; llen notify-queue(integer) 1&gt; lpop notify-queue"pear"&gt; llen notify-queue(integer) 0&gt; lpop notify-queue(nil) ‰∏äÈù¢ÊòØ rpush Âíå lpop ÁªìÂêà‰ΩøÁî®ÁöÑ‰æãÂ≠ê„ÄÇËøòÂèØ‰ª•‰ΩøÁî® lpush Âíå rpop ÁªìÂêà‰ΩøÁî®ÔºåÊïàÊûúÊòØ‰∏ÄÊ†∑ÁöÑ„ÄÇËøôÈáå‰∏çÂÜçËµòËø∞„ÄÇ &nbsp; ÈòüÂàóÁ©∫‰∫ÜÊÄé‰πàÂäûÔºüÂÆ¢Êà∑Á´ØÊòØÈÄöËøáÈòüÂàóÁöÑ pop Êìç‰ΩúÊù•Ëé∑ÂèñÊ∂àÊÅØÔºåÁÑ∂ÂêéËøõË°åÂ§ÑÁêÜ„ÄÇÂ§ÑÁêÜÂÆå‰∫ÜÂÜçÊé•ÁùÄËé∑ÂèñÊ∂àÊÅØÔºåÂÜçËøõË°åÂ§ÑÁêÜ„ÄÇÂ¶ÇÊ≠§Âæ™ÁéØÂæÄÂ§çÔºåËøô‰æøÊòØ‰Ωú‰∏∫ÈòüÂàóÊ∂àË¥πËÄÖÁöÑÂÆ¢Êà∑Á´ØÁöÑÁîüÂëΩÂë®Êúü„ÄÇ ÂèØÊòØÂ¶ÇÊûúÈòüÂàóÁ©∫‰∫ÜÔºåÂÆ¢Êà∑Á´ØÂ∞±‰ºöÈô∑ÂÖ• pop ÁöÑÊ≠ªÂæ™ÁéØÔºå‰∏çÂÅúÂú∞ popÔºåÊ≤°ÊúâÊï∞ÊçÆÔºåÊé•ÁùÄÂÜç popÔºåÂèàÊ≤°ÊúâÊï∞ÊçÆ„ÄÇËøôÂ∞±ÊòØÊµ™Ë¥πÁîüÂëΩÁöÑÁ©∫ËΩÆËØ¢„ÄÇÁ©∫ËΩÆËØ¢‰∏ç‰ΩÜÊãâÈ´ò‰∫ÜÂÆ¢Êà∑Á´ØÁöÑ CPUÔºåredis ÁöÑ QPS ‰πü‰ºöË¢´ÊãâÈ´òÔºåÂ¶ÇÊûúËøôÊ†∑Á©∫ËΩÆËØ¢ÁöÑÂÆ¢Êà∑Á´ØÊúâÂá†ÂçÅÊù•‰∏™ÔºåRedis ÁöÑÊÖ¢Êü•ËØ¢ÂèØËÉΩ‰ºöÊòæËëóÂ¢ûÂ§ö„ÄÇ ÈÄöÂ∏∏Êàë‰ª¨‰ΩøÁî® sleep Êù•Ëß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢òÔºåËÆ©Á∫øÁ®ãÁù°‰∏Ä‰ºöÔºåÁù°‰∏™ 1s ÈíüÂ∞±ÂèØ‰ª•‰∫Ü„ÄÇ‰∏ç‰ΩÜÂÆ¢Êà∑Á´ØÁöÑ CPU ËÉΩÈôç‰∏ãÊù•ÔºåRedis ÁöÑ QPS ‰πüÈôç‰∏ãÊù•‰∫Ü„ÄÇ 12time.sleep(1) # python Áù° 1sThread.sleep(1000) # java Áù° 1s &nbsp; ÈòüÂàóÂª∂ËøüÁî®‰∏äÈù¢Áù°Áú†ÁöÑÂäûÊ≥ïÂèØ‰ª•Ëß£ÂÜ≥ÈóÆÈ¢ò„ÄÇ‰ΩÜÊòØÊúâ‰∏™Â∞èÈóÆÈ¢òÔºåÈÇ£Â∞±ÊòØÁù°Áú†‰ºöÂØºËá¥Ê∂àÊÅØÁöÑÂª∂ËøüÂ¢ûÂ§ß„ÄÇÂ¶ÇÊûúÂè™Êúâ 1 ‰∏™Ê∂àË¥πËÄÖÔºåÈÇ£‰πàËøô‰∏™Âª∂ËøüÂ∞±ÊòØ 1s„ÄÇÂ¶ÇÊûúÊúâÂ§ö‰∏™Ê∂àË¥πËÄÖÔºåËøô‰∏™Âª∂Ëøü‰ºöÊúâÊâÄ‰∏ãÈôçÔºåÂõ†‰∏∫ÊØè‰∏™Ê∂àË¥πËÄÖÁöÑÁù°ËßâÊó∂Èó¥ÊòØÂ≤îÂºÄÊù•ÁöÑ„ÄÇ ÊúâÊ≤°Êúâ‰ªÄ‰πàÂäûÊ≥ïËÉΩÊòæËëóÈôç‰ΩéÂª∂ËøüÂë¢Ôºü‰Ω†ÂΩìÁÑ∂ÂèØ‰ª•ÂæàÂø´ÊÉ≥Âà∞ÔºöÈÇ£Â∞±ÊääÁù°ËßâÁöÑÊó∂Èó¥Áº©Áü≠ÁÇπ„ÄÇËøôÁßçÊñπÂºèÂΩìÁÑ∂ÂèØ‰ª•Ôºå‰∏çËøáÊúâÊ≤°ÊúâÊõ¥Â•ΩÁöÑËß£ÂÜ≥ÊñπÊ°àÂë¢ÔºüÂΩìÁÑ∂‰πüÊúâÔºåÈÇ£Â∞±ÊòØ blpop/brpop„ÄÇ Ëøô‰∏§‰∏™Êåá‰ª§ÁöÑÂâçÁºÄÂ≠óÁ¨¶b‰ª£Ë°®ÁöÑÊòØblockingÔºå‰πüÂ∞±ÊòØÈòªÂ°ûËØª„ÄÇ ÈòªÂ°ûËØªÂú®ÈòüÂàóÊ≤°ÊúâÊï∞ÊçÆÁöÑÊó∂ÂÄôÔºå‰ºöÁ´ãÂç≥ËøõÂÖ•‰ºëÁú†Áä∂ÊÄÅÔºå‰∏ÄÊó¶Êï∞ÊçÆÂà∞Êù•ÔºåÂàôÁ´ãÂàªÈÜíËøáÊù•„ÄÇÊ∂àÊÅØÁöÑÂª∂ËøüÂá†‰πé‰∏∫Èõ∂„ÄÇÁî®blpop/brpopÊõø‰ª£ÂâçÈù¢ÁöÑlpop/rpopÔºåÂ∞±ÂÆåÁæéËß£ÂÜ≥‰∫Ü‰∏äÈù¢ÁöÑÈóÆÈ¢ò„ÄÇ &nbsp; Á©∫Èó≤ËøûÊé•Ëá™Âä®Êñ≠ÂºÄ‰Ω†‰ª•‰∏∫‰∏äÈù¢ÁöÑÊñπÊ°àÁúüÁöÑÂæàÂÆåÁæé‰πàÔºüÂÖàÂà´ÊÄ•ÁùÄÂºÄÂøÉÔºåÂÖ∂ÂÆû‰ªñËøòÊúâ‰∏™ÈóÆÈ¢òÈúÄË¶ÅËß£ÂÜ≥„ÄÇ ‰ªÄ‰πàÈóÆÈ¢òÔºü‚Äî‚Äî Á©∫Èó≤ËøûÊé•ÁöÑÈóÆÈ¢ò„ÄÇ Â¶ÇÊûúÁ∫øÁ®ã‰∏ÄÁõ¥ÈòªÂ°ûÂú®Âì™ÈáåÔºåRedis ÁöÑÂÆ¢Êà∑Á´ØËøûÊé•Â∞±Êàê‰∫ÜÈó≤ÁΩÆËøûÊé•ÔºåÈó≤ÁΩÆËøá‰πÖÔºåÊúçÂä°Âô®‰∏ÄËà¨‰ºö‰∏ªÂä®Êñ≠ÂºÄËøûÊé•ÔºåÂáèÂ∞ëÈó≤ÁΩÆËµÑÊ∫êÂç†Áî®„ÄÇËøô‰∏™Êó∂ÂÄôblpop/brpop‰ºöÊäõÂá∫ÂºÇÂ∏∏Êù•„ÄÇ ÊâÄ‰ª•ÁºñÂÜôÂÆ¢Êà∑Á´ØÊ∂àË¥πËÄÖÁöÑÊó∂ÂÄôË¶ÅÂ∞èÂøÉÔºåÊ≥®ÊÑèÊçïËé∑ÂºÇÂ∏∏ÔºåËøòË¶ÅÈáçËØï„ÄÇ &nbsp; ÈîÅÂÜ≤Á™ÅÂ§ÑÁêÜ‰∏äËäÇËØæÊàë‰ª¨ËÆ≤‰∫ÜÂàÜÂ∏ÉÂºèÈîÅÁöÑÈóÆÈ¢òÔºå‰ΩÜÊòØÊ≤°ÊúâÊèêÂà∞ÂÆ¢Êà∑Á´ØÂú®Â§ÑÁêÜËØ∑Ê±ÇÊó∂Âä†ÈîÅÊ≤°Âä†ÊàêÂäüÊÄé‰πàÂäû„ÄÇ‰∏ÄËà¨Êúâ 3 ÁßçÁ≠ñÁï•Êù•Â§ÑÁêÜÂä†ÈîÅÂ§±Ë¥•Ôºö Áõ¥Êé•ÊäõÂá∫ÂºÇÂ∏∏ÔºåÈÄöÁü•Áî®Êà∑Á®çÂêéÈáçËØïÔºõ sleep ‰∏Ä‰ºöÂÜçÈáçËØïÔºõ Â∞ÜËØ∑Ê±ÇËΩ¨ÁßªËá≥Âª∂Êó∂ÈòüÂàóÔºåËøá‰∏Ä‰ºöÂÜçËØïÔºõ Áõ¥Êé•ÊäõÂá∫ÁâπÂÆöÁ±ªÂûãÁöÑÂºÇÂ∏∏ËøôÁßçÊñπÂºèÊØîËæÉÈÄÇÂêàÁî±Áî®Êà∑Áõ¥Êé•ÂèëËµ∑ÁöÑËØ∑Ê±ÇÔºåÁî®Êà∑ÁúãÂà∞ÈîôËØØÂØπËØùÊ°ÜÂêéÔºå‰ºöÂÖàÈòÖËØªÂØπËØùÊ°ÜÁöÑÂÜÖÂÆπÔºåÂÜçÁÇπÂáªÈáçËØïÔºåËøôÊ†∑Â∞±ÂèØ‰ª•Ëµ∑Âà∞‰∫∫Â∑•Âª∂Êó∂ÁöÑÊïàÊûú„ÄÇÂ¶ÇÊûúËÄÉËôëÂà∞Áî®Êà∑‰ΩìÈ™åÔºåÂèØ‰ª•Áî±ÂâçÁ´ØÁöÑ‰ª£Á†ÅÊõø‰ª£Áî®Êà∑Ëá™Â∑±Êù•ËøõË°åÂª∂Êó∂ÈáçËØïÊéßÂà∂„ÄÇÂÆÉÊú¨Ë¥®‰∏äÊòØÂØπÂΩìÂâçËØ∑Ê±ÇÁöÑÊîæÂºÉÔºåÁî±Áî®Êà∑ÂÜ≥ÂÆöÊòØÂê¶ÈáçÊñ∞ÂèëËµ∑Êñ∞ÁöÑËØ∑Ê±Ç„ÄÇ sleepsleep ‰ºöÈòªÂ°ûÂΩìÂâçÁöÑÊ∂àÊÅØÂ§ÑÁêÜÁ∫øÁ®ãÔºå‰ºöÂØºËá¥ÈòüÂàóÁöÑÂêéÁª≠Ê∂àÊÅØÂ§ÑÁêÜÂá∫Áé∞Âª∂Ëøü„ÄÇÂ¶ÇÊûúÁ¢∞ÊíûÁöÑÊØîËæÉÈ¢ëÁπÅÊàñËÄÖÈòüÂàóÈáåÊ∂àÊÅØÊØîËæÉÂ§öÔºåsleep ÂèØËÉΩÂπ∂‰∏çÂêàÈÄÇ„ÄÇÂ¶ÇÊûúÂõ†‰∏∫‰∏™Âà´Ê≠ªÈîÅÁöÑ key ÂØºËá¥Âä†ÈîÅ‰∏çÊàêÂäüÔºåÁ∫øÁ®ã‰ºöÂΩªÂ∫ïÂ†µÊ≠ªÔºåÂØºËá¥ÂêéÁª≠Ê∂àÊÅØÊ∞∏ËøúÂæó‰∏çÂà∞ÂèäÊó∂Â§ÑÁêÜ„ÄÇ Âª∂Êó∂ÈòüÂàóËøôÁßçÊñπÂºèÊØîËæÉÈÄÇÂêàÂºÇÊ≠•Ê∂àÊÅØÂ§ÑÁêÜÔºåÂ∞ÜÂΩìÂâçÂÜ≤Á™ÅÁöÑËØ∑Ê±ÇÊâîÂà∞Âè¶‰∏Ä‰∏™ÈòüÂàóÂª∂ÂêéÂ§ÑÁêÜ‰ª•ÈÅøÂºÄÂÜ≤Á™Å„ÄÇ &nbsp; Âª∂Êó∂ÈòüÂàóÁöÑÂÆûÁé∞Âª∂Êó∂ÈòüÂàóÂèØ‰ª•ÈÄöËøá Redis ÁöÑ zset(ÊúâÂ∫èÂàóË°®) Êù•ÂÆûÁé∞„ÄÇÊàë‰ª¨Â∞ÜÊ∂àÊÅØÂ∫èÂàóÂåñÊàê‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤‰Ωú‰∏∫ zset ÁöÑvalueÔºåËøô‰∏™Ê∂àÊÅØÁöÑÂà∞ÊúüÂ§ÑÁêÜÊó∂Èó¥‰Ωú‰∏∫scoreÔºåÁÑ∂ÂêéÁî®Â§ö‰∏™Á∫øÁ®ãËΩÆËØ¢ zset Ëé∑ÂèñÂà∞ÊúüÁöÑ‰ªªÂä°ËøõË°åÂ§ÑÁêÜÔºåÂ§ö‰∏™Á∫øÁ®ãÊòØ‰∏∫‰∫Ü‰øùÈöúÂèØÁî®ÊÄßÔºå‰∏á‰∏ÄÊåÇ‰∫Ü‰∏Ä‰∏™Á∫øÁ®ãËøòÊúâÂÖ∂ÂÆÉÁ∫øÁ®ãÂèØ‰ª•ÁªßÁª≠Â§ÑÁêÜ„ÄÇÂõ†‰∏∫ÊúâÂ§ö‰∏™Á∫øÁ®ãÔºåÊâÄ‰ª•ÈúÄË¶ÅËÄÉËôëÂπ∂Âèë‰∫âÊä¢‰ªªÂä°ÔºåÁ°Æ‰øù‰ªªÂä°‰∏çËÉΩË¢´Â§öÊ¨°ÊâßË°å„ÄÇ 12345678910111213141516171819def delay(msg): msg.id = str(uuid.uuid4()) # ‰øùËØÅ value ÂÄºÂîØ‰∏Ä value = json.dumps(msg) retry_ts = time.time() + 5 # 5 ÁßíÂêéÈáçËØï redis.zadd("delay-queue", retry_ts, value)def loop(): while True: # ÊúÄÂ§öÂèñ 1 Êù° values = redis.zrangebyscore("delay-queue", 0, time.time(), start=0, num=1) if not values: time.sleep(1) # Âª∂Êó∂ÈòüÂàóÁ©∫ÁöÑÔºå‰ºëÊÅØ 1s continue value = values[0] # ÊãøÁ¨¨‰∏ÄÊù°Ôºå‰πüÂè™Êúâ‰∏ÄÊù° success = redis.zrem("delay-queue", value) # ‰ªéÊ∂àÊÅØÈòüÂàó‰∏≠ÁßªÈô§ËØ•Ê∂àÊÅØ if success: # Âõ†‰∏∫ÊúâÂ§öËøõÁ®ãÂπ∂ÂèëÁöÑÂèØËÉΩÔºåÊúÄÁªàÂè™‰ºöÊúâ‰∏Ä‰∏™ËøõÁ®ãÂèØ‰ª•Êä¢Âà∞Ê∂àÊÅØ msg = json.loads(value) handle_msg(msg) Redis ÁöÑ zrem ÊñπÊ≥ïÊòØÂ§öÁ∫øÁ®ãÂ§öËøõÁ®ã‰∫âÊä¢‰ªªÂä°ÁöÑÂÖ≥ÈîÆÔºåÂÆÉÁöÑËøîÂõûÂÄºÂÜ≥ÂÆö‰∫ÜÂΩìÂâçÂÆû‰æãÊúâÊ≤°ÊúâÊä¢Âà∞‰ªªÂä°ÔºåÂõ†‰∏∫ loop ÊñπÊ≥ïÂèØËÉΩ‰ºöË¢´Â§ö‰∏™Á∫øÁ®ã„ÄÅÂ§ö‰∏™ËøõÁ®ãË∞ÉÁî®ÔºåÂêå‰∏Ä‰∏™‰ªªÂä°ÂèØËÉΩ‰ºöË¢´Â§ö‰∏™ËøõÁ®ãÁ∫øÁ®ãÊä¢Âà∞ÔºåÈÄöËøá zrem Êù•ÂÜ≥ÂÆöÂîØ‰∏ÄÁöÑÂ±û‰∏ª„ÄÇ ÂêåÊó∂ÔºåÊàë‰ª¨Ë¶ÅÊ≥®ÊÑè‰∏ÄÂÆöË¶ÅÂØπ handle_msg ËøõË°åÂºÇÂ∏∏ÊçïËé∑ÔºåÈÅøÂÖçÂõ†‰∏∫‰∏™Âà´‰ªªÂä°Â§ÑÁêÜÈóÆÈ¢òÂØºËá¥Âæ™ÁéØÂºÇÂ∏∏ÈÄÄÂá∫„ÄÇ‰ª•‰∏ãÊòØ Java ÁâàÊú¨ÁöÑÂª∂Êó∂ÈòüÂàóÂÆûÁé∞ÔºåÂõ†‰∏∫Ë¶Å‰ΩøÁî®Âà∞ Json Â∫èÂàóÂåñÔºåÊâÄ‰ª•ËøòÈúÄË¶Å fastjson Â∫ìÁöÑÊîØÊåÅ„ÄÇ 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990import java.lang.reflect.Type;import java.util.Set;import java.util.UUID;import com.alibaba.fastjson.JSON;import com.alibaba.fastjson.TypeReference;import redis.clients.jedis.Jedis;public class RedisDelayingQueue&lt;T&gt; &#123; static class TaskItem&lt;T&gt; &#123; public String id; public T msg; &#125; // fastjson Â∫èÂàóÂåñÂØπË±°‰∏≠Â≠òÂú® generic Á±ªÂûãÊó∂ÔºåÈúÄË¶Å‰ΩøÁî® TypeReference private Type TaskType = new TypeReference&lt;TaskItem&lt;T&gt;&gt;() &#123; &#125;.getType(); private Jedis jedis; private String queueKey; public RedisDelayingQueue(Jedis jedis, String queueKey) &#123; this.jedis = jedis; this.queueKey = queueKey; &#125; public void delay(T msg) &#123; TaskItem&lt;T&gt; task = new TaskItem&lt;T&gt;(); task.id = UUID.randomUUID().toString(); // ÂàÜÈÖçÂîØ‰∏ÄÁöÑ uuid task.msg = msg; String s = JSON.toJSONString(task); // fastjson Â∫èÂàóÂåñ jedis.zadd(queueKey, System.currentTimeMillis() + 5000, s); // Â°ûÂÖ•Âª∂Êó∂ÈòüÂàó ,5s ÂêéÂÜçËØï &#125; public void loop() &#123; while (!Thread.interrupted()) &#123; // Âè™Âèñ‰∏ÄÊù° Set&lt;String&gt; values = jedis.zrangeByScore(queueKey, 0, System.currentTimeMillis(), 0, 1); if (values.isEmpty()) &#123; try &#123; Thread.sleep(500); // Ê≠á‰ºöÁªßÁª≠ &#125; catch (InterruptedException e) &#123; break; &#125; continue; &#125; String s = values.iterator().next(); if (jedis.zrem(queueKey, s) &gt; 0) &#123; // Êä¢Âà∞‰∫Ü TaskItem&lt;T&gt; task = JSON.parseObject(s, TaskType); // fastjson ÂèçÂ∫èÂàóÂåñ this.handleMsg(task.msg); &#125; &#125; &#125; public void handleMsg(T msg) &#123; System.out.println(msg); &#125; public static void main(String[] args) &#123; Jedis jedis = new Jedis(); RedisDelayingQueue&lt;String&gt; queue = new RedisDelayingQueue&lt;&gt;(jedis, "q-demo"); Thread producer = new Thread() &#123; public void run() &#123; for (int i = 0; i &lt; 10; i++) &#123; queue.delay("codehole" + i); &#125; &#125; &#125;; Thread consumer = new Thread() &#123; public void run() &#123; queue.loop(); &#125; &#125;; producer.start(); consumer.start(); try &#123; producer.join(); Thread.sleep(6000); consumer.interrupt(); consumer.join(); &#125; catch (InterruptedException e) &#123; &#125; &#125;&#125; &nbsp; Ëøõ‰∏ÄÊ≠•‰ºòÂåñ‰∏äÈù¢ÁöÑÁÆóÊ≥ï‰∏≠Âêå‰∏Ä‰∏™‰ªªÂä°ÂèØËÉΩ‰ºöË¢´Â§ö‰∏™ËøõÁ®ãÂèñÂà∞‰πãÂêéÂÜç‰ΩøÁî® zrem ËøõË°å‰∫âÊä¢ÔºåÈÇ£‰∫õÊ≤°Êä¢Âà∞ÁöÑËøõÁ®ãÈÉΩÊòØÁôΩÂèñ‰∫Ü‰∏ÄÊ¨°‰ªªÂä°ÔºåËøôÊòØÊµ™Ë¥π„ÄÇÂèØ‰ª•ËÄÉËôë‰ΩøÁî® lua scripting Êù•‰ºòÂåñ‰∏Ä‰∏ãËøô‰∏™ÈÄªËæëÔºåÂ∞Ü zrangebyscore Âíå zrem ‰∏ÄÂêåÊå™Âà∞ÊúçÂä°Âô®Á´ØËøõË°åÂéüÂ≠êÂåñÊìç‰ΩúÔºåËøôÊ†∑Â§ö‰∏™ËøõÁ®ã‰πãÈó¥‰∫âÊä¢‰ªªÂä°Êó∂Â∞±‰∏ç‰ºöÂá∫Áé∞ËøôÁßçÊµ™Ë¥π‰∫Ü„ÄÇ &nbsp; ÊÄùËÄÉ Redis ‰Ωú‰∏∫Ê∂àÊÅØÈòüÂàó‰∏∫‰ªÄ‰πà‰∏çËÉΩ‰øùËØÅ 100% ÁöÑÂèØÈù†ÊÄßÔºü ‰ΩøÁî® Lua Scripting Êù•‰ºòÂåñÂª∂Êó∂ÈòüÂàóÁöÑÈÄªËæë„ÄÇ]]></content>
      <tags>
        <tag>ËΩ¨Âèë</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Â∫îÁî® 1ÔºöÂçÉÂ∏ÜÁ´ûÂèë ‚Äî‚Äî ÂàÜÂ∏ÉÂºèÈîÅ]]></title>
    <url>%2F2018%2F09%2F22%2FRedis%20%E6%B7%B1%E5%BA%A6%E5%8E%86%E9%99%A9%2F3%E5%BA%94%E7%94%A8%201%EF%BC%9A%E5%8D%83%E5%B8%86%E7%AB%9E%E5%8F%91%20%E2%80%94%E2%80%94%20%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%2F</url>
    <content type="text"><![CDATA[‰ΩúËÄÖÔºöÊéòÈáëÂ∞èÂÜå Êù•Ê∫êÔºöhttps://mp.weixin.qq.com/s/JW__OgOBmCrOlh38ABCWNA ÂàÜÂ∏ÉÂºèÂ∫îÁî®ËøõË°åÈÄªËæëÂ§ÑÁêÜÊó∂ÁªèÂ∏∏‰ºöÈÅáÂà∞Âπ∂ÂèëÈóÆÈ¢ò„ÄÇ ÊØîÂ¶Ç‰∏Ä‰∏™Êìç‰ΩúË¶Å‰øÆÊîπÁî®Êà∑ÁöÑÁä∂ÊÄÅÔºå‰øÆÊîπÁä∂ÊÄÅÈúÄË¶ÅÂÖàËØªÂá∫Áî®Êà∑ÁöÑÁä∂ÊÄÅÔºåÂú®ÂÜÖÂ≠òÈáåËøõË°å‰øÆÊîπÔºåÊîπÂÆå‰∫ÜÂÜçÂ≠òÂõûÂéª„ÄÇÂ¶ÇÊûúËøôÊ†∑ÁöÑÊìç‰ΩúÂêåÊó∂ËøõË°å‰∫ÜÔºåÂ∞±‰ºöÂá∫Áé∞Âπ∂ÂèëÈóÆÈ¢òÔºåÂõ†‰∏∫ËØªÂèñÂíå‰øùÂ≠òÁä∂ÊÄÅËøô‰∏§‰∏™Êìç‰Ωú‰∏çÊòØÂéüÂ≠êÁöÑ„ÄÇÔºàWiki Ëß£ÈáäÔºöÊâÄË∞ìÂéüÂ≠êÊìç‰ΩúÊòØÊåá‰∏ç‰ºöË¢´Á∫øÁ®ãË∞ÉÂ∫¶Êú∫Âà∂ÊâìÊñ≠ÁöÑÊìç‰ΩúÔºõËøôÁßçÊìç‰Ωú‰∏ÄÊó¶ÂºÄÂßãÔºåÂ∞±‰∏ÄÁõ¥ËøêË°åÂà∞ÁªìÊùüÔºå‰∏≠Èó¥‰∏ç‰ºöÊúâ‰ªª‰Ωï context switch Á∫øÁ®ãÂàáÊç¢„ÄÇÔºâ Ëøô‰∏™Êó∂ÂÄôÂ∞±Ë¶Å‰ΩøÁî®Âà∞ÂàÜÂ∏ÉÂºèÈîÅÊù•ÈôêÂà∂Á®ãÂ∫èÁöÑÂπ∂ÂèëÊâßË°å„ÄÇRedis ÂàÜÂ∏ÉÂºèÈîÅ‰ΩøÁî®ÈùûÂ∏∏ÂπøÊ≥õÔºåÂÆÉÊòØÈù¢ËØïÁöÑÈáçË¶ÅËÄÉÁÇπ‰πã‰∏ÄÔºåÂæàÂ§öÂêåÂ≠¶ÈÉΩÁü•ÈÅìËøô‰∏™Áü•ËØÜÔºå‰πüÂ§ßËá¥Áü•ÈÅìÂàÜÂ∏ÉÂºèÈîÅÁöÑÂéüÁêÜÔºå‰ΩÜÊòØÂÖ∑‰ΩìÂà∞ÁªÜËäÇÁöÑ‰ΩøÁî®‰∏äÂæÄÂæÄÂπ∂‰∏çÂÆåÂÖ®Ê≠£Á°Æ„ÄÇ &nbsp; ÂàÜÂ∏ÉÂºèÈîÅÂàÜÂ∏ÉÂºèÈîÅÊú¨Ë¥®‰∏äË¶ÅÂÆûÁé∞ÁöÑÁõÆÊ†áÂ∞±ÊòØÂú® Redis ÈáåÈù¢Âç†‰∏Ä‰∏™‚ÄúËåÖÂùë‚ÄùÔºåÂΩìÂà´ÁöÑËøõÁ®ã‰πüË¶ÅÊù•Âç†Êó∂ÔºåÂèëÁé∞Â∑≤ÁªèÊúâ‰∫∫Ëπ≤Âú®ÈÇ£Èáå‰∫ÜÔºåÂ∞±Âè™Â•ΩÊîæÂºÉÊàñËÄÖÁ®çÂêéÂÜçËØï„ÄÇÂç†Âùë‰∏ÄËà¨ÊòØ‰ΩøÁî® setnx(set if not exists) Êåá‰ª§ÔºåÂè™ÂÖÅËÆ∏Ë¢´‰∏Ä‰∏™ÂÆ¢Êà∑Á´ØÂç†Âùë„ÄÇÂÖàÊù•ÂÖàÂç†Ôºå Áî®ÂÆå‰∫ÜÔºåÂÜçË∞ÉÁî® del Êåá‰ª§ÈáäÊîæËåÖÂùë„ÄÇ 123456789// ËøôÈáåÁöÑÂÜíÂè∑:Â∞±ÊòØ‰∏Ä‰∏™ÊôÆÈÄöÁöÑÂ≠óÁ¨¶ÔºåÊ≤°ÁâπÂà´Âê´‰πâÔºåÂÆÉÂèØ‰ª•ÊòØ‰ªªÊÑèÂÖ∂ÂÆÉÂ≠óÁ¨¶Ôºå‰∏çË¶ÅËØØËß£&gt; setnx lock:codehole trueOK... do something critical ...&gt; del lock:codehole(integer) 1...https://juejin.imÊéòÈáë ‚Äî ‰∏Ä‰∏™Â∏ÆÂä©ÂºÄÂèëËÄÖÊàêÈïøÁöÑÁ§æÂå∫ ‰ΩÜÊòØÊúâ‰∏™ÈóÆÈ¢òÔºåÂ¶ÇÊûúÈÄªËæëÊâßË°åÂà∞‰∏≠Èó¥Âá∫Áé∞ÂºÇÂ∏∏‰∫ÜÔºåÂèØËÉΩ‰ºöÂØºËá¥ del Êåá‰ª§Ê≤°ÊúâË¢´Ë∞ÉÁî®ÔºåËøôÊ†∑Â∞±‰ºöÈô∑ÂÖ•Ê≠ªÈîÅÔºåÈîÅÊ∞∏ËøúÂæó‰∏çÂà∞ÈáäÊîæ„ÄÇ ‰∫éÊòØÊàë‰ª¨Âú®ÊãøÂà∞ÈîÅ‰πãÂêéÔºåÂÜçÁªôÈîÅÂä†‰∏ä‰∏Ä‰∏™ËøáÊúüÊó∂Èó¥ÔºåÊØîÂ¶Ç 5sÔºåËøôÊ†∑Âç≥‰Ωø‰∏≠Èó¥Âá∫Áé∞ÂºÇÂ∏∏‰πüÂèØ‰ª•‰øùËØÅ 5 Áßí‰πãÂêéÈîÅ‰ºöËá™Âä®ÈáäÊîæ„ÄÇ 123456&gt; setnx lock:codehole trueOK&gt; expire lock:codehole 5... do something critical ...&gt; del lock:codehole(integer) 1 ‰ΩÜÊòØ‰ª•‰∏äÈÄªËæëËøòÊúâÈóÆÈ¢ò„ÄÇÂ¶ÇÊûúÂú® setnx Âíå expire ‰πãÈó¥ÊúçÂä°Âô®ËøõÁ®ãÁ™ÅÁÑ∂ÊåÇÊéâ‰∫ÜÔºåÂèØËÉΩÊòØÂõ†‰∏∫Êú∫Âô®ÊéâÁîµÊàñËÄÖÊòØË¢´‰∫∫‰∏∫ÊùÄÊéâÁöÑÔºåÂ∞±‰ºöÂØºËá¥ expire Âæó‰∏çÂà∞ÊâßË°åÔºå‰πü‰ºöÈÄ†ÊàêÊ≠ªÈîÅ„ÄÇ ËøôÁßçÈóÆÈ¢òÁöÑÊ†πÊ∫êÂ∞±Âú®‰∫é setnx Âíå expire ÊòØ‰∏§Êù°Êåá‰ª§ËÄå‰∏çÊòØÂéüÂ≠êÊåá‰ª§„ÄÇÂ¶ÇÊûúËøô‰∏§Êù°Êåá‰ª§ÂèØ‰ª•‰∏ÄËµ∑ÊâßË°åÂ∞±‰∏ç‰ºöÂá∫Áé∞ÈóÆÈ¢ò„ÄÇ‰πüËÆ∏‰Ω†‰ºöÊÉ≥Âà∞Áî® Redis ‰∫ãÂä°Êù•Ëß£ÂÜ≥„ÄÇ‰ΩÜÊòØËøôÈáå‰∏çË°åÔºåÂõ†‰∏∫ expire ÊòØ‰æùËµñ‰∫é setnx ÁöÑÊâßË°åÁªìÊûúÁöÑÔºåÂ¶ÇÊûú setnx Ê≤°Êä¢Âà∞ÈîÅÔºåexpire ÊòØ‰∏çÂ∫îËØ•ÊâßË°åÁöÑ„ÄÇ‰∫ãÂä°ÈáåÊ≤°Êúâ if-else ÂàÜÊîØÈÄªËæëÔºå‰∫ãÂä°ÁöÑÁâπÁÇπÊòØ‰∏ÄÂè£Ê∞îÊâßË°åÔºåË¶Å‰πàÂÖ®ÈÉ®ÊâßË°åË¶Å‰πà‰∏Ä‰∏™ÈÉΩ‰∏çÊâßË°å„ÄÇ ‰∏∫‰∫ÜËß£ÂÜ≥Ëøô‰∏™ÁñëÈöæÔºåRedis ÂºÄÊ∫êÁ§æÂå∫Ê∂åÁé∞‰∫Ü‰∏ÄÂ†ÜÂàÜÂ∏ÉÂºèÈîÅÁöÑ libraryÔºå‰∏ìÈó®Áî®Êù•Ëß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢ò„ÄÇÂÆûÁé∞ÊñπÊ≥ïÊûÅ‰∏∫Â§çÊùÇÔºåÂ∞èÁôΩÁî®Êà∑‰∏ÄËà¨Ë¶ÅË¥πÂæàÂ§ßÁöÑÁ≤æÂäõÊâçÂèØ‰ª•ÊêûÊáÇ„ÄÇÂ¶ÇÊûú‰Ω†ÈúÄË¶Å‰ΩøÁî®ÂàÜÂ∏ÉÂºèÈîÅÔºåÊÑèÂë≥ÁùÄ‰Ω†‰∏çËÉΩ‰ªÖ‰ªÖ‰ΩøÁî® Jedis ÊàñËÄÖ redis-py Â∞±Ë°å‰∫ÜÔºåËøòÂæóÂºïÂÖ•ÂàÜÂ∏ÉÂºèÈîÅÁöÑ library„ÄÇ ‰∏∫‰∫ÜÊ≤ªÁêÜËøô‰∏™‰π±Ë±°ÔºåRedis 2.8 ÁâàÊú¨‰∏≠‰ΩúËÄÖÂä†ÂÖ•‰∫Ü set Êåá‰ª§ÁöÑÊâ©Â±ïÂèÇÊï∞Ôºå‰ΩøÂæó setnx Âíå expire Êåá‰ª§ÂèØ‰ª•‰∏ÄËµ∑ÊâßË°åÔºåÂΩªÂ∫ïËß£ÂÜ≥‰∫ÜÂàÜÂ∏ÉÂºèÈîÅÁöÑ‰π±Ë±°„ÄÇ‰ªéÊ≠§‰ª•ÂêéÊâÄÊúâÁöÑÁ¨¨‰∏âÊñπÂàÜÂ∏ÉÂºèÈîÅ library ÂèØ‰ª•‰ºëÊÅØ‰∫Ü„ÄÇ 1234&gt; set lock:codehole true ex 5 nxOK... do something critical ...&gt; del lock:codehole ‰∏äÈù¢Ëøô‰∏™Êåá‰ª§Â∞±ÊòØ setnx Âíå expire ÁªÑÂêàÂú®‰∏ÄËµ∑ÁöÑÂéüÂ≠êÊåá‰ª§ÔºåÂÆÉÂ∞±ÊòØÂàÜÂ∏ÉÂºèÈîÅÁöÑÂ••‰πâÊâÄÂú®„ÄÇ &nbsp; Ë∂ÖÊó∂ÈóÆÈ¢òRedis ÁöÑÂàÜÂ∏ÉÂºèÈîÅ‰∏çËÉΩËß£ÂÜ≥Ë∂ÖÊó∂ÈóÆÈ¢òÔºåÂ¶ÇÊûúÂú®Âä†ÈîÅÂíåÈáäÊîæÈîÅ‰πãÈó¥ÁöÑÈÄªËæëÊâßË°åÁöÑÂ§™ÈïøÔºå‰ª•Ëá≥‰∫éË∂ÖÂá∫‰∫ÜÈîÅÁöÑË∂ÖÊó∂ÈôêÂà∂ÔºåÂ∞±‰ºöÂá∫Áé∞ÈóÆÈ¢ò„ÄÇÂõ†‰∏∫ËøôÊó∂ÂÄôÈîÅËøáÊúü‰∫ÜÔºåÁ¨¨‰∫å‰∏™Á∫øÁ®ãÈáçÊñ∞ÊåÅÊúâ‰∫ÜËøôÊääÈîÅÔºå‰ΩÜÊòØÁ¥ßÊé•ÁùÄÁ¨¨‰∏Ä‰∏™Á∫øÁ®ãÊâßË°åÂÆå‰∫Ü‰∏öÂä°ÈÄªËæëÔºåÂ∞±ÊääÈîÅÁªôÈáäÊîæ‰∫ÜÔºåÁ¨¨‰∏â‰∏™Á∫øÁ®ãÂ∞±‰ºöÂú®Á¨¨‰∫å‰∏™Á∫øÁ®ãÈÄªËæëÊâßË°åÂÆå‰πãÈó¥ÊãøÂà∞‰∫ÜÈîÅ„ÄÇ ‰∏∫‰∫ÜÈÅøÂÖçËøô‰∏™ÈóÆÈ¢òÔºåRedis ÂàÜÂ∏ÉÂºèÈîÅ‰∏çË¶ÅÁî®‰∫éËæÉÈïøÊó∂Èó¥ÁöÑ‰ªªÂä°„ÄÇÂ¶ÇÊûúÁúüÁöÑÂÅ∂Â∞îÂá∫Áé∞‰∫ÜÔºåÊï∞ÊçÆÂá∫Áé∞ÁöÑÂ∞èÊ≥¢Èîô‰π±ÂèØËÉΩÈúÄË¶Å‰∫∫Â∑•‰ªãÂÖ•Ëß£ÂÜ≥„ÄÇ 1234tag = random.nextint() # ÈöèÊú∫Êï∞if redis.set(key, tag, nx=True, ex=5): do_something() redis.delifequals(key, tag) # ÂÅáÊÉ≥ÁöÑ delifequals Êåá‰ª§... Êúâ‰∏Ä‰∏™Á®çÂæÆÂÆâÂÖ®‰∏ÄÁÇπÁöÑÊñπÊ°àÊòØ‰∏∫ set Êåá‰ª§ÁöÑ value ÂèÇÊï∞ËÆæÁΩÆ‰∏∫‰∏Ä‰∏™ÈöèÊú∫Êï∞ÔºåÈáäÊîæÈîÅÊó∂ÂÖàÂåπÈÖçÈöèÊú∫Êï∞ÊòØÂê¶‰∏ÄËá¥ÔºåÁÑ∂ÂêéÂÜçÂà†Èô§ keyÔºåËøôÊòØ‰∏∫‰∫ÜÁ°Æ‰øùÂΩìÂâçÁ∫øÁ®ãÂç†ÊúâÁöÑÈîÅ‰∏ç‰ºöË¢´ÂÖ∂ÂÆÉÁ∫øÁ®ãÈáäÊîæÔºåÈô§ÈùûËøô‰∏™ÈîÅÊòØËøáÊúü‰∫ÜË¢´ÊúçÂä°Âô®Ëá™Âä®ÈáäÊîæÁöÑ„ÄÇ ‰ΩÜÊòØÂåπÈÖç value ÂíåÂà†Èô§ key ‰∏çÊòØ‰∏Ä‰∏™ÂéüÂ≠êÊìç‰ΩúÔºåRedis ‰πüÊ≤°ÊúâÊèê‰æõÁ±ª‰ºº‰∫édelifequalsËøôÊ†∑ÁöÑÊåá‰ª§ÔºåËøôÂ∞±ÈúÄË¶Å‰ΩøÁî® Lua ËÑöÊú¨Êù•Â§ÑÁêÜ‰∫ÜÔºåÂõ†‰∏∫ Lua ËÑöÊú¨ÂèØ‰ª•‰øùËØÅËøûÁª≠Â§ö‰∏™Êåá‰ª§ÁöÑÂéüÂ≠êÊÄßÊâßË°å„ÄÇ 123456# delifequalsif redis.call("get",KEYS[1]) == ARGV[1] then return redis.call("del",KEYS[1])else return 0end ‰ΩÜÊòØËøô‰πü‰∏çÊòØ‰∏Ä‰∏™ÂÆåÁæéÁöÑÊñπÊ°àÔºåÂÆÉÂè™ÊòØÁõ∏ÂØπÂÆâÂÖ®‰∏ÄÁÇπÔºåÂõ†‰∏∫Â¶ÇÊûúÁúüÁöÑË∂ÖÊó∂‰∫ÜÔºåÂΩìÂâçÁ∫øÁ®ãÁöÑÈÄªËæëÊ≤°ÊúâÊâßË°åÂÆåÔºåÂÖ∂ÂÆÉÁ∫øÁ®ã‰πü‰ºö‰πòËôöËÄåÂÖ•„ÄÇ &nbsp; ÂèØÈáçÂÖ•ÊÄßÂèØÈáçÂÖ•ÊÄßÊòØÊåáÁ∫øÁ®ãÂú®ÊåÅÊúâÈîÅÁöÑÊÉÖÂÜµ‰∏ãÂÜçÊ¨°ËØ∑Ê±ÇÂä†ÈîÅÔºåÂ¶ÇÊûú‰∏Ä‰∏™ÈîÅÊîØÊåÅÂêå‰∏Ä‰∏™Á∫øÁ®ãÁöÑÂ§öÊ¨°Âä†ÈîÅÔºåÈÇ£‰πàËøô‰∏™ÈîÅÂ∞±ÊòØÂèØÈáçÂÖ•ÁöÑ„ÄÇÊØîÂ¶Ç Java ËØ≠Ë®ÄÈáåÊúâ‰∏™ ReentrantLock Â∞±ÊòØÂèØÈáçÂÖ•ÈîÅ„ÄÇRedis ÂàÜÂ∏ÉÂºèÈîÅÂ¶ÇÊûúË¶ÅÊîØÊåÅÂèØÈáçÂÖ•ÔºåÈúÄË¶ÅÂØπÂÆ¢Êà∑Á´ØÁöÑ set ÊñπÊ≥ïËøõË°åÂåÖË£ÖÔºå‰ΩøÁî®Á∫øÁ®ãÁöÑ Threadlocal ÂèòÈáèÂ≠òÂÇ®ÂΩìÂâçÊåÅÊúâÈîÅÁöÑËÆ°Êï∞„ÄÇ 12345678910111213141516171819202122232425262728293031323334353637383940414243# -*- coding: utf-8import redisimport threadinglocks = threading.local()locks.redis = &#123;&#125;def key_for(user_id): return "account_&#123;&#125;".format(user_id)def _lock(client, key): return bool(client.set(key, True, nx=True, ex=5))def _unlock(client, key): client.delete(key)def lock(client, user_id): key = key_for(user_id) if key in locks.redis: locks.redis[key] += 1 return True ok = _lock(client, key) if not ok: return False locks.redis[key] = 1 return Truedef unlock(client, user_id): key = key_for(user_id) if key in locks.redis: locks.redis[key] -= 1 if locks.redis[key] &lt;= 0: del locks.redis[key] self._unlock(key) return True return Falseclient = redis.StrictRedis()print "lock", lock(client, "codehole")print "lock", lock(client, "codehole")print "unlock", unlock(client, "codehole")print "unlock", unlock(client, "codehole") ‰ª•‰∏äËøò‰∏çÊòØÂèØÈáçÂÖ•ÈîÅÁöÑÂÖ®ÈÉ®ÔºåÁ≤æÁ°Æ‰∏ÄÁÇπËøòÈúÄË¶ÅËÄÉËôëÂÜÖÂ≠òÈîÅËÆ°Êï∞ÁöÑËøáÊúüÊó∂Èó¥Ôºå‰ª£Á†ÅÂ§çÊùÇÂ∫¶Â∞Ü‰ºöÁªßÁª≠ÂçáÈ´ò„ÄÇËÄÅÈí±‰∏çÊé®Ëçê‰ΩøÁî®ÂèØÈáçÂÖ•ÈîÅÔºåÂÆÉÂä†Èáç‰∫ÜÂÆ¢Êà∑Á´ØÁöÑÂ§çÊùÇÊÄßÔºåÂú®ÁºñÂÜô‰∏öÂä°ÊñπÊ≥ïÊó∂Ê≥®ÊÑèÂú®ÈÄªËæëÁªìÊûÑ‰∏äËøõË°åË∞ÉÊï¥ÂÆåÂÖ®ÂèØ‰ª•‰∏ç‰ΩøÁî®ÂèØÈáçÂÖ•ÈîÅ„ÄÇ‰∏ãÈù¢ÊòØ Java ÁâàÊú¨ÁöÑÂèØÈáçÂÖ•ÈîÅ„ÄÇ 123456789101112131415161718192021222324252627282930313233343536373839404142434445public class RedisWithReentrantLock &#123; private ThreadLocal&lt;Map&lt;String, Integer&gt;&gt; lockers = new ThreadLocal&lt;&gt;(); private Jedis jedis; public RedisWithReentrantLock(Jedis jedis) &#123; this.jedis = jedis; &#125; private boolean _lock(String key) &#123; return jedis.set(key, "", "nx", "ex", 5L) != null; &#125; private void _unlock(String key) &#123; jedis.del(key); &#125; private Map&lt;String, Integer&gt; currentLockers() &#123; Map&lt;String, Integer&gt; refs = lockers.get(); if (refs != null) &#123; return refs; &#125; lockers.set(new HashMap&lt;&gt;()); return lockers.get(); &#125; public boolean lock(String key) &#123; Map&lt;String, Integer&gt; refs = currentLockers(); Integer refCnt = refs.get(key); if (refCnt != null) &#123; refs.put(key, refCnt + 1); return true; &#125; boolean ok = this._lock(key); if (!ok) &#123; return false; &#125; refs.put(key, 1); return true; &#125; public boolean unlock(String key) &#123; Map&lt;String, Integer&gt; refs = currentLockers(); Integer refCnt = refs Ë∑ü Python ÁâàÊú¨Âå∫Âà´‰∏çÂ§ßÔºå‰πüÊòØÂü∫‰∫é ThreadLocal ÂíåÂºïÁî®ËÆ°Êï∞„ÄÇ‰ª•‰∏äËøò‰∏çÊòØÂàÜÂ∏ÉÂºèÈîÅÁöÑÂÖ®ÈÉ®ÔºåÂú®Â∞èÂÜåÁöÑÊãìÂ±ïÁØá„ÄäÊãæÈÅóÊºèË°• ‚Äî‚Äî ÂÜçË∞àÂàÜÂ∏ÉÂºèÈîÅ„ÄãÔºåÊàë‰ª¨Ëøò‰ºöÁªßÁª≠ÂØπÂàÜÂ∏ÉÂºèÈîÅÂÅöËøõ‰∏ÄÊ≠•ÁöÑÊ∑±ÂÖ•ÁêÜËß£„ÄÇ &nbsp; ÊÄùËÄÉÈ¢òReview ‰∏ã‰Ω†Ëá™Â∑±ÁöÑÈ°πÁõÆ‰ª£Á†Å‰∏≠ÁöÑÂàÜÂ∏ÉÂºèÈîÅÔºåÂÆÉÁöÑ‰ΩøÁî®ÊñπÂºèÊòØÂê¶Ê†áÂáÜÊ≠£Á°ÆÔºüÂ¶ÇÊûú‰Ω†ËøòÊ≤°Áî®ËøáÂàÜÂ∏ÉÂºèÈîÅÔºåÊÉ≥ÊÉ≥Ëá™Â∑±ÁöÑÈ°πÁõÆ‰∏≠ÊòØÂê¶ÂèØ‰ª•Áî®‰∏äÔºü]]></content>
      <tags>
        <tag>ËΩ¨Âèë</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂºÄÁØáÔºöÊéà‰∫∫‰ª•È±º‰∏çËã•Êéà‰∫∫‰ª•Ê∏î ‚Äî‚Äî Redis ÂèØ‰ª•Áî®Êù•ÂÅö‰ªÄ‰πàÔºü]]></title>
    <url>%2F2018%2F09%2F22%2FRedis%20%E6%B7%B1%E5%BA%A6%E5%8E%86%E9%99%A9%2F1%E5%BC%80%E7%AF%87%EF%BC%9A%E6%8E%88%E4%BA%BA%E4%BB%A5%E9%B1%BC%E4%B8%8D%E8%8B%A5%E6%8E%88%E4%BA%BA%E4%BB%A5%E6%B8%94%20%E2%80%94%E2%80%94%20Redis%20%E5%8F%AF%E4%BB%A5%E7%94%A8%E6%9D%A5%E5%81%9A%E4%BB%80%E4%B9%88%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[‰ΩúËÄÖÔºöÊéòÈáëÂ∞èÂÜå Êù•Ê∫êÔºöhttps://mp.weixin.qq.com/s/JW__OgOBmCrOlh38ABCWNA Redis ÊòØ‰∫íËÅîÁΩëÊäÄÊúØÈ¢ÜÂüü‰ΩøÁî®ÊúÄ‰∏∫ÂπøÊ≥õÁöÑÂ≠òÂÇ®‰∏≠Èó¥‰ª∂ÔºåÂÆÉÊòØ„ÄåRemote Dictionary Service„ÄçÁöÑÈ¶ñÂ≠óÊØçÁº©ÂÜôÔºå‰πüÂ∞±ÊòØ„ÄåËøúÁ®ãÂ≠óÂÖ∏ÊúçÂä°„Äç„ÄÇRedis ‰ª•ÂÖ∂Ë∂ÖÈ´òÁöÑÊÄßËÉΩ„ÄÅÂÆåÁæéÁöÑÊñáÊ°£„ÄÅÁÆÄÊ¥ÅÊòìÊáÇÁöÑÊ∫êÁ†ÅÂíå‰∏∞ÂØåÁöÑÂÆ¢Êà∑Á´ØÂ∫ìÊîØÊåÅÂú®ÂºÄÊ∫ê‰∏≠Èó¥‰ª∂È¢ÜÂüüÂπøÂèóÂ•ΩËØÑ„ÄÇÂõΩÂÜÖÂ§ñÂæàÂ§öÂ§ßÂûã‰∫íËÅîÁΩëÂÖ¨Âè∏ÈÉΩÂú®‰ΩøÁî® RedisÔºåÊØîÂ¶Ç Twitter„ÄÅYouPorn„ÄÅÊö¥Èõ™Â®±‰πê„ÄÅGithub„ÄÅStackOverflow„ÄÅËÖæËÆØ„ÄÅÈòøÈáå„ÄÅ‰∫¨‰∏ú„ÄÅÂçé‰∏∫„ÄÅÊñ∞Êµ™ÂæÆÂçöÁ≠âÁ≠âÔºåÂæàÂ§ö‰∏≠Â∞èÂûãÂÖ¨Âè∏‰πüÈÉΩÊúâÂ∫îÁî®„ÄÇ‰πüÂèØ‰ª•ËØ¥ÔºåÂØπ Redis ÁöÑ‰∫ÜËß£ÂíåÂ∫îÁî®ÂÆûË∑µÂ∑≤Êàê‰∏∫ÂΩì‰∏ã‰∏≠È´òÁ∫ßÂêéÁ´ØÂºÄÂèëËÄÖÁªï‰∏çÂºÄÁöÑÂøÖÂ§áÊäÄËÉΩ„ÄÇ &nbsp; Áî± Redis Èù¢ËØïÊÉ≥Âà∞ÁöÑÂú®Èù¢ËØïÂêéÁ´ØÂ∑•Á®ãÂ∏à Redis ÊäÄËÉΩÁöÑÊó∂ÂÄôÔºåÈù¢ËØïÂÆòÈÄöÂ∏∏ÈóÆÁöÑÁ¨¨‰∏Ä‰∏™ÈóÆÈ¢òÂ∞±ÊòØ‚ÄúRedis ËÉΩÁî®Êù•ÂÅö‰ªÄ‰πàÔºü‚ÄùÔºåÁ¨¨‰∏Ä‰∏™ÂõûÁ≠îÂæÄÂæÄÈÉΩ‰ºöÊòØ„ÄåÁºìÂ≠ò„Äç„ÄÇÁºìÂ≠òÁ°ÆÂÆûÊòØ Redis ‰ΩøÁî®ÊúÄÂ§öÁöÑÈ¢ÜÂüüÔºåÂÆÉÁõ∏ÊØî Memcache ËÄåË®ÄÊõ¥Âä†Êòì‰∫éÁêÜËß£„ÄÅ‰ΩøÁî®ÂíåÊéßÂà∂„ÄÇ ÂèØÊòØÂ¶ÇÊûúÂÜçËøõ‰∏ÄÊ≠•ÈóÆ‚ÄúËøòÊúâÂë¢Ôºü‚ÄùÔºåÂ§ßÂ§öÊï∞ÂêåÂ≠¶Â∞±‰ºöÂºÄÂßãÁö±ÁúâÂ§¥ÔºåÂè™Êúâ‰∏ÄÂ∞èÈÉ®ÂàÜ‰∫∫‰ºöÂõûÁ≠î„ÄåÂàÜÂ∏ÉÂºèÈîÅ„Äç„ÄÇÂ¶ÇÊûú‰Ω†Â∞±ÂàÜÂ∏ÉÂºèÈîÅÂÜçÊ∑±ÂÖ•ÈóÆ‰∏ãÂéªÔºå‰ªñ‰ª¨Âü∫Êú¨Â∞±‰ºöÂºÄÂßãÊëáÂ§¥ÔºöÊàë‰ª¨È°πÁõÆÈáåÈù¢ Redis ÁöÑÈîÅÊñπÊ≥ïÈÉΩÊòØÂà´‰∫∫ÔºàÂ∫îËØ•ÊòØÊû∂ÊûÑÂ∏àÔºâÂ∞ÅË£ÖÂ•ΩÁöÑÔºåÊãøËøáÊù•Áõ¥Êé•‰ΩøÁî®ÔºåÂÜÖÈÉ®ÁªÜËäÇÊ≤°ÊúâÂéª‰∫ÜËß£ËøáÔºå‰πüÊ≤°ÊúâÂøÖË¶Å‰∫ÜËß£„ÄÇ ÂØπÁ±ª‰ººÁöÑÂú∫ÊôØÔºåÊàëÊ∑±Êúâ‰Ωì‰ºö„ÄÇÂõ†‰∏∫ÂÖ≥‰∫é Redis ÁöÑÈù¢ËØïÈ¢òÔºå‰πãÂâçÂáÜÂ§á‰∫ÜÂæàÂ§öÔºå‰ΩÜÊòØÁúüÊ≠£ËÉΩÁî®‰∏äÁöÑÂç¥ÂæàÂ∞ë„ÄÇÂΩìÈù¢ËØïÁöÑÂêåÂ≠¶È¢ëÁπÅÂú∞ÂõûÂ§ç„Äå‰∏çÁü•ÈÅì„ÄÅÊ≤°Áî®Ëøá„ÄçÁöÑÊó∂ÂÄôÔºåÂÜçÁªßÁª≠Ê∑±ÂÖ•ËøΩÈóÆÂ∑≤ÁªèÊØ´Êó†ÊÑè‰πâÔºåËøôÊó∂ÂÄôÂ∞±ÈúÄË¶ÅÂàáÊç¢ËØùÈ¢ò‰∫Ü„ÄÇÂÅ∂Â∞îÈÅá‰∏äÂá†‰∏™ËÉΩÊåÅÁª≠ÂæàÂ§öÂõûÂêàÁöÑÂêåÂ≠¶Ôºå‰ªñ‰ª¨ÊÄªËÉΩ‰Ωø‰∫∫ÁúºÂâç‰∏Ä‰∫Æ„ÄÇÂ¶ÇÊûúÂÜçÊãìÂ±ï‰∏Ä‰∏ãÂë®ËæπÁü•ËØÜÁÇπÔºåÂ∞±‰ºöÂèëÁé∞Ëøô‰∫õ‰∫∫ÂæÄÂæÄ‰πü‰ºöÊúâÊâÄÊ∂âÁåéÔºåËøôÊó∂ÊàëÂú®ÂøÉ‰∏≠Â∑≤ÁªèÊöóÊöóÂú∞ÂØπËøô‰ΩçÂêåÂ≠¶‰º∏Âá∫‰∫ÜÂ§ßÊãáÊåá„ÄÇ ËøôÊ†∑ÁöÑÈù¢ËØïÁªèÂéÜ‰∫ãÂêé‰πüËÆ©ÊàëÊ∑±ÂàªÂèçÊÄùÔºöÊû∂ÊûÑÂ∏àÁöÑÊäÄËÉΩÂæàÈ´òÔºåÂØπÊèêÂçáÂõ¢ÈòüÁ†îÂèëÊïàÁéáÂæàÊúâÂ∏ÆÂä©ÔºåÊàë‰ª¨ÈùûÂ∏∏Èí¶‰Ω©ÂíåÁæ°ÊÖï„ÄÇ‰ΩÜÊòØÊôÆÈÄöÂºÄÂèëËÄÖÂ¶ÇÊûú‰π†ÊÉØ‰∫éÂú®Êû∂ÊûÑÂ∏àÂ∞ÅË£ÖÂ•ΩÁöÑ‰∏úË•ø‰πã‰∏äÔºåÂè™‰∏ìÊ≥®‰∫éÂÅö‰∏öÂä°ÂºÄÂèëÔºåÈÇ£‰πÖËÄå‰πÖ‰πãÔºåÂú®ÊäÄÊúØÁêÜËß£ÂíåÊàêÈïø‰∏äÂ∞±‰ºöÂèòÂæóËøüÈíùÁîöËá≥È∫ªÊú®„ÄÇ‰ªéËøô‰∏™ËßíÂ∫¶ÁúãÔºåÊû∂ÊûÑÂ∏à‰πüÂèØËÉΩÊàê‰∏∫ÊôÆÈÄöÂºÄÂèëËÄÖÁöÑ‚ÄúÊïå‰∫∫‚ÄùÔºå‰ªñÁöÑÂº∫Â§ßËÉΩÂäõ‰ºöËÆ©Â§ßÂÆ∂ÂèòÊàê‚ÄúÊ∏©ÂÆ§ÁöÑËä±Êúµ‚ÄùÔºå‰∏ÄÊó¶ÈÅáÂà∞ÁéØÂ¢ÉÂèòÂåñÂ∞±‰ºö‰∏çÁü•ÊâÄÊé™„ÄÇ ÂÖ∂ÂÆûÂæàÂ§ö‰∏öÂä°Âú∫ÊôØÔºåÂ¶ÇÊûú‰ªÖ‰ªÖÊòØ‰ºö‰ΩøÁî®ÊüêÈ°πÊäÄÊúØ„ÄÅÊ°ÜÊû∂ÔºåÈÇ£ÊòØÂÜçÁÆÄÂçï‰∏çËøá‰∫Ü„ÄÇ‰ΩÜÈöèÁùÄ‰∏öÂä°ÂèëÂ±ïÔºåÁ≥ªÁªüÁöÑÁî®Êà∑Èáè„ÄÅÂπ∂ÂèëÈáèÊ∂®‰∏äÊù•‰πãÂêéÔºåÁé∞ÊúâÁ≥ªÁªüÁöÑÈóÆÈ¢òÂ∞±‰ºöÂ±ÇÂá∫‰∏çÁ©∑Âú∞Êö¥Èú≤Âá∫Êù•„ÄÇÂ¶ÇÊûú‰∏çËÉΩÊ∑±ÂÖ•Âú∞‰∫ÜËß£Á≥ªÁªü„ÄÅÊäÄÊúØÂíåÊ°ÜÊû∂ËÉåÂêéÁöÑÊ∑±Â±ÇÂéüÁêÜÔºåÂæàÂ§öÈóÆÈ¢òÊ†πÊú¨Êó†Ê≥ïÁêÜËß£Âà∞Êú¨Ë¥®ÔºåÊõ¥Ë∞à‰∏ç‰∏äËß£ÂÜ≥Ôºå‰∏¥Êó∂Êä±‰ΩõËÑö‰πü‰∫é‰∫ãÊó†Ë°•„ÄÇ ÊâÄË∞ì„ÄåÊéà‰∫∫‰ª•È±º‰∏çËã•Êéà‰∫∫‰ª•Ê∏î„ÄçÔºåÊú¨Â∞èÂÜåÁöÑÂàùË°∑ÂíåÁõÆÊ†áÂ∞±ÊòØÂ∏ÆÂä©ÂêéÁ´ØÂºÄÂèëËÄÖËæÉ‰∏∫Ê∑±ÂÖ•ÁöÑÁêÜËß£ Redis ËÉåÂêéÁöÑÂéüÁêÜÂíåÂÆûË∑µÁªèÈ™åÔºåÂÅöÂà∞Áü•ÂÖ∂ÁÑ∂‰πüÁü•ÂÖ∂ÊâÄ‰ª•ÁÑ∂Ôºå‰∏∫Êú™Êù•ËøõÈò∂ÊàêÈïø‰∏∫Êû∂ÊûÑÂ∏àÂÅöÂ•ΩÂáÜÂ§á„ÄÇ &nbsp; Â∞èÂÜåÁöÑÂÜÖÂÆπËåÉÂõ¥Êú¨Â∞èÂÜå‰∏ªË¶ÅËÆ≤Ëß£Á¨îËÄÖ‰ªéÂÆûÊàò‰∏≠Êë∏Á¥¢ÊÄªÁªìÁöÑ Redis ÊúÄÂ∏∏Áî®ÊúÄÊ†∏ÂøÉÁü•ËØÜÁÇπÔºå‰ΩÜÈôê‰∫éÁØáÂπÖÂíåÁ≤æÂäõÔºåÂπ∂Ê≤°ÊúâÊ∂µÁõñ Redis ÂÖ®ÈÉ®ÁöÑÂÜÖÂÆπÁü•ËØÜÁÇπÔºåÊØîÂ¶Ç Redis ÂÜÖÁΩÆÁöÑ Lua ËÑöÊú¨ÂºïÊìéÂ∞±ÂÆåÂÖ®Ê≤°ÊúâÊèêÂà∞„ÄÇ‰πãÊâÄ‰ª•‰∏çËÆ≤ÔºåÊòØÂõ†‰∏∫Âú®Âπ≥Êó∂ÁöÑÂ∑•‰Ωú‰∏≠Á°ÆÂÆû‰ªéÊù•Ê≤°Êúâ‰ΩøÁî®ËøáÔºåÂÆÉÂ∞±Â•ΩÊØîÂÖ≥Á≥ªÊï∞ÊçÆÂ∫ìÁöÑÂ≠òÂÇ®ËøáÁ®ãÔºåËôΩÁÑ∂ÂäüËÉΩÂæàÂº∫Â§ßÔºå‰ΩÜÊòØÁ°ÆÂÆûÂæàÂ∞ë‰ΩøÁî®ÔºåËÄå‰∏î‰πü‰∏çÊòìÁª¥Êä§ÔºåÊâÄ‰ª•Â∞±‰∏çÊé®ËçêËØªËÄÖ‰ΩøÁî®‰∫Ü„ÄÇ ÂØπ‰∫éÂæàÂ§öÂ∞è‰ºÅ‰∏öÊù•ËØ¥ÔºåÊú¨Â∞èÂÜåÁöÑÂæàÂ§öÂÜÖÂÆπÈÉΩÊòØÁî®‰∏ç‰∏äÁöÑÔºåÂõ†‰∏∫Á≥ªÁªüÁöÑÂπ∂ÂèëÈáèÊ≤°ÊúâÂà∞‰∏ÄÂÆöÁöÑÈáèÁ∫ßÔºåËøô‰∫õÈ´òÁ∫ßÂäüËÉΩÊ†πÊú¨Ê≤°ÂøÖË¶Å‰ΩøÁî®„ÄÇ‰∏çËøáÊú∫‰ºöÊÄªÊòØÁïôÁªôÈÇ£‰∫õÊúâÂáÜÂ§áÁöÑÂ≠©Â≠ê‰ª¨ÔºåÂ¶ÇÊûúÁ™ÅÁÑ∂Êúâ‰∏ÄÂ§©ÊµÅÈáèÊ∂®‰∏äÊù•‰∫ÜÔºåRedis ÁöÑËøô‰∫õÁ®ÄÊúâÁöÑÈ´òÁ∫ßÂäüËÉΩÂäøÂøÖËÉΩÁ´ãÂç≥Ê¥æ‰∏äÁî®Âú∫„ÄÇ ËØªËÄÖ‰ª¨ËÇØÂÆö‰πüÊ≥®ÊÑèÂà∞ÔºåÂ∞èÂÜåÊâÄÊúâÁöÑÊ†áÈ¢òÈÉΩÊúâ‰ΩøÁî®ÁâπÂÆöÁöÑÊàêËØ≠Êù•ÊèèËø∞„ÄÇËøô‰∫õÊàêËØ≠‰∏çÊòØÈöè‰æøÂÜôÁöÑÔºåËÄåÊòØÁ≤æÁ°ÆËÄÉÈáè‰∫ÜÊàêËØ≠ÁöÑÂê´‰πâÂíåÊäÄÊúØÁÇπÁöÑÁõ∏ÂÖ≥ÊÄßÁ≤æÂøÉÊåëÈÄâÂá∫Êù•ÁöÑÔºåÁõ∏‰ø°ËØªËÄÖÂú®ÁêÜËß£‰∫ÜÊØè‰∏™Â∞èËäÇÁöÑÂÜÖÂÆπ‰πãÂêéÔºåËÇØÂÆöÂèØ‰ª•ÊòéÁôΩÂÜÖÂÆπÂíåÊàêËØ≠Âê´‰πâÁöÑÁõ∏ÂÖ≥ÊÄß„ÄÇ‰πãÊâÄ‰ª•Ë¶Å‰ΩøÁî®ÊàêËØ≠‰πüÊòØ‰∏∫‰∫ÜÂà∂ÈÄ†ÊÇ¨ÂøµÔºåÂê∏ÂºïËØªËÄÖÊé¢Á©∂‰∏∫‰ªÄ‰πàËøô‰∏™ÊäÄÊúØÁÇπ‰ºöÂíåËøô‰∏™ÊàêËØ≠Áõ∏ÂÖ≥„ÄÇËÄÅÈí±ÁöÑËØ≠ÊñáÊ∞¥Âπ≥‰∏çÈ´òÔºåÂú®ÈÄâÊã©ÊàêËØ≠Êó∂ÔºåÂèçÂ§ç‰ΩøÁî®‰∫ÜÊêúÁ¥¢ÂºïÊìé„ÄÇÂ¶ÇÊûúËØªËÄÖÊâæÂà∞‰∫ÜÊõ¥Ë¥¥ÂàáÁöÑÊàêËØ≠Ôºå‰∏ÄÂÆöË¶ÅÂç≥Êó∂Âú®ËØÑËÆ∫Âå∫ÁïôË®ÄÂëäÁü•„ÄÇÂ¶ÇÊûúË¢´ÈááÁ∫≥Ôºå‰ºöËÄÉËôëÁ¶èÂà©ÂèçÈ¶à„ÄÇüòÑ Â•Ω‰∫ÜÔºåÊ∑±ÂÖ•ÁêÜËß£ Redis ÁöÑÂ≠¶‰π†‰πãÊóÖÊ≠£ÂºèÂºÄÂßã„ÄÇ &nbsp; Redis ÂèØ‰ª•ÂÅö‰ªÄ‰πàÔºüRedisÁöÑ‰∏öÂä°Â∫îÁî®ËåÉÂõ¥ÈùûÂ∏∏ÂπøÊ≥õÔºåËÆ©Êàë‰ª¨‰ª•ÊéòÈáëÊäÄÊúØÁ§æÂå∫Ôºàjuejin.imÔºâÁöÑÂ∏ñÂ≠êÊ®°Âùó‰∏∫ÂÆû‰æãÔºåÊ¢≥ÁêÜ‰∏Ä‰∏ãÔºåRedis ÂèØ‰ª•Áî®Âú®Âì™‰∫õÂú∞ÊñπÔºü ËÆ∞ÂΩïÂ∏ñÂ≠êÁöÑÁÇπËµûÊï∞„ÄÅËØÑËÆ∫Êï∞ÂíåÁÇπÂáªÊï∞ (hash)„ÄÇ ËÆ∞ÂΩïÁî®Êà∑ÁöÑÂ∏ñÂ≠ê ID ÂàóË°® (ÊéíÂ∫è)Ôºå‰æø‰∫éÂø´ÈÄüÊòæÁ§∫Áî®Êà∑ÁöÑÂ∏ñÂ≠êÂàóË°® (zset)„ÄÇ ËÆ∞ÂΩïÂ∏ñÂ≠êÁöÑÊ†áÈ¢ò„ÄÅÊëòË¶Å„ÄÅ‰ΩúËÄÖÂíåÂ∞ÅÈù¢‰ø°ÊÅØÔºåÁî®‰∫éÂàóË°®È°µÂ±ïÁ§∫ (hash)„ÄÇ ËÆ∞ÂΩïÂ∏ñÂ≠êÁöÑÁÇπËµûÁî®Êà∑ ID ÂàóË°®ÔºåËØÑËÆ∫ ID ÂàóË°®ÔºåÁî®‰∫éÊòæÁ§∫ÂíåÂéªÈáçËÆ°Êï∞ (zset)„ÄÇ ÁºìÂ≠òËøëÊúüÁÉ≠Â∏ñÂÜÖÂÆπ (Â∏ñÂ≠êÂÜÖÂÆπÁ©∫Èó¥Âç†Áî®ÊØîËæÉÂ§ß)ÔºåÂáèÂ∞ëÊï∞ÊçÆÂ∫ìÂéãÂäõ (hash)„ÄÇ ËÆ∞ÂΩïÂ∏ñÂ≠êÁöÑÁõ∏ÂÖ≥ÊñáÁ´† IDÔºåÊ†πÊçÆÂÜÖÂÆπÊé®ËçêÁõ∏ÂÖ≥Â∏ñÂ≠ê (list)„ÄÇ Â¶ÇÊûúÂ∏ñÂ≠ê ID ÊòØÊï¥Êï∞Ëá™Â¢ûÁöÑÔºåÂèØ‰ª•‰ΩøÁî® Redis Êù•ÂàÜÈÖçÂ∏ñÂ≠ê ID(ËÆ°Êï∞Âô®)„ÄÇ Êî∂ËóèÈõÜÂíåÂ∏ñÂ≠ê‰πãÈó¥ÁöÑÂÖ≥Á≥ª (zset)„ÄÇ ËÆ∞ÂΩïÁÉ≠Ê¶úÂ∏ñÂ≠ê ID ÂàóË°®ÔºåÊÄªÁÉ≠Ê¶úÂíåÂàÜÁ±ªÁÉ≠Ê¶ú (zset)„ÄÇ ÁºìÂ≠òÁî®Êà∑Ë°å‰∏∫ÂéÜÂè≤ÔºåËøõË°åÊÅ∂ÊÑèË°å‰∏∫ËøáÊª§ (zset,hash)„ÄÇ ÂΩìÁÑ∂ÔºåÂÆûÈôÖÊÉÖÂÜµ‰∏ãÈúÄÊ±ÇÂèØËÉΩ‰πüÊ≤°Ëøô‰πàÂ§öÔºåÂõ†‰∏∫Âú®ËØ∑Ê±ÇÂéãÂäõ‰∏çÂ§ßÁöÑÊÉÖÂÜµ‰∏ãÔºåÂæàÂ§öÊï∞ÊçÆÈÉΩÊòØÂèØ‰ª•Áõ¥Êé•‰ªéÊï∞ÊçÆÂ∫ì‰∏≠Êü•ËØ¢ÁöÑ„ÄÇËØ∑Ê±ÇÂéãÂäõ‰∏ÄÂ§ßÔºå‰ª•ÂâçÈÄöËøáÊï∞ÊçÆÂ∫ìÁõ¥Êé•Â≠òÂèñÁöÑÊï∞ÊçÆÂàôÂøÖÈ°ªË¶ÅÊå™Âà∞ÁºìÂ≠òÈáåÊù•„ÄÇ ‰ª•‰∏äÊèêÂà∞ÁöÑÂè™ÊòØ Redis ÁöÑÂü∫Á°ÄÂ∫îÁî®Ôºå‰πüÊòØÊó•Â∏∏ÂºÄÂèë‰∏≠ÊúÄÂ∏∏ËßÅÁöÑÂ∫îÁî®ÔºàÂ¶ÇÊûú‰Ω†ÁöÑ Redis Âü∫Á°ÄÂíåÁªèÈ™å‰∏çË∂≥ÔºåÂèØËÉΩÈúÄË¶ÅÈòÖËØªÂÆå‰∏ã‰∏ÄËäÇ‰πãÂêéÊâçËÉΩÂõûËøáÂ§¥Êù•ÊÄùËÄÉËøô‰∏™ÈóÆÈ¢òÔºâ„ÄÇÈô§‰∫ÜÂü∫Á°ÄÂ∫îÁî®‰πãÂ§ñÔºåËøòÊúâÂæàÂ§öÂÖ∂ÂÆÉÁöÑ Redis È´òÁ∫ßÂ∫îÁî®ÔºåÂ§ßÂ§öÊï∞ÂêåÂ≠¶ÂèØËÉΩ‰ªéÊú™Êé•Ëß¶ËøáÔºåËøôÈÉ®ÂàÜÊàë‰ºöÂú®ÂêéÁª≠ÁöÑÁ´†ËäÇ‰∏≠ÈôÜÁª≠ËÆ≤Ëß£„ÄÇ &nbsp; Â∞èÁªìÊé•‰∏ãÊù•ÔºåÊàë‰ª¨Â∞ÜËøá‰∏ÄÈÅç Redis ÁöÑÂü∫Á°ÄÁü•ËØÜÔºåËøôÈÉ®ÂàÜÂÜÖÂÆπ‰º∞ËÆ°Êú¨Â∞èÂÜåÂ§ßÂ§öÊï∞ËØªËÄÖÈÉΩÂ∑≤ÁªèÈùûÂ∏∏‰∫ÜËß£ÔºåÊâÄ‰ª•ËøôÈáå‰πü‰∏çÊµ™Ë¥πÂ§™Â§öÁ¨îÂ¢®ÔºåÂè™ËÆ°ÂàíÁî®‰∏ÄËäÇÁöÑÁØáÂπÖÂø´ÈÄüËÆ≤ÂÆå„ÄÇÂ¶ÇÊûúËØªËÄÖÂØπ Redis Âü∫Á°ÄÊï∞ÊçÆÁªìÊûÑÂ∑≤Áªè‰∫ÜÁÑ∂‰∫éËÉ∏ÔºåÂèØ‰ª•Áõ¥Êé•Ë∑≥Âà∞‰∏ã‰∏ÄÁ´†ËäÇÈòÖËØª Redis ÁöÑÈ´òÁ∫ßÁü•ËØÜ„ÄÇ Âè¶ÔºåÂú®ÈòÖËØªÂ∞èÂÜåËøáÁ®ã‰∏≠ÔºåÂ¶ÇÊûú‰Ω†Ë¢´Êüê‰∫õÁ´†ËäÇÂç°‰Ωè‰∫ÜÔºå‰∏Ä‰∏ãÁêÜËß£‰∏ç‰∫ÜÔºåÂèØ‰ª•ÂÖàÊ∑°ÂÆöÁöÑÊë∏ÁùÄËÉ∏Âè£ÂëäËØâËá™Â∑±‚Äú‰∏çË¶ÅÊÖåÔºå‰∏ÄÂàáÈÉΩÊòØÊ≠£Â∏∏ÁöÑÔºÅ‚ÄùÔºåÁÑ∂Âêé‰∏¥Êó∂Ë∑≥ËøáÂπ∂ÁªßÁª≠ÈòÖËØªÂêéÈù¢ÁöÑÁ´†ËäÇ„ÄÇ‰ΩÜËØ∑ÂêÑ‰ΩçËØªËÄÖÂä°ÂøÖÂùöÊåÅÂà∞ÊúÄÂêéÔºåÁõ∏‰ø°‰Ω†‰ºöÊòéÊòæÊÑüÂèóÂà∞ÊäÄÊúØËÉΩÂäõÁöÑÂçáÂçé„ÄÇÂ§ßÂÆ∂Âä†Ê≤π!‚õΩÔ∏è]]></content>
      <tags>
        <tag>ËΩ¨Âèë</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂÖ®Èù¢‰∫ÜËß£ Nginx Âà∞Â∫ïËÉΩÂÅö‰ªÄ‰πà]]></title>
    <url>%2F2018%2F09%2F20%2F%E5%85%A8%E9%9D%A2%E4%BA%86%E8%A7%A3%20Nginx%20%E5%88%B0%E5%BA%95%E8%83%BD%E5%81%9A%E4%BB%80%E4%B9%88%2F</url>
    <content type="text"><![CDATA[‰ΩúËÄÖÔºöËäãÈÅìÊ∫êÁ†Å Êù•Ê∫êÔºöhttps://mp.weixin.qq.com/s/-tbku61HLKWXPoKypXGFHg ÂâçË®ÄÊú¨ÊñáÂè™ÈíàÂØπNginxÂú®‰∏çÂä†ËΩΩÁ¨¨‰∏âÊñπÊ®°ÂùóÁöÑÊÉÖÂÜµËÉΩÂ§ÑÁêÜÂì™‰∫õ‰∫ãÊÉÖÔºåÁî±‰∫éÁ¨¨‰∏âÊñπÊ®°ÂùóÂ§™Â§öÊâÄ‰ª•‰πü‰ªãÁªç‰∏çÂÆåÔºåÂΩìÁÑ∂Êú¨ÊñáÊú¨Ë∫´‰πüÂèØËÉΩ‰ªãÁªçÁöÑ‰∏çÂÆåÊï¥ÔºåÊØïÁ´üÂè™ÊòØÊàë‰∏™‰∫∫‰ΩøÁî®ËøáÂíå‰∫ÜËß£Âà∞ËøáÂæó„ÄÇÊâÄ‰ª•ËøòËØ∑ËßÅË∞ÖÔºåÂêåÊó∂Ê¨¢ËøéÁïôË®Ä‰∫§ÊµÅ &nbsp; NginxËÉΩÂÅö‰ªÄ‰πà ÂèçÂêë‰ª£ÁêÜ Ë¥üËΩΩÂùáË°° HTTPÊúçÂä°Âô®ÔºàÂåÖÂê´Âä®ÈùôÂàÜÁ¶ªÔºâ Ê≠£Âêë‰ª£ÁêÜ ‰ª•‰∏äÂ∞±ÊòØÊàë‰∫ÜËß£Âà∞ÁöÑNginxÂú®‰∏ç‰æùËµñÁ¨¨‰∏âÊñπÊ®°ÂùóËÉΩÂ§ÑÁêÜÁöÑ‰∫ãÊÉÖÔºå‰∏ãÈù¢ËØ¶ÁªÜËØ¥ÊòéÊØèÁßçÂäüËÉΩÊÄé‰πàÂÅö &nbsp; ÂèçÂêë‰ª£ÁêÜÂèçÂêë‰ª£ÁêÜÂ∫îËØ•ÊòØNginxÂÅöÁöÑÊúÄÂ§öÁöÑ‰∏Ä‰ª∂‰∫ã‰∫ÜÔºå‰ªÄ‰πàÊòØÂèçÂêë‰ª£ÁêÜÂë¢Ôºå‰ª•‰∏ãÊòØÁôæÂ∫¶ÁôæÁßëÁöÑËØ¥Ê≥ïÔºöÂèçÂêë‰ª£ÁêÜÔºàReverse ProxyÔºâÊñπÂºèÊòØÊåá‰ª•‰ª£ÁêÜÊúçÂä°Âô®Êù•Êé•Âèóinternet‰∏äÁöÑËøûÊé•ËØ∑Ê±ÇÔºåÁÑ∂ÂêéÂ∞ÜËØ∑Ê±ÇËΩ¨ÂèëÁªôÂÜÖÈÉ®ÁΩëÁªú‰∏äÁöÑÊúçÂä°Âô®ÔºåÂπ∂Â∞Ü‰ªéÊúçÂä°Âô®‰∏äÂæóÂà∞ÁöÑÁªìÊûúËøîÂõûÁªôinternet‰∏äËØ∑Ê±ÇËøûÊé•ÁöÑÂÆ¢Êà∑Á´ØÔºåÊ≠§Êó∂‰ª£ÁêÜÊúçÂä°Âô®ÂØπÂ§ñÂ∞±Ë°®Áé∞‰∏∫‰∏Ä‰∏™ÂèçÂêë‰ª£ÁêÜÊúçÂä°Âô®„ÄÇÁÆÄÂçïÊù•ËØ¥Â∞±ÊòØÁúüÂÆûÁöÑÊúçÂä°Âô®‰∏çËÉΩÁõ¥Êé•Ë¢´Â§ñÈÉ®ÁΩëÁªúËÆøÈóÆÔºåÊâÄ‰ª•ÈúÄË¶Å‰∏ÄÂè∞‰ª£ÁêÜÊúçÂä°Âô®ÔºåËÄå‰ª£ÁêÜÊúçÂä°Âô®ËÉΩË¢´Â§ñÈÉ®ÁΩëÁªúËÆøÈóÆÁöÑÂêåÊó∂ÂèàË∑üÁúüÂÆûÊúçÂä°Âô®Âú®Âêå‰∏Ä‰∏™ÁΩëÁªúÁéØÂ¢ÉÔºåÂΩìÁÑ∂‰πüÂèØËÉΩÊòØÂêå‰∏ÄÂè∞ÊúçÂä°Âô®ÔºåÁ´ØÂè£‰∏çÂêåËÄåÂ∑≤„ÄÇ‰∏ãÈù¢Ë¥¥‰∏ä‰∏ÄÊÆµÁÆÄÂçïÁöÑÂÆûÁé∞ÂèçÂêë‰ª£ÁêÜÁöÑ‰ª£Á†Å 12345678910server &#123; listen 80; server_name localhost; client_max_body_size 1024M; location / &#123; proxy_pass http://localhost:8080; proxy_set_header Host $host:$server_port; &#125; &#125; ‰øùÂ≠òÈÖçÁΩÆÊñá‰ª∂ÂêéÂêØÂä®NginxÔºåËøôÊ†∑ÂΩìÊàë‰ª¨ËÆøÈóÆlocalhostÁöÑÊó∂ÂÄôÔºåÂ∞±Áõ∏ÂΩì‰∫éËÆøÈóÆlocalhost:8080‰∫Ü &nbsp; Ë¥üËΩΩÂùáË°°Ë¥üËΩΩÂùáË°°‰πüÊòØNginxÂ∏∏Áî®ÁöÑ‰∏Ä‰∏™ÂäüËÉΩÔºåË¥üËΩΩÂùáË°°ÂÖ∂ÊÑèÊÄùÂ∞±ÊòØÂàÜÊëäÂà∞Â§ö‰∏™Êìç‰ΩúÂçïÂÖÉ‰∏äËøõË°åÊâßË°åÔºå‰æãÂ¶ÇWebÊúçÂä°Âô®„ÄÅFTPÊúçÂä°Âô®„ÄÅ‰ºÅ‰∏öÂÖ≥ÈîÆÂ∫îÁî®ÊúçÂä°Âô®ÂíåÂÖ∂ÂÆÉÂÖ≥ÈîÆ‰ªªÂä°ÊúçÂä°Âô®Á≠âÔºå‰ªéËÄåÂÖ±ÂêåÂÆåÊàêÂ∑•‰Ωú‰ªªÂä°„ÄÇÁÆÄÂçïËÄåË®ÄÂ∞±ÊòØÂΩìÊúâ2Âè∞Êàñ‰ª•‰∏äÊúçÂä°Âô®Êó∂ÔºåÊ†πÊçÆËßÑÂàôÈöèÊú∫ÁöÑÂ∞ÜËØ∑Ê±ÇÂàÜÂèëÂà∞ÊåáÂÆöÁöÑÊúçÂä°Âô®‰∏äÂ§ÑÁêÜÔºåË¥üËΩΩÂùáË°°ÈÖçÁΩÆ‰∏ÄËà¨ÈÉΩÈúÄË¶ÅÂêåÊó∂ÈÖçÁΩÆÂèçÂêë‰ª£ÁêÜÔºåÈÄöËøáÂèçÂêë‰ª£ÁêÜË∑≥ËΩ¨Âà∞Ë¥üËΩΩÂùáË°°„ÄÇËÄåNginxÁõÆÂâçÊîØÊåÅËá™Â∏¶3ÁßçË¥üËΩΩÂùáË°°Á≠ñÁï•ÔºåËøòÊúâ2ÁßçÂ∏∏Áî®ÁöÑÁ¨¨‰∏âÊñπÁ≠ñÁï•„ÄÇ 1„ÄÅRRÔºàÈªòËÆ§ÔºâÊØè‰∏™ËØ∑Ê±ÇÊåâÊó∂Èó¥È°∫Â∫èÈÄê‰∏ÄÂàÜÈÖçÂà∞‰∏çÂêåÁöÑÂêéÁ´ØÊúçÂä°Âô®ÔºåÂ¶ÇÊûúÂêéÁ´ØÊúçÂä°Âô®downÊéâÔºåËÉΩËá™Âä®ÂâîÈô§„ÄÇ ÁÆÄÂçïÈÖçÁΩÆ 1234567891011121314upstream test &#123; server localhost:8080; server localhost:8081;&#125;server &#123; listen 81; server_name localhost; client_max_body_size 1024M; location / &#123; proxy_pass http://test; proxy_set_header Host $host:$server_port; &#125;&#125; Ë¥üËΩΩÂùáË°°ÁöÑÊ†∏ÂøÉ‰ª£Á†Å‰∏∫ 1234upstream test &#123; server localhost:8080; server localhost:8081;&#125; ËøôÈáåÊàëÈÖçÁΩÆ‰∫Ü2Âè∞ÊúçÂä°Âô®ÔºåÂΩìÁÑ∂ÂÆûÈôÖ‰∏äÊòØ‰∏ÄÂè∞ÔºåÂè™ÊòØÁ´ØÂè£‰∏ç‰∏ÄÊ†∑ËÄåÂ∑≤ÔºåËÄå8081ÁöÑÊúçÂä°Âô®ÊòØ‰∏çÂ≠òÂú®ÁöÑ,‰πüÂ∞±ÊòØËØ¥ËÆøÈóÆ‰∏çÂà∞Ôºå‰ΩÜÊòØÊàë‰ª¨ËÆøÈóÆhttp://localhost ÁöÑÊó∂ÂÄô,‰πü‰∏ç‰ºöÊúâÈóÆÈ¢òÔºå‰ºöÈªòËÆ§Ë∑≥ËΩ¨Âà∞http://localhost:8080 ÂÖ∑‰ΩìÊòØÂõ†‰∏∫Nginx‰ºöËá™Âä®Âà§Êñ≠ÊúçÂä°Âô®ÁöÑÁä∂ÊÄÅÔºåÂ¶ÇÊûúÊúçÂä°Âô®Â§Ñ‰∫é‰∏çËÉΩËÆøÈóÆÔºàÊúçÂä°Âô®ÊåÇ‰∫ÜÔºâÔºåÂ∞±‰∏ç‰ºöË∑≥ËΩ¨Âà∞ËøôÂè∞ÊúçÂä°Âô®ÔºåÊâÄ‰ª•‰πüÈÅøÂÖç‰∫Ü‰∏ÄÂè∞ÊúçÂä°Âô®ÊåÇ‰∫ÜÂΩ±Âìç‰ΩøÁî®ÁöÑÊÉÖÂÜµÔºåÁî±‰∫éNginxÈªòËÆ§ÊòØRRÁ≠ñÁï•ÔºåÊâÄ‰ª•Êàë‰ª¨‰∏çÈúÄË¶ÅÂÖ∂‰ªñÊõ¥Â§öÁöÑËÆæÁΩÆ„ÄÇ 2„ÄÅÊùÉÈáçÊåáÂÆöËΩÆËØ¢Âá†ÁéáÔºåweightÂíåËÆøÈóÆÊØîÁéáÊàêÊ≠£ÊØîÔºåÁî®‰∫éÂêéÁ´ØÊúçÂä°Âô®ÊÄßËÉΩ‰∏çÂùáÁöÑÊÉÖÂÜµ„ÄÇ‰æãÂ¶Ç 1234upstream test &#123; server localhost:8080 weight=9; server localhost:8081 weight=1;&#125; ÈÇ£‰πà10Ê¨°‰∏ÄËà¨Âè™‰ºöÊúâ1Ê¨°‰ºöËÆøÈóÆÂà∞8081ÔºåËÄåÊúâ9Ê¨°‰ºöËÆøÈóÆÂà∞8080 3„ÄÅip_hash‰∏äÈù¢ÁöÑ2ÁßçÊñπÂºèÈÉΩÊúâ‰∏Ä‰∏™ÈóÆÈ¢òÔºåÈÇ£Â∞±ÊòØ‰∏ã‰∏Ä‰∏™ËØ∑Ê±ÇÊù•ÁöÑÊó∂ÂÄôËØ∑Ê±ÇÂèØËÉΩÂàÜÂèëÂà∞Âè¶Â§ñ‰∏Ä‰∏™ÊúçÂä°Âô®ÔºåÂΩìÊàë‰ª¨ÁöÑÁ®ãÂ∫è‰∏çÊòØÊó†Áä∂ÊÄÅÁöÑÊó∂ÂÄôÔºàÈááÁî®‰∫Üsession‰øùÂ≠òÊï∞ÊçÆÔºâÔºåËøôÊó∂ÂÄôÂ∞±Êúâ‰∏Ä‰∏™ÂæàÂ§ßÁöÑÂæàÈóÆÈ¢ò‰∫ÜÔºåÊØîÂ¶ÇÊääÁôªÂΩï‰ø°ÊÅØ‰øùÂ≠òÂà∞‰∫Üsession‰∏≠ÔºåÈÇ£‰πàË∑≥ËΩ¨Âà∞Âè¶Â§ñ‰∏ÄÂè∞ÊúçÂä°Âô®ÁöÑÊó∂ÂÄôÂ∞±ÈúÄË¶ÅÈáçÊñ∞ÁôªÂΩï‰∫ÜÔºåÊâÄ‰ª•ÂæàÂ§öÊó∂ÂÄôÊàë‰ª¨ÈúÄË¶Å‰∏Ä‰∏™ÂÆ¢Êà∑Âè™ËÆøÈóÆ‰∏Ä‰∏™ÊúçÂä°Âô®ÔºåÈÇ£‰πàÂ∞±ÈúÄË¶ÅÁî®ip_hash‰∫ÜÔºåip_hashÁöÑÊØè‰∏™ËØ∑Ê±ÇÊåâËÆøÈóÆipÁöÑhashÁªìÊûúÂàÜÈÖçÔºåËøôÊ†∑ÊØè‰∏™ËÆøÂÆ¢Âõ∫ÂÆöËÆøÈóÆ‰∏Ä‰∏™ÂêéÁ´ØÊúçÂä°Âô®ÔºåÂèØ‰ª•Ëß£ÂÜ≥sessionÁöÑÈóÆÈ¢ò„ÄÇ 12345upstream test &#123; ip_hash; server localhost:8080; server localhost:8081;&#125; 4„ÄÅfairÔºàÁ¨¨‰∏âÊñπÔºâÊåâÂêéÁ´ØÊúçÂä°Âô®ÁöÑÂìçÂ∫îÊó∂Èó¥Êù•ÂàÜÈÖçËØ∑Ê±ÇÔºåÂìçÂ∫îÊó∂Èó¥Áü≠ÁöÑ‰ºòÂÖàÂàÜÈÖç„ÄÇ 12345upstream backend &#123; fair; server localhost:8080; server localhost:8081;&#125; 5„ÄÅurl_hashÔºàÁ¨¨‰∏âÊñπÔºâÊåâËÆøÈóÆurlÁöÑhashÁªìÊûúÊù•ÂàÜÈÖçËØ∑Ê±ÇÔºå‰ΩøÊØè‰∏™urlÂÆöÂêëÂà∞Âêå‰∏Ä‰∏™ÂêéÁ´ØÊúçÂä°Âô®ÔºåÂêéÁ´ØÊúçÂä°Âô®‰∏∫ÁºìÂ≠òÊó∂ÊØîËæÉÊúâÊïà„ÄÇ Âú®upstream‰∏≠Âä†ÂÖ•hashËØ≠Âè•ÔºåserverËØ≠Âè•‰∏≠‰∏çËÉΩÂÜôÂÖ•weightÁ≠âÂÖ∂‰ªñÁöÑÂèÇÊï∞Ôºåhash_methodÊòØ‰ΩøÁî®ÁöÑhashÁÆóÊ≥ï 123456upstream backend &#123; hash $request_uri; hash_method crc32; server localhost:8080; server localhost:8081;&#125; ‰ª•‰∏ä5ÁßçË¥üËΩΩÂùáË°°ÂêÑËá™ÈÄÇÁî®‰∏çÂêåÊÉÖÂÜµ‰∏ã‰ΩøÁî®ÔºåÊâÄ‰ª•ÂèØ‰ª•Ê†πÊçÆÂÆûÈôÖÊÉÖÂÜµÈÄâÊã©‰ΩøÁî®Âì™ÁßçÁ≠ñÁï•Ê®°Âºè,‰∏çËøáfairÂíåurl_hashÈúÄË¶ÅÂÆâË£ÖÁ¨¨‰∏âÊñπÊ®°ÂùóÊâçËÉΩ‰ΩøÁî®ÔºåÁî±‰∫éÊú¨Êñá‰∏ªË¶Å‰ªãÁªçNginxËÉΩÂÅöÁöÑ‰∫ãÊÉÖÔºåÊâÄ‰ª•NginxÂÆâË£ÖÁ¨¨‰∏âÊñπÊ®°Âùó‰∏ç‰ºöÂÜçÊú¨Êñá‰ªãÁªç &nbsp; HTTPÊúçÂä°Âô®NginxÊú¨Ë∫´‰πüÊòØ‰∏Ä‰∏™ÈùôÊÄÅËµÑÊ∫êÁöÑÊúçÂä°Âô®ÔºåÂΩìÂè™ÊúâÈùôÊÄÅËµÑÊ∫êÁöÑÊó∂ÂÄôÔºåÂ∞±ÂèØ‰ª•‰ΩøÁî®NginxÊù•ÂÅöÊúçÂä°Âô®ÔºåÂêåÊó∂Áé∞Âú®‰πüÂæàÊµÅË°åÂä®ÈùôÂàÜÁ¶ªÔºåÂ∞±ÂèØ‰ª•ÈÄöËøáNginxÊù•ÂÆûÁé∞ÔºåÈ¶ñÂÖàÁúãÁúãNginxÂÅöÈùôÊÄÅËµÑÊ∫êÊúçÂä°Âô® 1234567891011server &#123; listen 80; server_name localhost; client_max_body_size 1024M; location / &#123; root e:\wwwroot; index index.html; &#125;&#125; ËøôÊ†∑Â¶ÇÊûúËÆøÈóÆhttp://localhost Â∞±‰ºöÈªòËÆ§ËÆøÈóÆÂà∞EÁõòwwwrootÁõÆÂΩï‰∏ãÈù¢ÁöÑindex.htmlÔºåÂ¶ÇÊûú‰∏Ä‰∏™ÁΩëÁ´ôÂè™ÊòØÈùôÊÄÅÈ°µÈù¢ÁöÑËØùÔºåÈÇ£‰πàÂ∞±ÂèØ‰ª•ÈÄöËøáËøôÁßçÊñπÂºèÊù•ÂÆûÁé∞ÈÉ®ÁΩ≤„ÄÇ &nbsp; Âä®ÈùôÂàÜÁ¶ªÂä®ÈùôÂàÜÁ¶ªÊòØËÆ©Âä®ÊÄÅÁΩëÁ´ôÈáåÁöÑÂä®ÊÄÅÁΩëÈ°µÊ†πÊçÆ‰∏ÄÂÆöËßÑÂàôÊää‰∏çÂèòÁöÑËµÑÊ∫êÂíåÁªèÂ∏∏ÂèòÁöÑËµÑÊ∫êÂå∫ÂàÜÂºÄÊù•ÔºåÂä®ÈùôËµÑÊ∫êÂÅöÂ•Ω‰∫ÜÊãÜÂàÜ‰ª•ÂêéÔºåÊàë‰ª¨Â∞±ÂèØ‰ª•Ê†πÊçÆÈùôÊÄÅËµÑÊ∫êÁöÑÁâπÁÇπÂ∞ÜÂÖ∂ÂÅöÁºìÂ≠òÊìç‰ΩúÔºåËøôÂ∞±ÊòØÁΩëÁ´ôÈùôÊÄÅÂåñÂ§ÑÁêÜÁöÑÊ†∏ÂøÉÊÄùË∑Ø 1234567891011121314151617181920212223242526272829upstream test&#123; server localhost:8080; server localhost:8081; &#125; server &#123; listen 80; server_name localhost; location / &#123; root e:\wwwroot; index index.html; &#125; # ÊâÄÊúâÈùôÊÄÅËØ∑Ê±ÇÈÉΩÁî±nginxÂ§ÑÁêÜÔºåÂ≠òÊîæÁõÆÂΩï‰∏∫html location ~ \.(gif|jpg|jpeg|png|bmp|swf|css|js)$ &#123; root e:\wwwroot; &#125; # ÊâÄÊúâÂä®ÊÄÅËØ∑Ê±ÇÈÉΩËΩ¨ÂèëÁªôtomcatÂ§ÑÁêÜ location ~ \.(jsp|do)$ &#123; proxy_pass http://test; &#125; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root e:\wwwroot; &#125; &#125; ËøôÊ†∑Êàë‰ª¨Â∞±ÂèØ‰ª•ÂêßHTML‰ª•ÂèäÂõæÁâáÂíåcss‰ª•ÂèäjsÊîæÂà∞wwwrootÁõÆÂΩï‰∏ãÔºåËÄåtomcatÂè™Ë¥üË¥£Â§ÑÁêÜjspÂíåËØ∑Ê±ÇÔºå‰æãÂ¶ÇÂΩìÊàë‰ª¨ÂêéÁºÄ‰∏∫gifÁöÑÊó∂ÂÄôÔºåNginxÈªòËÆ§‰ºö‰ªéwwwrootËé∑ÂèñÂà∞ÂΩìÂâçËØ∑Ê±ÇÁöÑÂä®ÊÄÅÂõæÊñá‰ª∂ËøîÂõûÔºåÂΩìÁÑ∂ËøôÈáåÁöÑÈùôÊÄÅÊñá‰ª∂Ë∑üNginxÊòØÂêå‰∏ÄÂè∞ÊúçÂä°Âô®ÔºåÊàë‰ª¨‰πüÂèØ‰ª•Âú®Âè¶Â§ñ‰∏ÄÂè∞ÊúçÂä°Âô®ÔºåÁÑ∂ÂêéÈÄöËøáÂèçÂêë‰ª£ÁêÜÂíåË¥üËΩΩÂùáË°°ÈÖçÁΩÆËøáÂéªÂ∞±Â•Ω‰∫ÜÔºåÂè™Ë¶ÅÊêûÊ∏ÖÊ•ö‰∫ÜÊúÄÂü∫Êú¨ÁöÑÊµÅÁ®ãÔºåÂæàÂ§öÈÖçÁΩÆÂ∞±ÂæàÁÆÄÂçï‰∫ÜÔºåÂè¶Â§ñlocaltionÂêéÈù¢ÂÖ∂ÂÆûÊòØ‰∏Ä‰∏™Ê≠£ÂàôË°®ËææÂºèÔºåÊâÄ‰ª•ÈùûÂ∏∏ÁÅµÊ¥ª &nbsp; Ê≠£Âêë‰ª£ÁêÜÊ≠£Âêë‰ª£ÁêÜÔºåÊÑèÊÄùÊòØ‰∏Ä‰∏™‰Ωç‰∫éÂÆ¢Êà∑Á´ØÂíåÂéüÂßãÊúçÂä°Âô®(origin server)‰πãÈó¥ÁöÑÊúçÂä°Âô®Ôºå‰∏∫‰∫Ü‰ªéÂéüÂßãÊúçÂä°Âô®ÂèñÂæóÂÜÖÂÆπÔºåÂÆ¢Êà∑Á´ØÂêë‰ª£ÁêÜÂèëÈÄÅ‰∏Ä‰∏™ËØ∑Ê±ÇÂπ∂ÊåáÂÆöÁõÆÊ†á(ÂéüÂßãÊúçÂä°Âô®)ÔºåÁÑ∂Âêé‰ª£ÁêÜÂêëÂéüÂßãÊúçÂä°Âô®ËΩ¨‰∫§ËØ∑Ê±ÇÂπ∂Â∞ÜËé∑ÂæóÁöÑÂÜÖÂÆπËøîÂõûÁªôÂÆ¢Êà∑Á´Ø„ÄÇÂÆ¢Êà∑Á´ØÊâçËÉΩ‰ΩøÁî®Ê≠£Âêë‰ª£ÁêÜ„ÄÇÂΩì‰Ω†ÈúÄË¶ÅÊää‰Ω†ÁöÑÊúçÂä°Âô®‰Ωú‰∏∫‰ª£ÁêÜÊúçÂä°Âô®ÁöÑÊó∂ÂÄôÔºåÂèØ‰ª•Áî®NginxÊù•ÂÆûÁé∞Ê≠£Âêë‰ª£ÁêÜÔºå‰ΩÜÊòØÁõÆÂâçNginxÊúâ‰∏Ä‰∏™ÈóÆÈ¢òÔºåÈÇ£‰πàÂ∞±ÊòØ‰∏çÊîØÊåÅHTTPSÔºåËôΩÁÑ∂ÊàëÁôæÂ∫¶Âà∞ËøáÈÖçÁΩÆHTTPSÁöÑÊ≠£Âêë‰ª£ÁêÜÔºå‰ΩÜÊòØÂà∞ÊúÄÂêéÂèëÁé∞ËøòÊòØ‰ª£ÁêÜ‰∏ç‰∫ÜÔºåÂΩìÁÑ∂ÂèØËÉΩÊòØÊàëÈÖçÁΩÆÁöÑ‰∏çÂØπÔºåÊâÄ‰ª•‰πüÂ∏åÊúõÊúâÁü•ÈÅìÊ≠£Á°ÆÊñπÊ≥ïÁöÑÂêåÂøó‰ª¨ÁïôË®ÄËØ¥Êòé‰∏Ä‰∏ã„ÄÇ 1234567891011121314resolver 114.114.114.114 8.8.8.8;server &#123; resolver_timeout 5s; listen 81; access_log e:\wwwroot\proxy.access.log; error_log e:\wwwroot\proxy.error.log; location / &#123; proxy_pass http://$host$request_uri; &#125;&#125; resolverÊòØÈÖçÁΩÆÊ≠£Âêë‰ª£ÁêÜÁöÑDNSÊúçÂä°Âô®Ôºålisten ÊòØÊ≠£Âêë‰ª£ÁêÜÁöÑÁ´ØÂè£ÔºåÈÖçÁΩÆÂ•Ω‰∫ÜÂ∞±ÂèØ‰ª•Âú®ie‰∏äÈù¢ÊàñËÄÖÂÖ∂‰ªñ‰ª£ÁêÜÊèí‰ª∂‰∏äÈù¢‰ΩøÁî®ÊúçÂä°Âô®ip+Á´ØÂè£Âè∑ËøõË°å‰ª£ÁêÜ‰∫Ü„ÄÇ &nbsp; ÊúÄÂêéËØ¥‰∏§Âè•NginxÊòØÊîØÊåÅÁÉ≠ÂêØÂä®ÁöÑÔºå‰πüÂ∞±ÊòØËØ¥ÂΩìÊàë‰ª¨‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂ÂêéÔºå‰∏çÁî®ÂÖ≥Èó≠NginxÔºåÂ∞±ÂèØ‰ª•ÂÆûÁé∞ËÆ©ÈÖçÁΩÆÁîüÊïàÔºåÂΩìÁÑ∂ÊàëÂπ∂‰∏çÁü•ÈÅìÂ§öÂ∞ë‰∫∫Áü•ÈÅìËøô‰∏™ÔºåÂèçÊ≠£Êàë‰∏ÄÂºÄÂßãÂπ∂‰∏çÁü•ÈÅìÔºåÂØºËá¥ÁªèÂ∏∏ÊùÄÊ≠ª‰∫ÜNginxÁ∫øÁ®ãÂÜçÊù•ÂêØÂä®„ÄÇ„ÄÇ„ÄÇNginx‰ªéÊñ∞ËØªÂèñÈÖçÁΩÆÁöÑÂëΩ‰ª§ÊòØ 1nginx -s reload windows‰∏ãÈù¢Â∞±ÊòØ 1nginx.exe -s reload]]></content>
      <tags>
        <tag>Nginx</tag>
        <tag>ËΩ¨Âèë</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Âü∫Á°ÄÔºö‰∏á‰∏àÈ´òÊ•ºÂπ≥Âú∞Ëµ∑ ‚Äî‚Äî Redis Âü∫Á°ÄÊï∞ÊçÆÁªìÊûÑ]]></title>
    <url>%2F2018%2F09%2F20%2FRedis%20%E6%B7%B1%E5%BA%A6%E5%8E%86%E9%99%A9%2F2%E5%9F%BA%E7%A1%80%EF%BC%9A%E4%B8%87%E4%B8%88%E9%AB%98%E6%A5%BC%E5%B9%B3%E5%9C%B0%E8%B5%B7%20%E2%80%94%E2%80%94%20Redis%20%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%2F</url>
    <content type="text"><![CDATA[‰ΩúËÄÖÔºöÊéòÈáëÂ∞èÂÜå Êù•Ê∫êÔºöhttps://mp.weixin.qq.com/s/JW__OgOBmCrOlh38ABCWNA ÂçÉÈáå‰πãË°åÔºåÂßã‰∫éË∂≥‰∏ã„ÄÇÊú¨ËäÇÊàë‰ª¨ÁöÑÂ≠¶‰π†ÁõÆÊ†áÊòØÔºöÂø´ÈÄüÁêÜËß£Âπ∂ÊéåÊè° Redis ÁöÑÂü∫Á°ÄÁü•ËØÜ„ÄÇ Áî±‰∫éÊú¨ËäÇÂÜÖÂÆπÊòØ Redis ÊúÄÁÆÄÂçïÊúÄÂÆπÊòìÊéåÊè°ÁöÑÁü•ËØÜÔºåÂ¶ÇÊûúËØªËÄÖÂ∑≤ÁªèÂæàÁÜüÊÇâ Redis ÁöÑÂü∫Á°ÄÊï∞ÊçÆÁªìÊûÑÔºå‰ªéÁèçÊÉúÁîüÂëΩÁöÑËßíÂ∫¶Âá∫ÂèëÔºå‰Ω†ÂèØ‰ª•Áï•ËøáÊú¨ËäÇÂÜÖÂÆπÔºåË∑≥Âà∞‰∏ã‰∏ÄËäÇÁªßÁª≠ÈòÖËØª„ÄÇÂ¶ÇÊûú‰Ω†ËßâÂæóÊú¨ËäÇÁöÑÂä®ÁîªÊúâÁÇπÊôÉÁúºÔºåÈòÖËØªËµ∑Êù•‰∏çÈÇ£‰πàËàíÊúçÔºåÂèØ‰ª•ÁúãÁúã‰ΩúËÄÖÁöÑÂè¶‰∏ÄÁØáÊñáÁ´†„ÄäRedis Êï∞ÊçÆÁªìÊûÑÂü∫Á°ÄÊïôÁ®ã„Äã„ÄÇ Ë¶Å‰ΩìÈ™å RedisÔºåÊàë‰ª¨ÂÖà‰ªé Redis ÂÆâË£ÖËØ¥Ëµ∑„ÄÇ &nbsp; Redis ÂÆâË£Ö ‰ΩìÈ™å Redis ÈúÄË¶Å‰ΩøÁî® Linux ÊàñËÄÖ Mac ÁéØÂ¢ÉÔºåÂ¶ÇÊûúÊòØ Windows ÂèØ‰ª•ËÄÉËôë‰ΩøÁî®ËôöÊãüÊú∫„ÄÇ‰∏ªË¶ÅÊñπÂºèÊúâÂõõÁßçÔºö ‰ΩøÁî® Docker ÂÆâË£Ö„ÄÇ ÈÄöËøá Github Ê∫êÁ†ÅÁºñËØë„ÄÇ Áõ¥Êé•ÂÆâË£Ö apt-get install(Ubuntu)„ÄÅyum install(RedHat) ÊàñËÄÖ brew install(Mac)„ÄÇ Â¶ÇÊûúËØªËÄÖÊáí‰∫éÂÆâË£ÖÊìç‰ΩúÔºå‰πüÂèØ‰ª•‰ΩøÁî®ÁΩëÈ°µÁâàÁöÑ Web Redis Áõ¥Êé•‰ΩìÈ™å„ÄÇ ÂÖ∑‰ΩìÊìç‰ΩúÂ¶Ç‰∏ãÔºö Docker ÊñπÂºè123456# ÊãâÂèñ redis ÈïúÂÉè&gt; docker pull redis# ËøêË°å redis ÂÆπÂô®&gt; docker run --name myredis -d -p6379:6379 redis# ÊâßË°åÂÆπÂô®‰∏≠ÁöÑ redis-cliÔºåÂèØ‰ª•Áõ¥Êé•‰ΩøÁî®ÂëΩ‰ª§Ë°åÊìç‰Ωú redis&gt; docker exec -it myredis redis-cli... Github Ê∫êÁ†ÅÁºñËØëÊñπÂºè12345678910# ‰∏ãËΩΩÊ∫êÁ†Å&gt; git clone --branch 2.8 --depth 1 git@github.com:antirez/redis.git&gt; cd redis# ÁºñËØë&gt; make&gt; cd src# ËøêË°åÊúçÂä°Âô®ÔºådaemonizeË°®Á§∫Âú®ÂêéÂè∞ËøêË°å&gt; ./redis-server --daemonize yes# ËøêË°åÂëΩ‰ª§Ë°å&gt; ./redis-cli... Áõ¥Êé•ÂÆâË£ÖÊñπÂºè12345678# mac&gt; brew install redis# ubuntu&gt; apt-get install redis# redhat&gt; yum install redis# ËøêË°åÂÆ¢Êà∑Á´Ø&gt; redis-cli &nbsp; Redis Âü∫Á°ÄÊï∞ÊçÆÁªìÊûÑ Redis Êúâ 5 ÁßçÂü∫Á°ÄÊï∞ÊçÆÁªìÊûÑÔºåÂàÜÂà´‰∏∫Ôºöstring (Â≠óÁ¨¶‰∏≤)„ÄÅlist (ÂàóË°®)„ÄÅset (ÈõÜÂêà)„ÄÅhash (ÂìàÂ∏å) Âíå zset (ÊúâÂ∫èÈõÜÂêà)„ÄÇÁÜüÁªÉÊéåÊè°Ëøô 5 ÁßçÂü∫Êú¨Êï∞ÊçÆÁªìÊûÑÁöÑ‰ΩøÁî®ÊòØ Redis Áü•ËØÜÊúÄÂü∫Á°Ä‰πüÊúÄÈáçË¶ÅÁöÑÈÉ®ÂàÜÔºåÂÆÉ‰πüÊòØÂú® Redis Èù¢ËØïÈ¢ò‰∏≠ÈóÆÂà∞ÊúÄÂ§öÁöÑÂÜÖÂÆπ„ÄÇ Êú¨ËäÇÂ∞ÜÂ∏¶È¢Ü Redis ÂàùÂ≠¶ËÄÖÂø´ÈÄüÈÄöÂÖ≥Ëøô 5 ÁßçÂü∫Êú¨Êï∞ÊçÆÁªìÊûÑ„ÄÇËÄÉËôëÂà∞ Redis ÁöÑÂëΩ‰ª§ÈùûÂ∏∏Â§öÔºåËøôÈáåÂè™ÈÄâÂèñÈÇ£‰∫õÊúÄÂ∏∏ËßÅÁöÑÊåá‰ª§ËøõË°åËÆ≤Ëß£ÔºåÂ¶ÇÊûúÊúâÈÅóÊºèÂ∏∏ËßÅÊåá‰ª§ÔºåËØªËÄÖÂèØ‰ª•Âú®ËØÑËÆ∫ÂéªÁïôË®Ä„ÄÇ &nbsp; string (Â≠óÁ¨¶‰∏≤) Â≠óÁ¨¶‰∏≤ string ÊòØ Redis ÊúÄÁÆÄÂçïÁöÑÊï∞ÊçÆÁªìÊûÑ„ÄÇRedis ÊâÄÊúâÁöÑÊï∞ÊçÆÁªìÊûÑÈÉΩÊòØ‰ª•ÂîØ‰∏ÄÁöÑ key Â≠óÁ¨¶‰∏≤‰Ωú‰∏∫ÂêçÁß∞ÔºåÁÑ∂ÂêéÈÄöËøáËøô‰∏™ÂîØ‰∏Ä key ÂÄºÊù•Ëé∑ÂèñÁõ∏Â∫îÁöÑ value Êï∞ÊçÆ„ÄÇ‰∏çÂêåÁ±ªÂûãÁöÑÊï∞ÊçÆÁªìÊûÑÁöÑÂ∑ÆÂºÇÂ∞±Âú®‰∫é value ÁöÑÁªìÊûÑ‰∏ç‰∏ÄÊ†∑„ÄÇ Â≠óÁ¨¶‰∏≤ÁªìÊûÑ‰ΩøÁî®ÈùûÂ∏∏ÂπøÊ≥õÔºå‰∏Ä‰∏™Â∏∏ËßÅÁöÑÁî®ÈÄîÂ∞±ÊòØÁºìÂ≠òÁî®Êà∑‰ø°ÊÅØ„ÄÇÊàë‰ª¨Â∞ÜÁî®Êà∑‰ø°ÊÅØÁªìÊûÑ‰Ωì‰ΩøÁî® JSON Â∫èÂàóÂåñÊàêÂ≠óÁ¨¶‰∏≤ÔºåÁÑ∂ÂêéÂ∞ÜÂ∫èÂàóÂåñÂêéÁöÑÂ≠óÁ¨¶‰∏≤Â°ûËøõ Redis Êù•ÁºìÂ≠ò„ÄÇÂêåÊ†∑ÔºåÂèñÁî®Êà∑‰ø°ÊÅØ‰ºöÁªèËøá‰∏ÄÊ¨°ÂèçÂ∫èÂàóÂåñÁöÑËøáÁ®ã„ÄÇ Redis ÁöÑÂ≠óÁ¨¶‰∏≤ÊòØÂä®ÊÄÅÂ≠óÁ¨¶‰∏≤ÔºåÊòØÂèØ‰ª•‰øÆÊîπÁöÑÂ≠óÁ¨¶‰∏≤ÔºåÂÜÖÈÉ®ÁªìÊûÑÂÆûÁé∞‰∏äÁ±ª‰ºº‰∫é Java ÁöÑ ArrayListÔºåÈááÁî®È¢ÑÂàÜÈÖçÂÜó‰ΩôÁ©∫Èó¥ÁöÑÊñπÂºèÊù•ÂáèÂ∞ëÂÜÖÂ≠òÁöÑÈ¢ëÁπÅÂàÜÈÖçÔºåÂ¶ÇÂõæ‰∏≠ÊâÄÁ§∫ÔºåÂÜÖÈÉ®‰∏∫ÂΩìÂâçÂ≠óÁ¨¶‰∏≤ÂÆûÈôÖÂàÜÈÖçÁöÑÁ©∫Èó¥ capacity ‰∏ÄËà¨Ë¶ÅÈ´ò‰∫éÂÆûÈôÖÂ≠óÁ¨¶‰∏≤ÈïøÂ∫¶ len„ÄÇÂΩìÂ≠óÁ¨¶‰∏≤ÈïøÂ∫¶Â∞è‰∫é 1M Êó∂ÔºåÊâ©ÂÆπÈÉΩÊòØÂä†ÂÄçÁé∞ÊúâÁöÑÁ©∫Èó¥ÔºåÂ¶ÇÊûúË∂ÖËøá 1MÔºåÊâ©ÂÆπÊó∂‰∏ÄÊ¨°Âè™‰ºöÂ§öÊâ© 1M ÁöÑÁ©∫Èó¥„ÄÇÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÂ≠óÁ¨¶‰∏≤ÊúÄÂ§ßÈïøÂ∫¶‰∏∫ 512M„ÄÇ ÈîÆÂÄºÂØπ12345678910&gt; set name codeholeOK&gt; get name"codehole"&gt; exists name(integer) 1&gt; del name(integer) 1&gt; get name(nil) ÊâπÈáèÈîÆÂÄºÂØπÂèØ‰ª•ÊâπÈáèÂØπÂ§ö‰∏™Â≠óÁ¨¶‰∏≤ËøõË°åËØªÂÜôÔºåËäÇÁúÅÁΩëÁªúËÄóÊó∂ÂºÄÈîÄ„ÄÇ 12345678910111213&gt; set name1 codeholeOK&gt; set name2 holycoderOK&gt; mget name1 name2 name3 # ËøîÂõû‰∏Ä‰∏™ÂàóË°®1) "codehole"2) "holycoder"3) (nil)&gt; mset name1 boy name2 girl name3 unknown&gt; mget name1 name2 name31) "boy"2) "girl"3) "unknown" ËøáÊúüÂíå set ÂëΩ‰ª§Êâ©Â±ïÂèØ‰ª•ÂØπ key ËÆæÁΩÆËøáÊúüÊó∂Èó¥ÔºåÂà∞ÁÇπËá™Âä®Âà†Èô§ÔºåËøô‰∏™ÂäüËÉΩÂ∏∏Áî®Êù•ÊéßÂà∂ÁºìÂ≠òÁöÑÂ§±ÊïàÊó∂Èó¥„ÄÇ‰∏çËøáËøô‰∏™„ÄåËá™Âä®Âà†Èô§„ÄçÁöÑÊú∫Âà∂ÊòØÊØîËæÉÂ§çÊùÇÁöÑÔºåÂ¶ÇÊûú‰Ω†ÊÑüÂÖ¥Ë∂£ÔºåÂèØ‰ª•ÁªßÁª≠Ê∑±ÂÖ•ÈòÖËØªÁ¨¨ 26 ËäÇ„ÄäÊúùÁîüÊöÆÊ≠ª‚Äî‚ÄîËøáÊúüÁ≠ñÁï•„Äã 1234567891011121314151617181920212223&gt; set name codehole&gt; get name"codehole"&gt; expire name 5 # 5s ÂêéËøáÊúü... # wait for 5s&gt; get name(nil)&gt; setex name 5 codehole # 5s ÂêéËøáÊúüÔºåÁ≠â‰ª∑‰∫é set+expire&gt; get name"codehole"... # wait for 5s&gt; get name(nil)&gt; setnx name codehole # Â¶ÇÊûú name ‰∏çÂ≠òÂú®Â∞±ÊâßË°å set ÂàõÂª∫(integer) 1&gt; get name"codehole"&gt; setnx name holycoder(integer) 0 # Âõ†‰∏∫ name Â∑≤ÁªèÂ≠òÂú®ÔºåÊâÄ‰ª• set ÂàõÂª∫‰∏çÊàêÂäü&gt; get name"codehole" # Ê≤°ÊúâÊîπÂèò ËÆ°Êï∞Â¶ÇÊûú value ÂÄºÊòØ‰∏Ä‰∏™Êï¥Êï∞ÔºåËøòÂèØ‰ª•ÂØπÂÆÉËøõË°åËá™Â¢ûÊìç‰Ωú„ÄÇËá™Â¢ûÊòØÊúâËåÉÂõ¥ÁöÑÔºåÂÆÉÁöÑËåÉÂõ¥ÊòØ signed long ÁöÑÊúÄÂ§ßÊúÄÂ∞èÂÄºÔºåË∂ÖËøá‰∫ÜËøô‰∏™ÂÄºÔºåRedis ‰ºöÊä•Èîô„ÄÇ 123456789101112&gt; set age 30OK&gt; incr age(integer) 31&gt; incrby age 5(integer) 36&gt; incrby age -5(integer) 31&gt; set codehole 9223372036854775807 # Long.MaxOK&gt; incr codehole(error) ERR increment or decrement would overflow Â≠óÁ¨¶‰∏≤ÊòØÁî±Â§ö‰∏™Â≠óËäÇÁªÑÊàêÔºåÊØè‰∏™Â≠óËäÇÂèàÊòØÁî± 8 ‰∏™ bit ÁªÑÊàêÔºåÂ¶ÇÊ≠§‰æøÂèØ‰ª•Â∞Ü‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÁúãÊàêÂæàÂ§ö bit ÁöÑÁªÑÂêàÔºåËøô‰æøÊòØ bitmap„Äå‰ΩçÂõæ„ÄçÊï∞ÊçÆÁªìÊûÑÔºå‰ΩçÂõæÁöÑÂÖ∑‰Ωì‰ΩøÁî®‰ºöÊîæÂà∞ÂêéÈù¢ÁöÑÁ´†ËäÇÊù•ËÆ≤„ÄÇ ÂÖ≥‰∫éÂ≠óÁ¨¶‰∏≤ÁöÑÂÜÖÈÉ®ÁªìÊûÑÂÆûÁé∞ÔºåËØ∑ÈòÖËØªÁ¨¨ 32 ËäÇ„ÄäÊûÅÂ∫¶Ê∑±ÂØí ‚Äî‚Äî Êé¢Á¥¢„ÄåÂ≠óÁ¨¶‰∏≤„ÄçÂÜÖÈÉ®„Äã &nbsp; list (ÂàóË°®) Redis ÁöÑÂàóË°®Áõ∏ÂΩì‰∫é Java ËØ≠Ë®ÄÈáåÈù¢ÁöÑ LinkedListÔºåÊ≥®ÊÑèÂÆÉÊòØÈìæË°®ËÄå‰∏çÊòØÊï∞ÁªÑ„ÄÇËøôÊÑèÂë≥ÁùÄ list ÁöÑÊèíÂÖ•ÂíåÂà†Èô§Êìç‰ΩúÈùûÂ∏∏Âø´ÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ O(1)Ôºå‰ΩÜÊòØÁ¥¢ÂºïÂÆö‰ΩçÂæàÊÖ¢ÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ O(n)ÔºåËøôÁÇπËÆ©‰∫∫ÈùûÂ∏∏ÊÑèÂ§ñ„ÄÇ ÂΩìÂàóË°®ÂºπÂá∫‰∫ÜÊúÄÂêé‰∏Ä‰∏™ÂÖÉÁ¥†‰πãÂêéÔºåËØ•Êï∞ÊçÆÁªìÊûÑËá™Âä®Ë¢´Âà†Èô§ÔºåÂÜÖÂ≠òË¢´ÂõûÊî∂„ÄÇ Redis ÁöÑÂàóË°®ÁªìÊûÑÂ∏∏Áî®Êù•ÂÅöÂºÇÊ≠•ÈòüÂàó‰ΩøÁî®„ÄÇÂ∞ÜÈúÄË¶ÅÂª∂ÂêéÂ§ÑÁêÜÁöÑ‰ªªÂä°ÁªìÊûÑ‰ΩìÂ∫èÂàóÂåñÊàêÂ≠óÁ¨¶‰∏≤Â°ûËøõ Redis ÁöÑÂàóË°®ÔºåÂè¶‰∏Ä‰∏™Á∫øÁ®ã‰ªéËøô‰∏™ÂàóË°®‰∏≠ËΩÆËØ¢Êï∞ÊçÆËøõË°åÂ§ÑÁêÜ„ÄÇ Âè≥ËæπËøõÂ∑¶ËæπÂá∫ÔºöÈòüÂàó123456789101112&gt; rpush books python java golang(integer) 3&gt; llen books(integer) 3&gt; lpop books"python"&gt; lpop books"java"&gt; lpop books"golang"&gt; lpop books(nil) Âè≥ËæπËøõÂè≥ËæπÂá∫ÔºöÊ†à12345678910&gt; rpush books python java golang(integer) 3&gt; rpop books"golang"&gt; rpop books"java"&gt; rpop books"python"&gt; rpop books(nil) ÊÖ¢Êìç‰Ωúlindex Áõ∏ÂΩì‰∫é Java ÈìæË°®ÁöÑget(int index)ÊñπÊ≥ïÔºåÂÆÉÈúÄË¶ÅÂØπÈìæË°®ËøõË°åÈÅçÂéÜÔºåÊÄßËÉΩÈöèÁùÄÂèÇÊï∞indexÂ¢ûÂ§ßËÄåÂèòÂ∑Æ„ÄÇ ltrim ÂíåÂ≠óÈù¢‰∏äÁöÑÂê´‰πâ‰∏çÂ§™‰∏ÄÊ†∑Ôºå‰∏™‰∫∫ËßâÂæóÂÆÉÂè´ lretain(‰øùÁïô) Êõ¥ÂêàÈÄÇ‰∏Ä‰∫õÔºåÂõ†‰∏∫ ltrim Ë∑üÁöÑ‰∏§‰∏™ÂèÇÊï∞start_indexÂíåend_indexÂÆö‰πâ‰∫Ü‰∏Ä‰∏™Âå∫Èó¥ÔºåÂú®Ëøô‰∏™Âå∫Èó¥ÂÜÖÁöÑÂÄºÔºåltrim Ë¶Å‰øùÁïôÔºåÂå∫Èó¥‰πãÂ§ñÁªüÁªüÁ†çÊéâ„ÄÇÊàë‰ª¨ÂèØ‰ª•ÈÄöËøáltrimÊù•ÂÆûÁé∞‰∏Ä‰∏™ÂÆöÈïøÁöÑÈìæË°®ÔºåËøô‰∏ÄÁÇπÈùûÂ∏∏ÊúâÁî®„ÄÇ index ÂèØ‰ª•‰∏∫Ë¥üÊï∞Ôºåindex=-1Ë°®Á§∫ÂÄíÊï∞Á¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÔºåÂêåÊ†∑index=-2Ë°®Á§∫ÂÄíÊï∞Á¨¨‰∫å‰∏™ÂÖÉÁ¥†„ÄÇ 1234567891011121314151617&gt; rpush books python java golang(integer) 3&gt; lindex books 1 # O(n) ÊÖéÁî®"java"&gt; lrange books 0 -1 # Ëé∑ÂèñÊâÄÊúâÂÖÉÁ¥†ÔºåO(n) ÊÖéÁî®1) "python"2) "java"3) "golang"&gt; ltrim books 1 -1 # O(n) ÊÖéÁî®OK&gt; lrange books 0 -11) "java"2) "golang"&gt; ltrim books 1 0 # ËøôÂÖ∂ÂÆûÊòØÊ∏ÖÁ©∫‰∫ÜÊï¥‰∏™ÂàóË°®ÔºåÂõ†‰∏∫Âå∫Èó¥ËåÉÂõ¥ÈïøÂ∫¶‰∏∫Ë¥üOK&gt; llen books(integer) 0 Âø´ÈÄüÂàóË°® Â¶ÇÊûúÂÜçÊ∑±ÂÖ•‰∏ÄÁÇπÔºå‰Ω†‰ºöÂèëÁé∞ Redis Â∫ïÂ±ÇÂ≠òÂÇ®ÁöÑËøò‰∏çÊòØ‰∏Ä‰∏™ÁÆÄÂçïÁöÑ linkedlistÔºåËÄåÊòØÁß∞‰πã‰∏∫Âø´ÈÄüÈìæË°® quicklist ÁöÑ‰∏Ä‰∏™ÁªìÊûÑ„ÄÇ È¶ñÂÖàÂú®ÂàóË°®ÂÖÉÁ¥†ËæÉÂ∞ëÁöÑÊÉÖÂÜµ‰∏ã‰ºö‰ΩøÁî®‰∏ÄÂùóËøûÁª≠ÁöÑÂÜÖÂ≠òÂ≠òÂÇ®ÔºåËøô‰∏™ÁªìÊûÑÊòØ ziplistÔºå‰πüÂç≥ÊòØÂéãÁº©ÂàóË°®„ÄÇÂÆÉÂ∞ÜÊâÄÊúâÁöÑÂÖÉÁ¥†Á¥ßÊå®ÁùÄ‰∏ÄËµ∑Â≠òÂÇ®ÔºåÂàÜÈÖçÁöÑÊòØ‰∏ÄÂùóËøûÁª≠ÁöÑÂÜÖÂ≠ò„ÄÇÂΩìÊï∞ÊçÆÈáèÊØîËæÉÂ§öÁöÑÊó∂ÂÄôÊâç‰ºöÊîπÊàê quicklist„ÄÇÂõ†‰∏∫ÊôÆÈÄöÁöÑÈìæË°®ÈúÄË¶ÅÁöÑÈôÑÂä†ÊåáÈíàÁ©∫Èó¥Â§™Â§ßÔºå‰ºöÊØîËæÉÊµ™Ë¥πÁ©∫Èó¥ÔºåËÄå‰∏î‰ºöÂä†ÈáçÂÜÖÂ≠òÁöÑÁ¢éÁâáÂåñ„ÄÇÊØîÂ¶ÇËøô‰∏™ÂàóË°®ÈáåÂ≠òÁöÑÂè™ÊòØ int Á±ªÂûãÁöÑÊï∞ÊçÆÔºåÁªìÊûÑ‰∏äËøòÈúÄË¶Å‰∏§‰∏™È¢ùÂ§ñÁöÑÊåáÈíà prev Âíå next „ÄÇÊâÄ‰ª• Redis Â∞ÜÈìæË°®Âíå ziplist ÁªìÂêàËµ∑Êù•ÁªÑÊàê‰∫Ü quicklist„ÄÇ‰πüÂ∞±ÊòØÂ∞ÜÂ§ö‰∏™ ziplist ‰ΩøÁî®ÂèåÂêëÊåáÈíà‰∏≤Ëµ∑Êù•‰ΩøÁî®„ÄÇËøôÊ†∑Êó¢Êª°Ë∂≥‰∫ÜÂø´ÈÄüÁöÑÊèíÂÖ•Âà†Èô§ÊÄßËÉΩÔºåÂèà‰∏ç‰ºöÂá∫Áé∞Â§™Â§ßÁöÑÁ©∫Èó¥ÂÜó‰Ωô„ÄÇ ÂÖ≥‰∫éÂàóË°®ÁöÑÂÜÖÈÉ®ÁªìÊûÑÂÆûÁé∞ÔºåËØ∑ÈòÖËØªÁ¨¨ 34 ËäÇ„ÄäÊûÅÂ∫¶Ê∑±ÂØí ‚Äî‚Äî Êé¢Á¥¢„ÄåÂéãÁº©ÂàóË°®„ÄçÂÜÖÈÉ®„ÄãÂíåÁ¨¨ 35 ËäÇ„ÄäÊûÅÂ∫¶Ê∑±ÂØí ‚Äî‚Äî Êé¢Á¥¢„ÄåÂø´ÈÄüÂàóË°®„ÄçÂÜÖÈÉ®„Äã &nbsp; hash (Â≠óÂÖ∏) Redis ÁöÑÂ≠óÂÖ∏Áõ∏ÂΩì‰∫é Java ËØ≠Ë®ÄÈáåÈù¢ÁöÑ HashMapÔºåÂÆÉÊòØÊó†Â∫èÂ≠óÂÖ∏„ÄÇÂÜÖÈÉ®ÂÆûÁé∞ÁªìÊûÑ‰∏äÂêå Java ÁöÑ HashMap ‰πüÊòØ‰∏ÄËá¥ÁöÑÔºåÂêåÊ†∑ÁöÑÊï∞ÁªÑ + ÈìæË°®‰∫åÁª¥ÁªìÊûÑ„ÄÇÁ¨¨‰∏ÄÁª¥ hash ÁöÑÊï∞ÁªÑ‰ΩçÁΩÆÁ¢∞ÊíûÊó∂ÔºåÂ∞±‰ºöÂ∞ÜÁ¢∞ÊíûÁöÑÂÖÉÁ¥†‰ΩøÁî®ÈìæË°®‰∏≤Êé•Ëµ∑Êù•„ÄÇ ‰∏çÂêåÁöÑÊòØÔºåRedis ÁöÑÂ≠óÂÖ∏ÁöÑÂÄºÂè™ËÉΩÊòØÂ≠óÁ¨¶‰∏≤ÔºåÂè¶Â§ñÂÆÉ‰ª¨ rehash ÁöÑÊñπÂºè‰∏ç‰∏ÄÊ†∑ÔºåÂõ†‰∏∫ Java ÁöÑ HashMap Âú®Â≠óÂÖ∏ÂæàÂ§ßÊó∂Ôºårehash ÊòØ‰∏™ËÄóÊó∂ÁöÑÊìç‰ΩúÔºåÈúÄË¶Å‰∏ÄÊ¨°ÊÄßÂÖ®ÈÉ® rehash„ÄÇRedis ‰∏∫‰∫ÜÈ´òÊÄßËÉΩÔºå‰∏çËÉΩÂ†µÂ°ûÊúçÂä°ÔºåÊâÄ‰ª•ÈááÁî®‰∫ÜÊ∏êËøõÂºè rehash Á≠ñÁï•„ÄÇ Ê∏êËøõÂºè rehash ‰ºöÂú® rehash ÁöÑÂêåÊó∂Ôºå‰øùÁïôÊñ∞Êóß‰∏§‰∏™ hash ÁªìÊûÑÔºåÊü•ËØ¢Êó∂‰ºöÂêåÊó∂Êü•ËØ¢‰∏§‰∏™ hash ÁªìÊûÑÔºåÁÑ∂ÂêéÂú®ÂêéÁª≠ÁöÑÂÆöÊó∂‰ªªÂä°‰∏≠‰ª•Âèä hash Êìç‰ΩúÊåá‰ª§‰∏≠ÔºåÂæ™Â∫èÊ∏êËøõÂú∞Â∞ÜÊóß hash ÁöÑÂÜÖÂÆπ‰∏ÄÁÇπÁÇπËøÅÁßªÂà∞Êñ∞ÁöÑ hash ÁªìÊûÑ‰∏≠„ÄÇÂΩìÊê¨ËøÅÂÆåÊàê‰∫ÜÔºåÂ∞±‰ºö‰ΩøÁî®Êñ∞ÁöÑhashÁªìÊûÑÂèñËÄå‰ª£‰πã„ÄÇ ÂΩì hash ÁßªÈô§‰∫ÜÊúÄÂêé‰∏Ä‰∏™ÂÖÉÁ¥†‰πãÂêéÔºåËØ•Êï∞ÊçÆÁªìÊûÑËá™Âä®Ë¢´Âà†Èô§ÔºåÂÜÖÂ≠òË¢´ÂõûÊî∂„ÄÇ hash ÁªìÊûÑ‰πüÂèØ‰ª•Áî®Êù•Â≠òÂÇ®Áî®Êà∑‰ø°ÊÅØÔºå‰∏çÂêå‰∫éÂ≠óÁ¨¶‰∏≤‰∏ÄÊ¨°ÊÄßÈúÄË¶ÅÂÖ®ÈÉ®Â∫èÂàóÂåñÊï¥‰∏™ÂØπË±°Ôºåhash ÂèØ‰ª•ÂØπÁî®Êà∑ÁªìÊûÑ‰∏≠ÁöÑÊØè‰∏™Â≠óÊÆµÂçïÁã¨Â≠òÂÇ®„ÄÇËøôÊ†∑ÂΩìÊàë‰ª¨ÈúÄË¶ÅËé∑ÂèñÁî®Êà∑‰ø°ÊÅØÊó∂ÂèØ‰ª•ËøõË°åÈÉ®ÂàÜËé∑Âèñ„ÄÇËÄå‰ª•Êï¥‰∏™Â≠óÁ¨¶‰∏≤ÁöÑÂΩ¢ÂºèÂéª‰øùÂ≠òÁî®Êà∑‰ø°ÊÅØÁöÑËØùÂ∞±Âè™ËÉΩ‰∏ÄÊ¨°ÊÄßÂÖ®ÈÉ®ËØªÂèñÔºåËøôÊ†∑Â∞±‰ºöÊØîËæÉÊµ™Ë¥πÁΩëÁªúÊµÅÈáè„ÄÇ hash ‰πüÊúâÁº∫ÁÇπÔºåhash ÁªìÊûÑÁöÑÂ≠òÂÇ®Ê∂àËÄóË¶ÅÈ´ò‰∫éÂçï‰∏™Â≠óÁ¨¶‰∏≤ÔºåÂà∞Â∫ïËØ•‰ΩøÁî® hash ËøòÊòØÂ≠óÁ¨¶‰∏≤ÔºåÈúÄË¶ÅÊ†πÊçÆÂÆûÈôÖÊÉÖÂÜµÂÜç‰∏âÊùÉË°°„ÄÇ 1234567891011121314151617181920212223&gt; hset books java "think in java" # ÂëΩ‰ª§Ë°åÁöÑÂ≠óÁ¨¶‰∏≤Â¶ÇÊûúÂåÖÂê´Á©∫Ê†ºÔºåË¶ÅÁî®ÂºïÂè∑Êã¨Ëµ∑Êù•(integer) 1&gt; hset books golang "concurrency in go"(integer) 1&gt; hset books python "python cookbook"(integer) 1&gt; hgetall books # entries()Ôºåkey Âíå value Èó¥ÈöîÂá∫Áé∞1) "java"2) "think in java"3) "golang"4) "concurrency in go"5) "python"6) "python cookbook"&gt; hlen books(integer) 3&gt; hget books java"think in java"&gt; hset books golang "learning go programming" # Âõ†‰∏∫ÊòØÊõ¥Êñ∞Êìç‰ΩúÔºåÊâÄ‰ª•ËøîÂõû 0(integer) 0&gt; hget books golang"learning go programming"&gt; hmset books java "effective java" python "learning python" golang "modern golang programming" # ÊâπÈáè setOK ÂêåÂ≠óÁ¨¶‰∏≤ÂØπË±°‰∏ÄÊ†∑Ôºåhash ÁªìÊûÑ‰∏≠ÁöÑÂçï‰∏™Â≠ê key ‰πüÂèØ‰ª•ËøõË°åËÆ°Êï∞ÔºåÂÆÉÂØπÂ∫îÁöÑÊåá‰ª§ÊòØ hincrbyÔºåÂíå incr ‰ΩøÁî®Âü∫Êú¨‰∏ÄÊ†∑„ÄÇ 123# ËÄÅÈí±ÂèàËÄÅ‰∫Ü‰∏ÄÂ≤Å&gt; hincrby user-laoqian age 1(integer) 30 ÂÖ≥‰∫éÂ≠óÂÖ∏ÁöÑÂÜÖÈÉ®ÁªìÊûÑÂÆûÁé∞ÔºåËØ∑ÈòÖËØªÁ¨¨ 33 ËäÇ„ÄäÊûÅÂ∫¶Ê∑±ÂØí ‚Äî‚Äî Êé¢Á¥¢„ÄåÂ≠óÂÖ∏„ÄçÂÜÖÈÉ®„Äã„ÄÇ &nbsp; set (ÈõÜÂêà) Redis ÁöÑÈõÜÂêàÁõ∏ÂΩì‰∫é Java ËØ≠Ë®ÄÈáåÈù¢ÁöÑ HashSetÔºåÂÆÉÂÜÖÈÉ®ÁöÑÈîÆÂÄºÂØπÊòØÊó†Â∫èÁöÑÂîØ‰∏ÄÁöÑ„ÄÇÂÆÉÁöÑÂÜÖÈÉ®ÂÆûÁé∞Áõ∏ÂΩì‰∫é‰∏Ä‰∏™ÁâπÊÆäÁöÑÂ≠óÂÖ∏ÔºåÂ≠óÂÖ∏‰∏≠ÊâÄÊúâÁöÑ value ÈÉΩÊòØ‰∏Ä‰∏™ÂÄºNULL„ÄÇ ÂΩìÈõÜÂêà‰∏≠ÊúÄÂêé‰∏Ä‰∏™ÂÖÉÁ¥†ÁßªÈô§‰πãÂêéÔºåÊï∞ÊçÆÁªìÊûÑËá™Âä®Âà†Èô§ÔºåÂÜÖÂ≠òË¢´ÂõûÊî∂„ÄÇ set ÁªìÊûÑÂèØ‰ª•Áî®Êù•Â≠òÂÇ®Ê¥ªÂä®‰∏≠Â•ñÁöÑÁî®Êà∑ IDÔºåÂõ†‰∏∫ÊúâÂéªÈáçÂäüËÉΩÔºåÂèØ‰ª•‰øùËØÅÂêå‰∏Ä‰∏™Áî®Êà∑‰∏ç‰ºö‰∏≠Â•ñ‰∏§Ê¨°„ÄÇ 123456789101112131415161718&gt; sadd books python(integer) 1&gt; sadd books python # ÈáçÂ§ç(integer) 0&gt; sadd books java golang(integer) 2&gt; smembers books # Ê≥®ÊÑèÈ°∫Â∫èÔºåÂíåÊèíÂÖ•ÁöÑÂπ∂‰∏ç‰∏ÄËá¥ÔºåÂõ†‰∏∫ set ÊòØÊó†Â∫èÁöÑ1) "java"2) "python"3) "golang"&gt; sismember books java # Êü•ËØ¢Êüê‰∏™ value ÊòØÂê¶Â≠òÂú®ÔºåÁõ∏ÂΩì‰∫é contains(o)(integer) 1&gt; sismember books rust(integer) 0&gt; scard books # Ëé∑ÂèñÈïøÂ∫¶Áõ∏ÂΩì‰∫é count()(integer) 3&gt; spop books # ÂºπÂá∫‰∏Ä‰∏™"java" &nbsp; zset (ÊúâÂ∫èÈõÜÂêà) zset ÂèØËÉΩÊòØ Redis Êèê‰æõÁöÑÊúÄ‰∏∫ÁâπËâ≤ÁöÑÊï∞ÊçÆÁªìÊûÑÔºåÂÆÉ‰πüÊòØÂú®Èù¢ËØï‰∏≠Èù¢ËØïÂÆòÊúÄÁà±ÈóÆÁöÑÊï∞ÊçÆÁªìÊûÑ„ÄÇÂÆÉÁ±ª‰ºº‰∫é Java ÁöÑ SortedSet Âíå HashMap ÁöÑÁªìÂêà‰ΩìÔºå‰∏ÄÊñπÈù¢ÂÆÉÊòØ‰∏Ä‰∏™ setÔºå‰øùËØÅ‰∫ÜÂÜÖÈÉ® value ÁöÑÂîØ‰∏ÄÊÄßÔºåÂè¶‰∏ÄÊñπÈù¢ÂÆÉÂèØ‰ª•ÁªôÊØè‰∏™ value Ëµã‰∫à‰∏Ä‰∏™ scoreÔºå‰ª£Ë°®Ëøô‰∏™ value ÁöÑÊéíÂ∫èÊùÉÈáç„ÄÇÂÆÉÁöÑÂÜÖÈÉ®ÂÆûÁé∞Áî®ÁöÑÊòØ‰∏ÄÁßçÂè´ÂÅö„ÄåË∑≥Ë∑ÉÂàóË°®„ÄçÁöÑÊï∞ÊçÆÁªìÊûÑ„ÄÇ zset ‰∏≠ÊúÄÂêé‰∏Ä‰∏™ value Ë¢´ÁßªÈô§ÂêéÔºåÊï∞ÊçÆÁªìÊûÑËá™Âä®Âà†Èô§ÔºåÂÜÖÂ≠òË¢´ÂõûÊî∂„ÄÇ zset ÂèØ‰ª•Áî®Êù•Â≠òÁ≤â‰∏ùÂàóË°®Ôºåvalue ÂÄºÊòØÁ≤â‰∏ùÁöÑÁî®Êà∑ IDÔºåscore ÊòØÂÖ≥Ê≥®Êó∂Èó¥„ÄÇÊàë‰ª¨ÂèØ‰ª•ÂØπÁ≤â‰∏ùÂàóË°®ÊåâÂÖ≥Ê≥®Êó∂Èó¥ËøõË°åÊéíÂ∫è„ÄÇ zset ËøòÂèØ‰ª•Áî®Êù•Â≠òÂÇ®Â≠¶ÁîüÁöÑÊàêÁª©Ôºåvalue ÂÄºÊòØÂ≠¶ÁîüÁöÑ IDÔºåscore ÊòØ‰ªñÁöÑËÄÉËØïÊàêÁª©„ÄÇÊàë‰ª¨ÂèØ‰ª•ÂØπÊàêÁª©ÊåâÂàÜÊï∞ËøõË°åÊéíÂ∫èÂ∞±ÂèØ‰ª•ÂæóÂà∞‰ªñÁöÑÂêçÊ¨°„ÄÇ 123456789101112131415161718192021222324252627282930313233&gt; zadd books 9.0 "think in java"(integer) 1&gt; zadd books 8.9 "java concurrency"(integer) 1&gt; zadd books 8.6 "java cookbook"(integer) 1&gt; zrange books 0 -1 # Êåâ score ÊéíÂ∫èÂàóÂá∫ÔºåÂèÇÊï∞Âå∫Èó¥‰∏∫ÊéíÂêçËåÉÂõ¥1) "java cookbook"2) "java concurrency"3) "think in java"&gt; zrevrange books 0 -1 # Êåâ score ÈÄÜÂ∫èÂàóÂá∫ÔºåÂèÇÊï∞Âå∫Èó¥‰∏∫ÊéíÂêçËåÉÂõ¥1) "think in java"2) "java concurrency"3) "java cookbook"&gt; zcard books # Áõ∏ÂΩì‰∫é count()(integer) 3&gt; zscore books "java concurrency" # Ëé∑ÂèñÊåáÂÆö value ÁöÑ score"8.9000000000000004" # ÂÜÖÈÉ® score ‰ΩøÁî® double Á±ªÂûãËøõË°åÂ≠òÂÇ®ÔºåÊâÄ‰ª•Â≠òÂú®Â∞èÊï∞ÁÇπÁ≤æÂ∫¶ÈóÆÈ¢ò&gt; zrank books "java concurrency" # ÊéíÂêç(integer) 1&gt; zrangebyscore books 0 8.91 # Ê†πÊçÆÂàÜÂÄºÂå∫Èó¥ÈÅçÂéÜ zset1) "java cookbook"2) "java concurrency"&gt; zrangebyscore books -inf 8.91 withscores # Ê†πÊçÆÂàÜÂÄºÂå∫Èó¥ (-‚àû, 8.91] ÈÅçÂéÜ zsetÔºåÂêåÊó∂ËøîÂõûÂàÜÂÄº„ÄÇinf ‰ª£Ë°® infiniteÔºåÊó†Á©∑Â§ßÁöÑÊÑèÊÄù„ÄÇ1) "java cookbook"2) "8.5999999999999996"3) "java concurrency"4) "8.9000000000000004"&gt; zrem books "java concurrency" # Âà†Èô§ value(integer) 1&gt; zrange books 0 -11) "java cookbook"2) "think in java" Ë∑≥Ë∑ÉÂàóË°®zset ÂÜÖÈÉ®ÁöÑÊéíÂ∫èÂäüËÉΩÊòØÈÄöËøá„ÄåË∑≥Ë∑ÉÂàóË°®„ÄçÊï∞ÊçÆÁªìÊûÑÊù•ÂÆûÁé∞ÁöÑÔºåÂÆÉÁöÑÁªìÊûÑÈùûÂ∏∏ÁâπÊÆäÔºå‰πüÊØîËæÉÂ§çÊùÇ„ÄÇ Âõ†‰∏∫ zset Ë¶ÅÊîØÊåÅÈöèÊú∫ÁöÑÊèíÂÖ•ÂíåÂà†Èô§ÔºåÊâÄ‰ª•ÂÆÉ‰∏çÂ•Ω‰ΩøÁî®Êï∞ÁªÑÊù•Ë°®Á§∫„ÄÇÊàë‰ª¨ÂÖàÁúã‰∏Ä‰∏™ÊôÆÈÄöÁöÑÈìæË°®ÁªìÊûÑ„ÄÇ Êàë‰ª¨ÈúÄË¶ÅËøô‰∏™ÈìæË°®ÊåâÁÖß score ÂÄºËøõË°åÊéíÂ∫è„ÄÇËøôÊÑèÂë≥ÁùÄÂΩìÊúâÊñ∞ÂÖÉÁ¥†ÈúÄË¶ÅÊèíÂÖ•Êó∂ÔºåË¶ÅÂÆö‰ΩçÂà∞ÁâπÂÆö‰ΩçÁΩÆÁöÑÊèíÂÖ•ÁÇπÔºåËøôÊ†∑ÊâçÂèØ‰ª•ÁªßÁª≠‰øùËØÅÈìæË°®ÊòØÊúâÂ∫èÁöÑ„ÄÇÈÄöÂ∏∏Êàë‰ª¨‰ºöÈÄöËøá‰∫åÂàÜÊü•ÊâæÊù•ÊâæÂà∞ÊèíÂÖ•ÁÇπÔºå‰ΩÜÊòØ‰∫åÂàÜÊü•ÊâæÁöÑÂØπË±°ÂøÖÈ°ªÊòØÊï∞ÁªÑÔºåÂè™ÊúâÊï∞ÁªÑÊâçÂèØ‰ª•ÊîØÊåÅÂø´ÈÄü‰ΩçÁΩÆÂÆö‰ΩçÔºåÈìæË°®ÂÅö‰∏çÂà∞ÔºåÈÇ£ËØ•ÊÄé‰πàÂäûÔºü ÊÉ≥ÊÉ≥‰∏Ä‰∏™Âàõ‰∏öÂÖ¨Âè∏ÔºåÂàöÂºÄÂßãÂè™ÊúâÂá†‰∏™‰∫∫ÔºåÂõ¢ÈòüÊàêÂëò‰πãÈó¥‰∫∫‰∫∫Âπ≥Á≠âÔºåÈÉΩÊòØËÅîÂêàÂàõÂßã‰∫∫„ÄÇÈöèÁùÄÂÖ¨Âè∏ÁöÑÊàêÈïøÔºå‰∫∫Êï∞Ê∏êÊ∏êÂèòÂ§öÔºåÂõ¢ÈòüÊ≤üÈÄöÊàêÊú¨Èöè‰πãÂ¢ûÂä†„ÄÇËøôÊó∂ÂÄôÂ∞±‰ºöÂºïÂÖ•ÁªÑÈïøÂà∂ÔºåÂØπÂõ¢ÈòüËøõË°åÂàíÂàÜ„ÄÇÊØè‰∏™Âõ¢Èòü‰ºöÊúâ‰∏Ä‰∏™ÁªÑÈïø„ÄÇÂºÄ‰ºöÁöÑÊó∂ÂÄôÂàÜÂõ¢ÈòüËøõË°åÔºåÂ§ö‰∏™ÁªÑÈïø‰πãÈó¥Ëøò‰ºöÊúâËá™Â∑±ÁöÑ‰ºöËÆÆÂÆâÊéí„ÄÇÂÖ¨Âè∏ËßÑÊ®°Ëøõ‰∏ÄÊ≠•Êâ©Â±ïÔºåÈúÄË¶ÅÂÜçÂ¢ûÂä†‰∏Ä‰∏™Â±ÇÁ∫ß ‚Äî‚Äî ÈÉ®Èó®ÔºåÊØè‰∏™ÈÉ®Èó®‰ºö‰ªéÁªÑÈïøÂàóË°®‰∏≠Êé®ÈÄâÂá∫‰∏Ä‰∏™‰ª£Ë°®Êù•‰Ωú‰∏∫ÈÉ®Èïø„ÄÇÈÉ®Èïø‰ª¨‰πãÈó¥Ëøò‰ºöÊúâËá™Â∑±ÁöÑÈ´òÂ±Ç‰ºöËÆÆÂÆâÊéí„ÄÇ Ë∑≥Ë∑ÉÂàóË°®Â∞±ÊòØÁ±ª‰ºº‰∫éËøôÁßçÂ±ÇÁ∫ßÂà∂ÔºåÊúÄ‰∏ãÈù¢‰∏ÄÂ±ÇÊâÄÊúâÁöÑÂÖÉÁ¥†ÈÉΩ‰ºö‰∏≤Ëµ∑Êù•„ÄÇÁÑ∂ÂêéÊØèÈöîÂá†‰∏™ÂÖÉÁ¥†ÊåëÈÄâÂá∫‰∏Ä‰∏™‰ª£Ë°®Êù•ÔºåÂÜçÂ∞ÜËøôÂá†‰∏™‰ª£Ë°®‰ΩøÁî®Âè¶Â§ñ‰∏ÄÁ∫ßÊåáÈíà‰∏≤Ëµ∑Êù•„ÄÇÁÑ∂ÂêéÂú®Ëøô‰∫õ‰ª£Ë°®ÈáåÂÜçÊåëÂá∫‰∫åÁ∫ß‰ª£Ë°®ÔºåÂÜç‰∏≤Ëµ∑Êù•„ÄÇÊúÄÁªàÂ∞±ÂΩ¢Êàê‰∫ÜÈáëÂ≠óÂ°îÁªìÊûÑ„ÄÇ ÊÉ≥ÊÉ≥‰Ω†ËÄÅÂÆ∂Âú®‰∏ñÁïåÂú∞Âõæ‰∏≠ÁöÑ‰ΩçÁΩÆÔºö‰∫öÊ¥≤‚Äî&gt;‰∏≠ÂõΩ-&gt;ÂÆâÂæΩÁúÅ-&gt;ÂÆâÂ∫ÜÂ∏Ç-&gt;ÊûûÈò≥Âéø-&gt;Ê±§Ê≤üÈïá-&gt;Áî∞Èó¥Êùë-&gt;xxxxÂè∑Ôºå‰πüÊòØËøôÊ†∑‰∏Ä‰∏™Á±ª‰ººÁöÑÁªìÊûÑ„ÄÇ „ÄåË∑≥Ë∑ÉÂàóË°®„Äç‰πãÊâÄ‰ª•„ÄåË∑≥Ë∑É„ÄçÔºåÊòØÂõ†‰∏∫ÂÜÖÈÉ®ÁöÑÂÖÉÁ¥†ÂèØËÉΩ„ÄåË∫´ÂÖºÊï∞ËÅå„ÄçÔºåÊØîÂ¶Ç‰∏äÂõæ‰∏≠Èó¥ÁöÑËøô‰∏™ÂÖÉÁ¥†ÔºåÂêåÊó∂Â§Ñ‰∫é L0„ÄÅL1 Âíå L2 Â±ÇÔºåÂèØ‰ª•Âø´ÈÄüÂú®‰∏çÂêåÂ±ÇÊ¨°‰πãÈó¥ËøõË°å„ÄåË∑≥Ë∑É„Äç„ÄÇ ÂÆö‰ΩçÊèíÂÖ•ÁÇπÊó∂ÔºåÂÖàÂú®È°∂Â±ÇËøõË°åÂÆö‰ΩçÔºåÁÑ∂Âêé‰∏ãÊΩúÂà∞‰∏ã‰∏ÄÁ∫ßÂÆö‰ΩçÔºå‰∏ÄÁõ¥‰∏ãÊΩúÂà∞ÊúÄÂ∫ïÂ±ÇÊâæÂà∞ÂêàÈÄÇÁöÑ‰ΩçÁΩÆÔºåÂ∞ÜÊñ∞ÂÖÉÁ¥†ÊèíËøõÂéª„ÄÇ‰Ω†‰πüËÆ∏‰ºöÈóÆÔºåÈÇ£Êñ∞ÊèíÂÖ•ÁöÑÂÖÉÁ¥†Â¶Ç‰ΩïÊâçÊúâÊú∫‰ºö„ÄåË∫´ÂÖºÊï∞ËÅå„ÄçÂë¢Ôºü Ë∑≥Ë∑ÉÂàóË°®ÈááÂèñ‰∏Ä‰∏™ÈöèÊú∫Á≠ñÁï•Êù•ÂÜ≥ÂÆöÊñ∞ÂÖÉÁ¥†ÂèØ‰ª•ÂÖºËÅåÂà∞Á¨¨Âá†Â±Ç„ÄÇ È¶ñÂÖà L0 Â±ÇËÇØÂÆöÊòØ 100% ‰∫ÜÔºåL1 Â±ÇÂè™Êúâ 50% ÁöÑÊ¶ÇÁéáÔºåL2 Â±ÇÂè™Êúâ 25% ÁöÑÊ¶ÇÁéáÔºåL3 Â±ÇÂè™Êúâ 12.5% ÁöÑÊ¶ÇÁéáÔºå‰∏ÄÁõ¥ÈöèÊú∫Âà∞ÊúÄÈ°∂Â±Ç L31 Â±Ç„ÄÇÁªùÂ§ßÂ§öÊï∞ÂÖÉÁ¥†ÈÉΩËøá‰∏ç‰∫ÜÂá†Â±ÇÔºåÂè™ÊúâÊûÅÂ∞ëÊï∞ÂÖÉÁ¥†ÂèØ‰ª•Ê∑±ÂÖ•Âà∞È°∂Â±Ç„ÄÇÂàóË°®‰∏≠ÁöÑÂÖÉÁ¥†Ë∂äÂ§öÔºåËÉΩÂ§üÊ∑±ÂÖ•ÁöÑÂ±ÇÊ¨°Â∞±Ë∂äÊ∑±ÔºåËÉΩËøõÂÖ•Âà∞È°∂Â±ÇÁöÑÊ¶ÇÁéáÂ∞±‰ºöË∂äÂ§ß„ÄÇ ËøôËøòÊå∫ÂÖ¨Âπ≥ÁöÑÔºåËÉΩ‰∏çËÉΩËøõÂÖ•‰∏≠Â§Æ‰∏çÊòØÈù†ÊãºÁàπÔºåËÄåÊòØÁúãËøêÊ∞î„ÄÇ ÂÖ≥‰∫éË∑≥Ë∑ÉÂàóË°®ÁöÑÂÜÖÈÉ®ÁªìÊûÑÂÆûÁé∞ÔºåËØ∑ÈòÖËØªÁ¨¨ 36 ËäÇ„ÄäÊûÅÂ∫¶Ê∑±ÂØí ‚Äî‚Äî Êé¢Á¥¢„ÄåË∑≥Ë∑ÉÂàóË°®„ÄçÂÜÖÈÉ®ÁªìÊûÑ„Äã &nbsp; ÂÆπÂô®ÂûãÊï∞ÊçÆÁªìÊûÑÁöÑÈÄöÁî®ËßÑÂàô list/set/hash/zset ËøôÂõõÁßçÊï∞ÊçÆÁªìÊûÑÊòØÂÆπÂô®ÂûãÊï∞ÊçÆÁªìÊûÑÔºåÂÆÉ‰ª¨ÂÖ±‰∫´‰∏ãÈù¢‰∏§Êù°ÈÄöÁî®ËßÑÂàôÔºö create if not existsÂ¶ÇÊûúÂÆπÂô®‰∏çÂ≠òÂú®ÔºåÈÇ£Â∞±ÂàõÂª∫‰∏Ä‰∏™ÔºåÂÜçËøõË°åÊìç‰Ωú„ÄÇÊØîÂ¶Ç rpush Êìç‰ΩúÂàöÂºÄÂßãÊòØÊ≤°ÊúâÂàóË°®ÁöÑÔºåRedis Â∞±‰ºöËá™Âä®ÂàõÂª∫‰∏Ä‰∏™ÔºåÁÑ∂ÂêéÂÜç rpush ËøõÂéªÊñ∞ÂÖÉÁ¥†„ÄÇ drop if no elementsÂ¶ÇÊûúÂÆπÂô®ÈáåÂÖÉÁ¥†Ê≤°Êúâ‰∫ÜÔºåÈÇ£‰πàÁ´ãÂç≥Âà†Èô§ÂÖÉÁ¥†ÔºåÈáäÊîæÂÜÖÂ≠ò„ÄÇËøôÊÑèÂë≥ÁùÄ lpop Êìç‰ΩúÂà∞ÊúÄÂêé‰∏Ä‰∏™ÂÖÉÁ¥†ÔºåÂàóË°®Â∞±Ê∂àÂ§±‰∫Ü„ÄÇ &nbsp; ËøáÊúüÊó∂Èó¥ Redis ÊâÄÊúâÁöÑÊï∞ÊçÆÁªìÊûÑÈÉΩÂèØ‰ª•ËÆæÁΩÆËøáÊúüÊó∂Èó¥ÔºåÊó∂Èó¥Âà∞‰∫ÜÔºåRedis ‰ºöËá™Âä®Âà†Èô§Áõ∏Â∫îÁöÑÂØπË±°„ÄÇÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØËøáÊúüÊòØ‰ª•ÂØπË±°‰∏∫Âçï‰ΩçÔºåÊØîÂ¶Ç‰∏Ä‰∏™ hash ÁªìÊûÑÁöÑËøáÊúüÊòØÊï¥‰∏™ hash ÂØπË±°ÁöÑËøáÊúüÔºåËÄå‰∏çÊòØÂÖ∂‰∏≠ÁöÑÊüê‰∏™Â≠ê key„ÄÇ ËøòÊúâ‰∏Ä‰∏™ÈúÄË¶ÅÁâπÂà´Ê≥®ÊÑèÁöÑÂú∞ÊñπÊòØÂ¶ÇÊûú‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤Â∑≤ÁªèËÆæÁΩÆ‰∫ÜËøáÊúüÊó∂Èó¥ÔºåÁÑ∂Âêé‰Ω†Ë∞ÉÁî®‰∫Ü set ÊñπÊ≥ï‰øÆÊîπ‰∫ÜÂÆÉÔºåÂÆÉÁöÑËøáÊúüÊó∂Èó¥‰ºöÊ∂àÂ§±„ÄÇ 12345678910127.0.0.1:6379&gt; set codehole yoyoOK127.0.0.1:6379&gt; expire codehole 600(integer) 1127.0.0.1:6379&gt; ttl codehole(integer) 597127.0.0.1:6379&gt; set codehole yoyoOK127.0.0.1:6379&gt; ttl codehole(integer) -1 &nbsp; ÊÄùËÄÉ &amp; ‰Ωú‰∏ö Â¶ÇÊûú‰Ω†ÊòØ Java Áî®Êà∑ÔºåËØ∑ÂÆö‰πâ‰∏Ä‰∏™Áî®Êà∑‰ø°ÊÅØÁªìÊûÑ‰ΩìÔºåÁÑ∂Âêé‰ΩøÁî® fastjson ÂØπÁî®Êà∑‰ø°ÊÅØÂØπË±°ËøõË°åÂ∫èÂàóÂåñÂíåÂèçÂ∫èÂàóÂåñÔºåÂÜç‰ΩøÁî® Jedis ÂØπ Redis ÁºìÂ≠òÁöÑÁî®Êà∑‰ø°ÊÅØËøõË°åÂ≠òÂíåÂèñ„ÄÇ Â¶ÇÊûú‰Ω†ÊòØ Python Áî®Êà∑Ôºå‰ΩøÁî®ÂÜÖÁΩÆÁöÑ JSON ÂåÖÂ∞±ÂèØ‰ª•‰∫Ü„ÄÇÁÑ∂ÂêéÈÄöËøá redis-py Êù•ÂØπ Redis ÁºìÂ≠òÁöÑÁî®Êà∑‰ø°ÊÅØËøõË°åÂ≠òÂíåÂèñ„ÄÇ ÊÉ≥ÊÉ≥Â¶ÇÊûúË¶ÅÊîπÊàêÁî® hash ÁªìÊûÑÊù•ÁºìÂ≠òÁî®Êà∑‰ø°ÊÅØÔºå‰Ω†ËØ•Â¶Ç‰ΩïÂ∞ÅË£ÖÊØîËæÉÂêàÈÄÇÔºü ÊÉ≥ÊÉ≥Âπ≥Êó∂ËøòÊúâÂì™‰∫õÊåá‰ª§‰Ω†Âπ≥Êó∂Áî®ËøáËÄåÊú¨Â∞èËäÇÊ≤°ÊúâÊèêÂà∞ÁöÑÔºü ÂõûÊÉ≥‰∏Ä‰∏ãÊéòÈáëÁ§æÂå∫ÁöÑÂäüËÉΩÊ®°Âùó‰∏≠ÂàÜÂà´‰ºö‰ΩøÁî®Âà∞Âì™‰∫õÊï∞ÊçÆÁªìÊûÑÔºü &nbsp; Êâ©Â±ïÈòÖËØª „ÄäÂ≠òÁªìÊûÑ‰Ωì‰ø°ÊÅØÂà∞Â∫ïËØ•‰ΩøÁî® hash ËøòÊòØ stringÔºü „Äã]]></content>
      <tags>
        <tag>ËΩ¨Âèë</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[sleep( ) Âíå wait( ) ÁöÑËøô 5 ‰∏™Âå∫Âà´Ôºå‰Ω†Áü•ÈÅìÂá†‰∏™Ôºü]]></title>
    <url>%2F2018%2F09%2F19%2Fthread%2Fsleep(%20)%20%E5%92%8C%20wait(%20)%20%E7%9A%84%E8%BF%99%205%20%E4%B8%AA%E5%8C%BA%E5%88%AB%EF%BC%8C%E4%BD%A0%E7%9F%A5%E9%81%93%E5%87%A0%E4%B8%AA%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[‰ΩúËÄÖÔºöJavaÊäÄÊúØÊ†à Êù•Ê∫êÔºöhttps://mp.weixin.qq.com/s/gvaksKy2ss90bsybCnajpQ sleep(‰ºëÁú†) Âíå wait(Á≠âÂæÖ) ÊñπÊ≥ïÊòØ Java Â§öÁ∫øÁ®ã‰∏≠Â∏∏Áî®ÁöÑ‰∏§‰∏™ÊñπÊ≥ïÔºåÂÆÉ‰ª¨Êúâ‰ªÄ‰πàÂå∫Âà´Âèä‰∏Ä‰∫õËØ•Ê≥®ÊÑèÁöÑÂú∞ÊñπÊúâÂì™‰∫õÂë¢Ôºü‰∏ãÈù¢ÁªôÂ§ßÂÆ∂‰∏Ä‰∏ÄÂàÜËß£„ÄÇ Âå∫Âà´1Ôºö‰ΩøÁî®ÈôêÂà∂‰ΩøÁî® sleep ÊñπÊ≥ïÂèØ‰ª•ËÆ©ËÆ©ÂΩìÂâçÁ∫øÁ®ã‰ºëÁú†ÔºåÊó∂Èó¥‰∏ÄÂà∞ÂΩìÂâçÁ∫øÁ®ãÁªßÁª≠ÂæÄ‰∏ãÊâßË°åÔºåÂú®‰ªª‰ΩïÂú∞ÊñπÈÉΩËÉΩ‰ΩøÁî®Ôºå‰ΩÜÈúÄË¶ÅÊçïËé∑ InterruptedException ÂºÇÂ∏∏„ÄÇ 12345try &#123; Thread.sleep(3000L);&#125; catch (InterruptedException e) &#123; e.printStackTrace();&#125; ËÄå‰ΩøÁî® wait ÊñπÊ≥ïÂàôÂøÖÈ°ªÊîæÂú® synchronized ÂùóÈáåÈù¢ÔºåÂêåÊ†∑ÈúÄË¶ÅÊçïËé∑ InterruptedException ÂºÇÂ∏∏ÔºåÂπ∂‰∏îÈúÄË¶ÅËé∑ÂèñÂØπË±°ÁöÑÈîÅ„ÄÇ 1234567synchronized (lock)&#123; try &#123; lock.wait(); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125;&#125; ËÄå‰∏î wait ËøòÈúÄË¶ÅÈ¢ùÂ§ñÁöÑÊñπÊ≥ï notify/ notifyAll ËøõË°åÂî§ÈÜíÔºåÂÆÉ‰ª¨ÂêåÊ†∑ÈúÄË¶ÅÊîæÂú® synchronized ÂùóÈáåÈù¢Ôºå‰∏îËé∑ÂèñÂØπË±°ÁöÑÈîÅ„ÄÇ„ÄÇ 1234567synchronized (lock) &#123; // ÈöèÊú∫Âî§ÈÜí lock.notify(); // Âî§ÈÜíÂÖ®ÈÉ® lock.notifyAll();&#125; ÂΩìÁÑ∂‰πüÂèØ‰ª•‰ΩøÁî®Â∏¶Êó∂Èó¥ÁöÑ wait(long millis) ÊñπÊ≥ïÔºåÊó∂Èó¥‰∏ÄÂà∞ÔºåÊó†ÈúÄÂÖ∂‰ªñÁ∫øÁ®ãÂî§ÈÜíÔºå‰πü‰ºöÈáçÊñ∞Á´û‰∫âËé∑ÂèñÂØπË±°ÁöÑÈîÅÁªßÁª≠ÊâßË°å„ÄÇ &nbsp; Âå∫Âà´2Ôºö‰ΩøÁî®Âú∫ÊôØsleep ‰∏ÄËà¨Áî®‰∫éÂΩìÂâçÁ∫øÁ®ã‰ºëÁú†ÔºåÊàñËÄÖËΩÆÂæ™ÊöÇÂÅúÊìç‰ΩúÔºåwait ÂàôÂ§öÁî®‰∫éÂ§öÁ∫øÁ®ã‰πãÈó¥ÁöÑÈÄö‰ø°„ÄÇ &nbsp; Âå∫Âà´3ÔºöÊâÄÂ±ûÁ±ªsleep ÊòØ Thread Á±ªÁöÑÈùôÊÄÅÊú¨Âú∞ÊñπÊ≥ïÔºåwait ÂàôÊòØ Object Á±ªÁöÑÊú¨Âú∞ÊñπÊ≥ï„ÄÇ java.lang.Thread#sleep 1public static native void sleep(long millis) throws InterruptedException; java.lang.Object#wait 1public final native void wait(long timeout) throws InterruptedException; ‰∏∫‰ªÄ‰πàË¶ÅËøôÊ†∑ËÆæËÆ°Âë¢Ôºü Âõ†‰∏∫ sleep ÊòØËÆ©ÂΩìÂâçÁ∫øÁ®ã‰ºëÁú†Ôºå‰∏çÊ∂âÂèäÂà∞ÂØπË±°Á±ªÔºå‰πü‰∏çÈúÄË¶ÅËé∑ÂæóÂØπË±°ÁöÑÈîÅÔºåÊâÄ‰ª•ÊòØÁ∫øÁ®ãÁ±ªÁöÑÊñπÊ≥ï„ÄÇwait ÊòØËÆ©Ëé∑ÂæóÂØπË±°ÈîÅÁöÑÁ∫øÁ®ãÂÆûÁé∞Á≠âÂæÖÔºåÂâçÊèêÊòØË¶ÅÊ•öËé∑ÂæóÂØπË±°ÁöÑÈîÅÔºåÊâÄ‰ª•ÊòØÁ±ªÁöÑÊñπÊ≥ï„ÄÇ &nbsp; Âå∫Âà´4ÔºöÈáäÊîæÈîÅ123456789Object lock = new Object();synchronized (lock) &#123; try &#123; lock.wait(3000L); Thread.sleep(2000L); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125;&#125; Â¶Ç‰∏ä‰ª£Á†ÅÊâÄÁ§∫Ôºåwait ÂèØ‰ª•ÈáäÊîæÂΩìÂâçÁ∫øÁ®ãÂØπ lock ÂØπË±°ÈîÅÁöÑÊåÅÊúâÔºåËÄå sleep Âàô‰∏ç‰ºö„ÄÇ &nbsp; Âå∫Âà´5ÔºöÁ∫øÁ®ãÂàáÊç¢sleep ‰ºöËÆ©Âá∫ CPU ÊâßË°åÊó∂Èó¥‰∏îÂº∫Âà∂‰∏ä‰∏ãÊñáÂàáÊç¢ÔºåËÄå wait Âàô‰∏ç‰∏ÄÂÆöÔºåwait ÂêéÂèØËÉΩËøòÊòØÊúâÊú∫‰ºöÈáçÊñ∞Á´û‰∫âÂà∞ÈîÅÁªßÁª≠ÊâßË°åÁöÑ„ÄÇ]]></content>
      <tags>
        <tag>ËΩ¨Âèë</tag>
        <tag>Á∫øÁ®ã</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java Á∫øÁ®ãÊ±†Ê∑±ÂÖ•ÂàÜÊûê]]></title>
    <url>%2F2018%2F09%2F18%2Fthread%2F%E7%BA%BF%E7%A8%8B%E6%B1%A0%2FJava%20%E7%BA%BF%E7%A8%8B%E6%B1%A0%E6%B7%B1%E5%85%A5%E5%88%86%E6%9E%90%2F</url>
    <content type="text"><![CDATA[‰ΩúËÄÖÔºöÁñºËõã‰πã‰∏∏ Êù•Ê∫êÔºöhttps://www.jianshu.com/p/5d5198b434a2 Áª≠‰∏äËäÇ„ÄäJava Á∫øÁ®ãÁ∫øÁ®ãÊ±†ÂàùÊé¢„ÄãÂõõ„ÄÅScheduledThreadPoolExecutorËß£ÊûêScheduledThreadPoolExecutor ÈÄÇÁî®‰∫éÂª∂Êó∂ÊâßË°åÔºåÊàñËÄÖÂë®ÊúüÊÄßÊâßË°åÁöÑ‰ªªÂä°Ë∞ÉÂ∫¶ÔºåScheduledThreadPoolExecutorÂú®ÂÆûÁé∞‰∏äÁªßÊâø‰∫ÜThreadPoolExecutorÔºåÊâÄ‰ª•‰Ω†‰æùÁÑ∂ÂèØ‰ª•Â∞ÜScheduledThreadPoolExecutorÂΩìÊàêThreadPoolExecutorÊù•‰ΩøÁî®Ôºå‰ΩÜÊòØScheduledThreadPoolExecutorÁöÑÂäüËÉΩË¶ÅÂº∫Â§ßÂæóÂ§öÔºåÂõ†‰∏∫ScheduledThreadPoolExecutorÂèØ‰ª•Ê†πÊçÆËÆæÂÆöÁöÑÂèÇÊï∞Êù•Âë®ÊúüÊÄßË∞ÉÂ∫¶ËøêË°åÔºå‰∏ãÈù¢ÁöÑÂõæÁâáÂ±ïÁ§∫‰∫ÜÂõõ‰∏™ÂíåÂë®ÊúüÊÄßÁõ∏ÂÖ≥ÁöÑÊñπÊ≥ïÔºö Âõõ‰∏™ScheduledÊñπÊ≥ï Â¶ÇÊûú‰Ω†ÊÉ≥Âª∂Êó∂‰∏ÄÊÆµÊó∂Èó¥‰πãÂêéËøêË°å‰∏Ä‰∏™RunnableÔºåÈÇ£‰πà‰ΩøÁî®Á¨¨‰∏Ä‰∏™ÊñπÊ≥ï Â¶ÇÊûú‰Ω†ÊÉ≥Âª∂Êó∂‰∏ÄÊÆµÊó∂Èó¥ÁÑ∂ÂêéËøêË°å‰∏Ä‰∏™CallableÔºåÈÇ£‰πà‰ΩøÁî®ÁöÑÁ¨¨‰∫å‰∏™ÊñπÊ≥ï Â¶ÇÊûú‰Ω†ÊÉ≥Ë¶ÅÂª∂Êó∂‰∏ÄÊÆµÊó∂Èó¥ÔºåÁÑ∂ÂêéÊ†πÊçÆËÆæÂÆöÁöÑÂèÇÊï∞Âë®ÊúüÊâßË°åRunnableÔºåÈÇ£‰πàÂèØ‰ª•ÈÄâÊã©Á¨¨‰∏â‰∏™ÂíåÁ¨¨Âõõ‰∏™ÊñπÊ≥ïÔºåÁ¨¨‰∏â‰∏™ÊñπÊ≥ïÂíåÁ¨¨Âõõ‰∏™ÊñπÊ≥ïÁöÑÂå∫Âà´Âú®‰∫éÔºöÁ¨¨‰∏â‰∏™ÊñπÊ≥ï‰∏•Ê†ºÊåâÁÖßËßÑÂàíÁöÑÊó∂Èó¥Ë∑ØÂæÑÊù•ÊâßË°åÔºåÊØîÂ¶ÇÂë®Êúü‰∏∫2ÔºåÂª∂Êó∂‰∏∫0ÔºåÈÇ£‰πàÊâßË°åÁöÑÂ∫èÂàó‰∏∫0Ôºå2Ôºå4Ôºå6Ôºå8‚Ä¶.ÔºåËÄåÁ¨¨Âõõ‰∏™ÊñπÊ≥ïÂ∞ÜÂü∫‰∫é‰∏äÊ¨°ÊâßË°åÊó∂Èó¥Êù•ËßÑÂàí‰∏ãÊ¨°ÁöÑÊâßË°åÔºå‰πüÂ∞±ÊòØÂú®‰∏äÊ¨°ÊâßË°åÂÆåÊàê‰πãÂêéÂÜçÊ¨°ÊâßË°å„ÄÇÊØîÂ¶Ç‰∏äÈù¢ÁöÑÊâßË°åÂ∫èÂàó0Ôºå2Ôºå4Ôºå6Ôºå8‚Ä¶ÔºåÂ¶ÇÊûúÁ¨¨2ÁßíÊ≤°ÊúâË¢´Ë∞ÉÂ∫¶ÊâßË°åÔºåËÄåÂú®Á¨¨‰∏âÁßíÁöÑÊó∂ÂÄôÊâçË¢´Ë∞ÉÂ∫¶ÔºåÈÇ£‰πà‰∏ãÊ¨°ÊâßË°åÁöÑÊó∂Èó¥‰∏çÊòØ4ÔºåËÄåÊòØ5Ôºå‰ª•Ê≠§Á±ªÊé®„ÄÇ ‰∏ãÈù¢Êù•Áúã‰∏Ä‰∏ãËøôÂõõ‰∏™ÊñπÊ≥ïÁöÑ‰∏Ä‰∫õÁªÜËäÇÔºö 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869 public &lt;V&gt; ScheduledFuture&lt;V&gt; schedule(Callable&lt;V&gt; callable, long delay, TimeUnit unit) &#123; if (callable == null || unit == null) throw new NullPointerException(); RunnableScheduledFuture&lt;V&gt; t = decorateTask(callable, new ScheduledFutureTask&lt;V&gt;(callable, triggerTime(delay, unit))); delayedExecute(t); return t; &#125; public ScheduledFuture&lt;?&gt; scheduleAtFixedRate(Runnable command, long initialDelay, long period, TimeUnit unit) &#123; if (command == null || unit == null) throw new NullPointerException(); if (period &lt;= 0) throw new IllegalArgumentException(); ScheduledFutureTask&lt;Void&gt; sft = new ScheduledFutureTask&lt;Void&gt;(command, null, triggerTime(initialDelay, unit), unit.toNanos(period)); RunnableScheduledFuture&lt;Void&gt; t = decorateTask(command, sft); sft.outerTask = t; delayedExecute(t); return t; &#125;public ScheduledFuture&lt;?&gt; scheduleAtFixedRate(Runnable command, long initialDelay, long period, TimeUnit unit) &#123; if (command == null || unit == null) throw new NullPointerException(); if (period &lt;= 0) throw new IllegalArgumentException(); ScheduledFutureTask&lt;Void&gt; sft = new ScheduledFutureTask&lt;Void&gt;(command, null, triggerTime(initialDelay, unit), unit.toNanos(period)); RunnableScheduledFuture&lt;Void&gt; t = decorateTask(command, sft); sft.outerTask = t; delayedExecute(t); return t; &#125; public ScheduledFuture&lt;?&gt; scheduleWithFixedDelay(Runnable command, long initialDelay, long delay, TimeUnit unit) &#123; if (command == null || unit == null) throw new NullPointerException(); if (delay &lt;= 0) throw new IllegalArgumentException(); ScheduledFutureTask&lt;Void&gt; sft = new ScheduledFutureTask&lt;Void&gt;(command, null, triggerTime(initialDelay, unit), unit.toNanos(-delay)); RunnableScheduledFuture&lt;Void&gt; t = decorateTask(command, sft); sft.outerTask = t; delayedExecute(t); return t; &#125; ÈÄöËøá‰∏äÈù¢ÁöÑ‰ª£Á†ÅÊàë‰ª¨ÂèØ‰ª•ÂèëÁé∞ÔºåÂâç‰∏§‰∏™ÊñπÊ≥ïÊòØÁ±ª‰ººÁöÑÔºåÂêé‰∏§‰∏™ÊñπÊ≥ï‰πüÊòØÁ±ª‰ººÁöÑ„ÄÇÂâç‰∏§‰∏™ÊñπÊ≥ïÂ±û‰∫é‰∏ÄÊ¨°ÊÄßË∞ÉÂ∫¶ÔºåÊâÄ‰ª•periodÈÉΩ‰∏∫0ÔºåÂå∫Âà´Âú®‰∫éÂèÇÊï∞‰∏çÂêåÔºå‰∏Ä‰∏™ÊòØRunnableÔºåËÄå‰∏Ä‰∏™ÊòØCallableÔºåÂèØÁ¨ëÁöÑÊòØÔºåÊúÄÂêéÈÉΩÂèò‰∏∫‰∫ÜCallable‰∫ÜÔºåËßÅ‰∏ãÈù¢ÁöÑÊûÑÈÄ†ÂáΩÊï∞Ôºö 1234public FutureTask(Runnable runnable, V result) &#123; this.callable = Executors.callable(runnable, result); this.state = NEW; // ensure visibility of callable&#125; ÂØπ‰∫éÂêé‰∏§‰∏™ÊñπÊ≥ïÔºåÂå∫Âà´‰ªÖ‰ªÖÂú®‰∫éperiodÁöÑÔºåscheduleWithFixedDelayÂØπÂèÇÊï∞ËøõË°å‰∫ÜÊìç‰ΩúÔºåÂ∞ÜÂéüÊù•ÁöÑÊó∂Èó¥Âèò‰∏∫Ë¥üÊï∞‰∫ÜÔºåËÄåÂêéÈù¢Âú®ËÆ°ÁÆó‰∏ãÊ¨°Ë¢´Ë∞ÉÂ∫¶ÁöÑÊó∂Èó¥ÁöÑÊó∂ÂÄô‰ºöÊ†πÊçÆËøô‰∏™ÂèÇÊï∞ÁöÑÊ≠£Ë¥üÂÄºÊù•ÂàÜÂà´Â§ÑÁêÜÔºåÊ≠£Êï∞‰ª£Ë°®scheduleAtFixedRateÔºåËÄåË¥üÊï∞‰ª£Ë°®‰∫ÜscheduleWithFixedDelay„ÄÇ ‰∏Ä‰∏™ÈúÄË¶ÅË¢´Êàë‰ª¨Ê≥®ÊÑèÁöÑÁªÜËäÇÊòØÔºå‰ª•‰∏äÂõõ‰∏™ÊñπÊ≥ïÊúÄÂêéÈÉΩ‰ºöË∞ÉÁî®‰∏Ä‰∏™ÊñπÊ≥ï: delayedExecute(t)Ôºå‰∏ãÈù¢Áúã‰∏Ä‰∏ãËøô‰∏™ÊñπÊ≥ïÔºö 12345678910111213private void delayedExecute(RunnableScheduledFuture&lt;?&gt; task) &#123; if (isShutdown()) reject(task); else &#123; super.getQueue().add(task); if (isShutdown() &amp;&amp; !canRunInCurrentRunState(task.isPeriodic()) &amp;&amp; remove(task)) task.cancel(false); else ensurePrestart(); &#125;&#125; Â§ßÊ¶ÇÁöÑÊÑèÊÄùÂ∞±ÊòØÂÖàÂà§Êñ≠Á∫øÁ®ãÊ±†ÊòØÂê¶Ë¢´ÂÖ≥Èó≠‰∫ÜÔºåÂ¶ÇÊûúË¢´ÂÖ≥Èó≠‰∫ÜÔºåÂàôÊãíÁªù‰ªªÂä°ÁöÑÊèê‰∫§ÔºåÂê¶ÂàôÂ∞Ü‰ªªÂä°Âä†ÂÖ•Âà∞‰ªªÂä°ÈòüÂàó‰∏≠ÂéªÁ≠âÂæÖË¢´Ë∞ÉÂ∫¶ÊâßË°å„ÄÇÊúÄÂêéÁöÑensurePrestartÁöÑÊÑèÊÄùÊòØÈúÄË¶ÅÁ°Æ‰øùÁ∫øÁ®ãÊ±†Â∑≤ÁªèË¢´ÂêØÂä®Ëµ∑Êù•‰∫Ü„ÄÇ‰∏ãÈù¢ÊòØËøô‰∏™ÊñπÊ≥ïÔºö 1234567void ensurePrestart() &#123; int wc = workerCountOf(ctl.get()); if (wc &lt; corePoolSize) addWorker(null, true); else if (wc == 0) addWorker(null, false);&#125; ‰∏ªË¶ÅÊòØÂ¢ûÂä†‰∫Ü‰∏Ä‰∏™Ê≤°Êúâ‰ªªÂä°ÁöÑworkerÔºåÊúâ‰ªÄ‰πàÁî®Âë¢ÔºüÊàë‰ª¨ËøòËÆ∞ÂæóWorkerÁöÑÈÄªËæëÂêóÔºüaddWorkerÊñπÊ≥ïÁöÑÊâßË°åÔºå‰ºöËß¶ÂèëWorkerÁöÑrunÊñπÊ≥ïÁöÑÊâßË°åÔºåÁÑ∂ÂêérunWorkerÊñπÊ≥ïÂ∞±‰ºöË¢´ÊâßË°åÔºåËÄårunWorkerÊñπÊ≥ïÊòØÂæ™ÁéØ‰ªéworkQueue‰∏≠Âèñ‰ªªÂä°ÊâßË°åÁöÑÔºåÊâÄ‰ª•Á°Æ‰øùÁ∫øÁ®ãÊ±†Ë¢´ÂêØÂä®Ëµ∑Êù•ÊòØÈáçË¶ÅÁöÑÔºåËÄåÂè™ÈúÄË¶ÅÁÆÄÂçïÁöÑÊâßË°åaddWorker‰æø‰ºöËß¶ÂèëÁ∫øÁ®ãÊ±†ÁöÑÂêØÂä®ÊµÅÁ®ã„ÄÇÂØπ‰∫éË∞ÉÂ∫¶Á∫øÁ®ãÊ±†Êù•ËØ¥ÔºåÂè™Ë¶ÅÊâßË°å‰∫ÜaddWorkerÊñπÊ≥ïÔºåÈÇ£‰πàÁ∫øÁ®ãÊ±†Â∞±‰ºö‰∏ÄÁõ¥Âú®ÂêéÂè∞Âë®ÊúüÊÄßÁöÑË∞ÉÂ∫¶ÊâßË°å‰ªªÂä°„ÄÇ Âà∞Ê≠§Ôºå‰ºº‰πéÊàë‰ª¨ËøòÊòØÊ≤°ÊúâÈóπÊòéÁôΩScheduledThreadPoolExecutorÊòØÂ¶Ç‰ΩïÂÆûÁé∞Âë®ÊúüÊÄßÁöÑÔºå‰∏äÈù¢ËÆ≤Âà∞Âõõ‰∏™scheduledÊñπÊ≥ïÊó∂ÔºåÊàë‰ª¨Ê≤°ÊúâÊèê‰∏Ä‰∏™ÈáçË¶ÅÁöÑÁ±ªÔºöScheduledFutureTaskÔºåÂØπÔºåÊâÄÊúâÁ•ûÂ•áÁöÑ‰∫ãÊÉÖÂ∞Ü‰ºöÂèëÁîüÂú®Ëøô‰∏™Á±ª‰∏≠Ôºå‰∏ãÈù¢Êù•ÂàÜÊûê‰∏Ä‰∏ãËøô‰∏™Á±ª„ÄÇ ScheduledFutureTaskÁ±ªÂõæ Áúã‰∏äÈù¢ÁöÑÁ±ªÂõæÔºåË≤å‰ººËøô‰∏™Á±ªÈùûÂ∏∏Â§çÊùÇÔºåËøòÂ•ΩÔºåÊàë‰ª¨ÂèëÁé∞‰ªñÂÆûÁé∞‰∫ÜRunnableÊé•Âè£ÔºåÈÇ£‰πàÂøÖÁÑ∂‰ºöÊúâ‰∏Ä‰∏™runÊñπÊ≥ïÔºåËÄåËøô‰∏™runÊñπÊ≥ïÂøÖÁÑ∂ÊòØÊï¥‰∏™Á±ªÁöÑÊ†∏ÂøÉÔºå‰∏ãÈù¢Êù•Áúã‰∏Ä‰∏ãËøô‰∏™runÊñπÊ≥ïÁöÑÂÜÖÂÆπÔºö 123456789101112 public void run() &#123; boolean periodic = isPeriodic(); if (!canRunInCurrentRunState(periodic)) cancel(false); else if (!periodic) ScheduledFutureTask.super.run(); else if (ScheduledFutureTask.super.runAndReset()) &#123; setNextRunTime(); reExecutePeriodic(outerTask); &#125; &#125;&#125; È¶ñÂÖàÔºåÂà§Êñ≠ÊòØÂê¶ÊòØÂë®ÊúüÊÄßÁöÑ‰ªªÂä°ÔºåÂ¶ÇÊûú‰∏çÊòØÔºåÂàôÁõ¥Êé•ÊâßË°åÔºà‰∏ÄÊ¨°ÊÄßÔºâÔºåÂê¶ÂàôÊâßË°åÔºåÁÑ∂ÂêéËÆæÁΩÆ‰∏ãÊ¨°ÊâßË°åÁöÑÊó∂Èó¥ÔºåÁÑ∂ÂêéÈáçÊñ∞Ë∞ÉÂ∫¶ÔºåÁ≠âÂæÖ‰∏ãÊ¨°ÊâßË°å„ÄÇËøôÈáåÊúâ‰∏Ä‰∏™ÊñπÊ≥ïÈúÄË¶ÅÊ≥®ÊÑèÔºå‰πüÂ∞±ÊòØsetNextRunTimeÔºå‰∏äÈù¢Êàë‰ª¨ÊèêÂà∞scheduleAtFixedRateÂíåscheduleWithFixedDelayÂú®‰º†ÈÄíÂèÇÊï∞Êó∂‰∏ç‰∏ÄÊ†∑ÔºåÂêéËÄÖÂ∞ÜdelayÂÄºÂèò‰∏∫‰∫ÜË¥üÊï∞ÔºåÊâÄ‰ª•‰∏ãÈù¢ÁöÑÂ§ÑÁêÜÊ≠£Â•ΩÂç∞ËØÅ‰∫ÜÂâçÊñáÊâÄËø∞„ÄÇ 1234567private void setNextRunTime() &#123; long p = period; if (p &gt; 0) time += p; else time = triggerTime(-p);&#125; ‰∏ãÈù¢Êù•Áúã‰∏Ä‰∏ãreExecutePeriodicÊñπÊ≥ïÊòØÂ¶Ç‰ΩïÂÅöÁöÑÔºå‰ªñÁöÑÁõÆÊ†áÊòØÂ∞Ü‰ªªÂä°ÂÜçÊ¨°Ë¢´Ë∞ÉÂ∫¶ÊâßË°åÔºå‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÂ±ïÁ§∫‰∫ÜËøô‰∏™ÂäüËÉΩÁöÑÂÆûÁé∞Ôºö 123456789void reExecutePeriodic(RunnableScheduledFuture&lt;?&gt; task) &#123; if (canRunInCurrentRunState(true)) &#123; super.getQueue().add(task); if (!canRunInCurrentRunState(true) &amp;&amp; remove(task)) task.cancel(false); else ensurePrestart(); &#125;&#125; ÂèØ‰ª•ÁúãÂà∞ÔºåËøô‰∏™ÊñπÊ≥ïÂ∞±ÊòØÂ∞ÜÊàë‰ª¨ÁöÑ‰ªªÂä°ÂÜçÊ¨°ÊîæÂà∞‰∫ÜworkQueueÈáåÈù¢ÔºåÈÇ£Ëøô‰∏™ÂèÇÊï∞ÊòØ‰ªÄ‰πàÔºüÂú®‰∏äÈù¢ÁöÑrunÊñπÊ≥ï‰∏≠Êàë‰ª¨Ë∞ÉÁî®‰∫ÜreExecutePeriodicÊñπÊ≥ïÔºåÂèÇÊï∞‰∏∫outerTaskÔºåËÄåËøô‰∏™ÂèòÈáèÊòØ‰ªÄ‰πàÔºüÁúã‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÔºö 12/** The actual task to be re-enqueued by reExecutePeriodic */RunnableScheduledFuture&lt;V&gt; outerTask = this; Ëøô‰∏™ÂèòÈáèÊåáÂêë‰∫ÜËá™Â∑±ÔºåËÄåthisÁöÑÁ±ªÂûãÊòØ‰ªÄ‰πàÔºüÊòØScheduledFutureTaskÔºå‰πüÂ∞±ÊòØÂèØ‰ª•Ë¢´Ë∞ÉÂ∫¶ÁöÑtaskÔºåËøôÊ†∑Â∞±ÂÆûÁé∞‰∫ÜÂæ™ÁéØÊâßË°å‰ªªÂä°‰∫Ü„ÄÇ ‰∏äÈù¢ÁöÑÂàÜÊûêÂ∑≤ÁªèÂà∞‰∫ÜÂæ™ÁéØÊâßË°åÔºå‰ΩÜÊòØScheduledThreadPoolExecutorÁöÑÂäüËÉΩÊòØÂë®ÊúüÊÄßÊâßË°åÔºåÊâÄ‰ª•Êàë‰ª¨Êé•ÁùÄÂàÜÊûêScheduledThreadPoolExecutorÊòØÂ¶Ç‰ΩïÊ†πÊçÆÊàë‰ª¨ÁöÑÂèÇÊï∞Ëµ∞Ëµ∞ÂÅúÂÅúÁöÑ„ÄÇËøô‰∏™Êó∂ÂÄôÔºåÊòØÂ∫îËØ•Áúã‰∏Ä‰∏ãScheduledThreadPoolExecutorÁöÑÊûÑÈÄ†ÂáΩÊï∞‰∫ÜÔºåÊàë‰ª¨Êù•Áúã‰∏Ä‰∏™ÊúÄÁÆÄÂçïÁöÑÊûÑÈÄ†ÂáΩÊï∞Ôºö 1234public ScheduledThreadPoolExecutor(int corePoolSize) &#123; super(corePoolSize, Integer.MAX_VALUE, 0, NANOSECONDS, new DelayedWorkQueue());&#125; Êàë‰ª¨Áü•ÈÅìScheduledThreadPoolExecutorÁöÑÁà∂Á±ªÊòØThreadPoolExecutorÔºåÊâÄ‰ª•ËøôÈáåÁöÑsuperÂÖ∂ÂÆûÊòØThreadPoolExecutorÁöÑÊûÑÈÄ†ÂáΩÊï∞ÔºåÊàë‰ª¨ÂèëÁé∞ÂÖ∂‰∏≠Êúâ‰∏Ä‰∏™ÂèÇÊï∞DelayedWorkQueueÔºåÁúãÂêçÂ≠óË≤å‰ººÊòØ‰∏Ä‰∏™Âª∂ËøüÈòüÂàóÁöÑÊ†∑Â≠êÔºåËøõ‰∏ÄÊ≠•Ë∑üË∏™‰ª£Á†ÅÔºåÂèëÁé∞‰∫Ü‰∏ãÈù¢ÁöÑ‰∏ÄË°å‰ª£Á†ÅÔºàÊûÑÈÄ†ÂáΩÊï∞‰∏≠ÔºâÔºö 1this.workQueue = workQueue; ÊâÄ‰ª•Âú®ScheduledThreadPoolExecutor‰∏≠ÔºåworkQueueÊòØ‰∏Ä‰∏™DelayedWorkQueueÁ±ªÂûãÁöÑÈòüÂàóÔºåÊàë‰ª¨ÊöÇ‰∏îËÆ§‰∏∫DelayedWorkQueueÊòØ‰∏ÄÁßçÂÖ∑Â§áÂª∂ËøüÂäüËÉΩÁöÑÈòüÂàóÂêßÔºåÈÇ£‰πàÔºåÂà∞Ê≠§Êàë‰ª¨‰æøÂèØ‰ª•ÊÉ≥ÊòéÁôΩ‰∫ÜÔºå‰∏äÈù¢ÁöÑÂàÜÊûêÊàë‰ª¨ÊòéÁôΩ‰∫ÜScheduledThreadPoolExecutorÊòØÂ¶Ç‰ΩïÂæ™ÁéØÊâßË°å‰ªªÂä°ÁöÑÔºåËÄåËøôÈáåÊàë‰ª¨ÊòéÁôΩ‰∫ÜScheduledThreadPoolExecutor‰ΩøÁî®DelayedWorkQueueÊù•ËææÂà∞Âª∂ËøüÁöÑÁõÆÊ†áÔºåÊâÄ‰ª•ÁªÑÂêàËµ∑Êù•ÔºåÂ∞±ÂèØ‰ª•ÂÆûÁé∞ScheduledThreadPoolExecutorÂë®ÊúüÊÄßÊâßË°åÁöÑÁõÆÊ†á„ÄÇ‰∏ãÈù¢Êàë‰ª¨Êù•Áúã‰∏Ä‰∏ãDelayedWorkQueueÊòØÂ¶Ç‰ΩïÂÅöÂà∞Âª∂ËøüÁöÑÂêßÔºå‰∏äÊñá‰∏≠ÊèêÂà∞‰∏Ä‰∏™ÊñπÊ≥ï:getTaskÔºåËøô‰∏™ÊñπÊ≥ïÁöÑ‰ΩúÁî®ÊòØ‰ªéworkQueue‰∏≠ÂèñÂá∫‰ªªÂä°Êù•ÊâßË°åÔºåËÄåÂú®ScheduledThreadPoolExecutorÈáåÈù¢ÔºågetTaskÊñπÊ≥ïÊòØ‰ªéDelayedWorkQueue‰∏≠Âèñ‰ªªÂä°ÁöÑÔºåËÄåÂèñ‰ªªÂä°Êó†Èùû‰∏§‰∏™ÊñπÊ≥ï:pollÊàñËÄÖtakeÔºå‰∏ãÈù¢Êàë‰ª¨ÂØπDelayedWorkQueueÁöÑtakeÊñπÊ≥ïÊù•ÂàÜÊûê‰∏Ä‰∏ãÔºö 123456789101112131415161718192021222324252627282930313233public RunnableScheduledFuture&lt;?&gt; take() throws InterruptedException &#123; final ReentrantLock lock = this.lock; lock.lockInterruptibly(); try &#123; for (;;) &#123; RunnableScheduledFuture&lt;?&gt; first = queue[0]; if (first == null) available.await(); else &#123; long delay = first.getDelay(NANOSECONDS); if (delay &lt;= 0) return finishPoll(first); first = null; // don't retain ref while waiting if (leader != null) available.await(); else &#123; Thread thisThread = Thread.currentThread(); leader = thisThread; try &#123; available.awaitNanos(delay); &#125; finally &#123; if (leader == thisThread) leader = null; &#125; &#125; &#125; &#125; &#125; finally &#123; if (leader == null &amp;&amp; queue[0] != null) available.signal(); lock.unlock(); &#125; &#125; Âú®forÂæ™ÁéØÈáåÈù¢ÔºåÈ¶ñÂÖà‰ªéqueue‰∏≠Ëé∑ÂèñÁ¨¨‰∏Ä‰∏™‰ªªÂä°ÔºåÁÑ∂Âêé‰ªé‰ªªÂä°‰∏≠ÂèñÂá∫Âª∂ËøüÊó∂Èó¥ÔºåËÄåÂêé‰ΩøÁî®availableÂèòÈáèÊù•ÂÆûÁé∞Âª∂ËøüÊïàÊûú„ÄÇËøôÈáåÈù¢ÈúÄË¶ÅÂá†‰∏™ÁÇπÈúÄË¶ÅÊé¢Á¥¢‰∏Ä‰∏ãÔºö Ëøô‰∏™queueÊòØ‰ªÄ‰πà‰∏úË•øÔºü Âª∂ËøüÊó∂Èó¥ÁöÑÊù•ÈæôÂéªËÑâÔºü availableÂèòÈáèÁöÑÊù•ÈæôÂéªËÑâÔºü ÂØπ‰∫éÁ¨¨‰∏Ä‰∏™ÈóÆÈ¢òÔºåÁúã‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÔºö 12private RunnableScheduledFuture&lt;?&gt;[] queue = new RunnableScheduledFuture&lt;?&gt;[INITIAL_CAPACITY]; ÂÆÉÊòØ‰∏Ä‰∏™RunnableScheduledFutureÁ±ªÂûãÁöÑÊï∞ÁªÑÔºå‰∏ãÈù¢ÊòØRunnableScheduledFutureÁ±ªÁöÑÁ±ªÂÖ≥Á≥ªÂõæÔºö RunnableScheduledFutureÁ±ªÂÖ≥Á≥ª Êï∞ÁªÑÈáåÈù¢‰øùÂ≠ò‰∫ÜÊàë‰ª¨ÁöÑRunnableScheduledFutureÔºåÂØπqueueÁöÑÊìç‰ΩúÔºå‰∏ªË¶ÅÊù•Áúã‰∏Ä‰∏ãÂ¢ûÂä†ÂÖÉÁ¥†ÂíåÊ∂àË¥πÂÖÉÁ¥†ÁöÑÊìç‰Ωú„ÄÇÈ¶ñÂÖàÔºåÂÅáËÆæ‰ΩøÁî®addÊñπÊ≥ïÊù•Â¢ûÂä†RunnableScheduledFutureÂà∞queueÔºåË∞ÉÁî®ÁöÑÈìæË∑ØÂ¶Ç‰∏ãÔºö 12345678910111213141516171819202122232425262728293031public boolean add(Runnable e) &#123; return offer(e);&#125; public boolean offer(Runnable x) &#123; if (x == null) throw new NullPointerException(); RunnableScheduledFuture&lt;?&gt; e = (RunnableScheduledFuture&lt;?&gt;)x; final ReentrantLock lock = this.lock; lock.lock(); try &#123; int i = size; if (i &gt;= queue.length) grow(); size = i + 1; if (i == 0) &#123; queue[0] = e; setIndex(e, 0); &#125; else &#123; siftUp(i, e); &#125; if (queue[0] == e) &#123; leader = null; available.signal(); &#125; &#125; finally &#123; lock.unlock(); &#125; return true;&#125; Ëß£Èáä‰∏Ä‰∏ãÔºåaddÊñπÊ≥ïÁõ¥Êé•ËΩ¨Âà∞‰∫ÜofferÊñπÊ≥ïÔºåËØ•ÊñπÊ≥ï‰∏≠ÔºåÈ¶ñÂÖàÂà§Êñ≠Êï∞ÁªÑÁöÑÂÆπÈáèÊòØÂê¶Ë∂≥Â§üÔºåÂ¶ÇÊûú‰∏çÂ§üÂàôgrowÔºåÂ¢ûÈïøÁöÑÁ≠ñÁï•Â¶Ç‰∏ãÔºö 1int newCapacity = oldCapacity + (oldCapacity &gt;&gt; 1); // grow 50% ÊØèÊ¨°Â¢ûÈïø50%ÔºåÂÖ•Êàè‰∏ãÂéª„ÄÇÂ¢ûÈïøÂÆåÊàêÂêéÔºåÂ¶ÇÊûúËøôÊòØÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÔºåÂàôÊîæÂú®ÂùêÊ†á‰∏∫0ÁöÑ‰ΩçÁΩÆÔºåÂê¶ÂàôÔºå‰ΩøÁî®siftUpÊìç‰ΩúÔºå‰∏ãÈù¢ÊòØËØ•ÊñπÊ≥ïÁöÑÂÜÖÂÆπÔºö 12345678910111213private void siftUp(int k, RunnableScheduledFuture&lt;?&gt; key) &#123; while (k &gt; 0) &#123; int parent = (k - 1) &gt;&gt;&gt; 1; RunnableScheduledFuture&lt;?&gt; e = queue[parent]; if (key.compareTo(e) &gt;= 0) break; queue[k] = e; setIndex(e, k); k = parent; &#125; queue[k] = key; setIndex(key, k);&#125; Ëøô‰∏™Êï∞ÁªÑÂÆûÁé∞‰∫ÜÂ†ÜËøôÁßçÊï∞ÊçÆÁªìÊûÑÔºå‰ΩøÁî®ÂØπË±°ÊØîËæÉÂ∞ÜÊúÄÈúÄË¶ÅË¢´Ë∞ÉÂ∫¶ÊâßË°åÁöÑRunnableScheduledFutureÊîæÂà∞Êï∞ÁªÑÁöÑÂâçÈù¢ÔºåËÄåËøôÂæóÂäõ‰∫écompareToÊñπÊ≥ïÔºå‰∏ãÈù¢ÊòØRunnableScheduledFutureÁ±ªÁöÑcompareToÊñπÊ≥ïÁöÑÂÆûÁé∞Ôºå‰∏ªË¶ÅÊòØÈÄöËøáÂª∂ËøüÊó∂Èó¥Êù•ÂÅöÊØîËæÉ„ÄÇ 123456789101112131415161718public int compareTo(Delayed other) &#123; if (other == this) // compare zero if same object return 0; if (other instanceof ScheduledFutureTask) &#123; ScheduledFutureTask&lt;?&gt; x = (ScheduledFutureTask&lt;?&gt;)other; long diff = time - x.time; if (diff &lt; 0) return -1; else if (diff &gt; 0) return 1; else if (sequenceNumber &lt; x.sequenceNumber) return -1; else return 1; &#125; long diff = getDelay(NANOSECONDS) - other.getDelay(NANOSECONDS); return (diff &lt; 0) ? -1 : (diff &gt; 0) ? 1 : 0;&#125; ‰∏äÈù¢ÊòØÁîü‰∫ßÂÖÉÁ¥†Ôºå‰∏ãÈù¢Êù•Áúã‰∏Ä‰∏ãÊ∂àË¥πÊï∞ÊçÆ„ÄÇÂú®‰∏äÈù¢Êàë‰ª¨ÊèêÂà∞ÁöÑtakeÊñπÊ≥ï‰∏≠Ôºå‰ΩøÁî®‰∫Ü‰∏Ä‰∏™ÊñπÊ≥ïÂ¶Ç‰∏ãÔºö 123456789private RunnableScheduledFuture&lt;?&gt; finishPoll(RunnableScheduledFuture&lt;?&gt; f) &#123; int s = --size; RunnableScheduledFuture&lt;?&gt; x = queue[s]; queue[s] = null; if (s != 0) siftDown(0, x); setIndex(f, -1); return f;&#125; Ëøô‰∏™ÊñπÊ≥ï‰∏≠Ë∞ÉÁî®‰∫Ü‰∏Ä‰∏™ÊñπÊ≥ïsiftDownÔºåËøô‰∏™ÊñπÊ≥ïÂ¶Ç‰∏ãÔºö 1234567891011121314151617private void siftDown(int k, RunnableScheduledFuture&lt;?&gt; key) &#123; int half = size &gt;&gt;&gt; 1; while (k &lt; half) &#123; int child = (k &lt;&lt; 1) + 1; RunnableScheduledFuture&lt;?&gt; c = queue[child]; int right = child + 1; if (right &lt; size &amp;&amp; c.compareTo(queue[right]) &gt; 0) c = queue[child = right]; if (key.compareTo(c) &lt;= 0) break; queue[k] = c; setIndex(c, k); k = child; &#125; queue[k] = key; setIndex(key, k);&#125; ÂØπÂÖ∂ÁöÑËß£ÈáäÂ∞±ÊòØÔºö 1Replaces first element with last and sifts it down. Call only when holding lock. ÊÄªÁªì‰∏Ä‰∏ãÔºåÂΩìÊàë‰ª¨ÂêëqueueÊèíÂÖ•‰ªªÂä°ÁöÑÊó∂ÂÄôÔºå‰ºöÂèëÁîüsiftUpÊñπÊ≥ïÁöÑÊâßË°åÔºåËøô‰∏™Êó∂ÂÄô‰ºöÊää‰ªªÂä°Â∞ΩÈáèÂæÄÊ†πÈÉ®ÁßªÂä®ÔºåËÄåÂΩìÊàë‰ª¨ÂÆåÊàê‰ªªÂä°Ë∞ÉÂ∫¶‰πãÂêéÔºå‰ºöÂèëÁîüsiftDownÊñπÊ≥ïÁöÑÊâßË°åÔºå‰∏ésiftUpÁõ∏ÂèçÔºåsiftDownÊñπÊ≥ï‰ºöÂ∞Ü‰ªªÂä°Â∞ΩÈáèÁßªÂä®Âà∞queueÁöÑÊú´Â∞æ„ÄÇÊÄª‰πãÔºåÂ§ßÊ¶ÇÁöÑÊÑèÊÄùÂ∞±ÊòØqueueÈÄöËøácompareToÂÆûÁé∞‰∫ÜÁ±ª‰ºº‰∫é‰ºòÂÖàÁ∫ßÈòüÂàóÁöÑÂäüËÉΩ„ÄÇ ‰∏ãÈù¢Êàë‰ª¨Êù•Áúã‰∏Ä‰∏ãÁ¨¨‰∫å‰∏™ÈóÆÈ¢òÔºöÂª∂ËøüÊó∂Èó¥ÁöÑÊù•ÈæôÂéªËÑâ„ÄÇÂú®‰∏äÈù¢ÁöÑtakeÊñπÊ≥ïÈáåÈù¢ÔºåÈ¶ñÂÖàËé∑Âèñ‰∫ÜdelayÔºåÁÑ∂ÂêéÂÜç‰ΩøÁî®availableÊù•ÂÅöÂª∂ËøüÊïàÊûúÔºåÈÇ£Ëøô‰∏™delay‰ªéÂì™ÈáåÊù•ÁöÑÂë¢ÔºüÈÄöËøá‰∏äÈù¢ÁöÑÁ±ªÂõæRunnableScheduledFutureÁöÑÁ±ªÂõæÊàë‰ª¨Áü•ÈÅìÔºåRunnableScheduledFutureÁ±ªÂÆûÁé∞‰∫ÜDelayedÊé•Âè£ÔºåËÄåDelayedÊé•Âè£ÈáåÈù¢ÁöÑÂîØ‰∏ÄÊñπÊ≥ïÊòØgetDelayÔºåÊàë‰ª¨Âà∞RunnableScheduledFutureÈáåÈù¢Áúã‰∏Ä‰∏ãËøô‰∏™ÊñπÊ≥ïÁöÑÂÖ∑‰ΩìÂÆûÁé∞Ôºö 123public long getDelay(TimeUnit unit) &#123; return unit.convert(time - now(), NANOSECONDS); &#125; timeÊòØÊàë‰ª¨ËÆæÂÆöÁöÑ‰∏ãÊ¨°ÊâßË°åÁöÑÊó∂Èó¥ÔºåÊâÄ‰ª•Âª∂ËøüÂ∞±ÊòØ(time - now())ÔºåÊ≤°ÊØõÁóÖÔºÅ Á¨¨‰∏â‰∏™ÈóÆÈ¢òÔºöavailableÂèòÈáèÁöÑÊù•ÈæôÂéªËÑâÔºåËá≥‰∫éËøô‰∏™ÈóÆÈ¢òÔºåÊàë‰ª¨Áúã‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÔºö 12345/** * Condition signalled when a newer task becomes available at the * head of the queue or a new thread may need to become leader. */private final Condition available = lock.newCondition(); ËøôÊòØ‰∏Ä‰∏™Êù°‰ª∂ÂèòÈáèÔºåtakeÊñπÊ≥ïÈáåÈù¢‰ΩøÁî®Ëøô‰∏™ÂèòÈáèÊù•ÂÅöÂª∂ËøüÊïàÊûú„ÄÇConditionÂèØ‰ª•Âú®Â§ö‰∏™Á∫øÁ®ãÈó¥ÂÅöÂêåÊ≠•ÂçèË∞ÉÂ∑•‰ΩúÔºåÊõ¥‰∏∫ÂÖ∑‰ΩìÁªÜËá¥ÁöÑÂÖ≥‰∫éConditionÁöÑÂÜÖÂÆπÔºåÂèØ‰ª•ÂèÇËÄÉÊõ¥Â§öÁöÑËµÑÊñôÊù•Â≠¶‰π†ÔºåÊú¨ÊñáÂØπÊ≠§Áü•ËØÜÁÇπÁÇπÂà∞‰∏∫Ê≠¢„ÄÇ Âà∞Ê≠§‰∏∫Ê≠¢ÔºåÊàë‰ª¨Ê¢≥ÁêÜ‰∫ÜScheduledThreadPoolExecutorÊòØÂ¶Ç‰ΩïÂÆûÁé∞Âë®ÊúüÊÄßË∞ÉÂ∫¶ÁöÑÔºåÈ¶ñÂÖàÂàÜÊûê‰∫ÜÂÆÉÁöÑÂæ™ÁéØÊÄßÔºåÁÑ∂ÂêéÂàÜÊûê‰∫ÜÂÆÉÁöÑÂª∂ËøüÊïàÊûúÔºåÊú¨ÊñáÂà∞Ê≠§‰πüÂ∞±ÁªìÊùü‰∫ÜÔºåÂØπ‰∫éÁ∫øÁ®ãÊ±†ÁöÑÂ≠¶‰π†Áé∞Âú®ÊâçÂàöÂàöËµ∑Ê≠•ÔºåÈúÄË¶ÅÊõ¥Â§öÊõ¥‰∏ì‰∏öÁöÑÁü•ËØÜÁ±ªÂ∏ÆÊàëÁêÜËß£Êõ¥‰∏∫Â∫ïÂ±ÇÁöÑÂÜÖÂÆπÔºåÂΩìÁÑ∂Ôºå‰∏∫‰∫ÜÊõ¥Ëøõ‰∏ÄÊ≠•ÁêÜËß£Á∫øÁ®ãÊ±†ÁöÑÂÆûÁé∞ÁªÜËäÇÔºåÈ¶ñÂÖàÈúÄË¶ÅÂØπÁ∫øÁ®ãÈó¥ÈÄö‰ø°ÊúâË∂≥Â§üÁöÑÊääÊè°ÔºåÂÖ∂Ê¨°ÊòØË¶ÅÂØπÂêÑÁßçÊï∞ÊçÆÁªìÊûÑÊúâÊ∏ÖÊô∞ÁöÑËÆ§ËØÜÔºåÊØîÂ¶ÇÈòüÂàó„ÄÅ‰ºòÂÖàÁ∫ßÈòüÂàó„ÄÅÂ†ÜÁ≠âÈ´òÁ∫ßÁöÑÊï∞ÊçÆÁªìÊûÑÔºå‰ª•ÂèäjavaËØ≠Ë®ÄÂØπ‰∫éËøô‰∫õÊï∞ÊçÆÁªìÊûÑÁöÑÂÆûÁé∞ÔºåÊõ¥‰∏∫ÈáçË¶ÅÁöÑÊòØË¶ÅÁªìÂêàÂÆûÈôÖÊÉÖÂÜµÂàÜÊûêÈóÆÈ¢òÔºåÂú®Â∑•‰ΩúÂíåÂπ≥Êó∂ÁöÑÂ≠¶‰π†‰∏≠‰∏çÊñ≠ÊÄªÁªìÔºå‰∏çÊñ≠Ëø≠‰ª£ÂØπ‰∫éÁ∫øÁ®ã„ÄÅÁ∫øÁ®ãÊ±†ÁöÑËÆ§Áü•„ÄÇ]]></content>
      <tags>
        <tag>ËΩ¨Âèë</tag>
        <tag>Á∫øÁ®ãÊ±†</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java Á∫øÁ®ãÁ∫øÁ®ãÊ±†ÂàùÊé¢]]></title>
    <url>%2F2018%2F09%2F18%2Fthread%2F%E7%BA%BF%E7%A8%8B%E6%B1%A0%2FJava%20%E7%BA%BF%E7%A8%8B%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%88%9D%E6%8E%A2%2F</url>
    <content type="text"><![CDATA[‰ΩúËÄÖÔºöÁñºËõã‰πã‰∏∏ Êù•Ê∫êÔºöhttps://www.jianshu.com/p/5d5198b434a2 ‰∏Ä„ÄÅÁ∫øÁ®ãÊ±†ÂàùÊé¢ÊâÄË∞ìÁ∫øÁ®ãÊ±†ÔºåÂ∞±ÊòØÂ∞ÜÂ§ö‰∏™Á∫øÁ®ãÊîæÂú®‰∏Ä‰∏™Ê±†Â≠êÈáåÈù¢ÔºàÊâÄË∞ìÊ±†ÂåñÊäÄÊúØÔºâÔºåÁÑ∂ÂêéÈúÄË¶ÅÁ∫øÁ®ãÁöÑÊó∂ÂÄô‰∏çÊòØÂàõÂª∫‰∏Ä‰∏™Á∫øÁ®ãÔºåËÄåÊòØ‰ªéÁ∫øÁ®ãÊ±†ÈáåÈù¢Ëé∑Âèñ‰∏Ä‰∏™ÂèØÁî®ÁöÑÁ∫øÁ®ãÔºåÁÑ∂ÂêéÊâßË°åÊàë‰ª¨ÁöÑ‰ªªÂä°„ÄÇÁ∫øÁ®ãÊ±†ÁöÑÂÖ≥ÈîÆÂú®‰∫éÂÆÉ‰∏∫Êàë‰ª¨ÁÆ°ÁêÜ‰∫ÜÂ§ö‰∏™Á∫øÁ®ãÔºåÊàë‰ª¨‰∏çÈúÄË¶ÅÂÖ≥ÂøÉÂ¶Ç‰ΩïÂàõÂª∫Á∫øÁ®ãÔºåÊàë‰ª¨Âè™ÈúÄË¶ÅÂÖ≥Á≥ªÊàë‰ª¨ÁöÑÊ†∏ÂøÉ‰∏öÂä°ÔºåÁÑ∂ÂêéÈúÄË¶ÅÁ∫øÁ®ãÊù•ÊâßË°å‰ªªÂä°ÁöÑÊó∂ÂÄô‰ªéÁ∫øÁ®ãÊ±†‰∏≠Ëé∑ÂèñÁ∫øÁ®ã„ÄÇ‰ªªÂä°ÊâßË°åÂÆå‰πãÂêéÁ∫øÁ®ã‰∏ç‰ºöË¢´ÈîÄÊØÅÔºåËÄåÊòØ‰ºöË¢´ÈáçÊñ∞ÊîæÂà∞Ê±†Â≠êÈáåÈù¢ÔºåÁ≠âÂæÖÊú∫‰ºöÂéªÊâßË°å‰ªªÂä°„ÄÇ Êàë‰ª¨‰∏∫‰ªÄ‰πàÈúÄË¶ÅÁ∫øÁ®ãÊ±†Âë¢ÔºüÈ¶ñÂÖà‰∏ÄÁÇπÊòØÁ∫øÁ®ãÊ±†‰∏∫Êàë‰ª¨ÊèêÈ´ò‰∫Ü‰∏ÄÁßçÁÆÄÊòìÁöÑÂ§öÁ∫øÁ®ãÁºñÁ®ãÊñπÊ°àÔºåÊàë‰ª¨‰∏çÈúÄË¶ÅÊäïÂÖ•Â§™Â§öÁöÑÁ≤æÂäõÂéªÁÆ°ÁêÜÂ§ö‰∏™Á∫øÁ®ãÔºåÁ∫øÁ®ãÊ±†‰ºöËá™Âä®Â∏ÆÊàë‰ª¨ÁÆ°ÁêÜÂ•ΩÔºåÂÆÉÁü•ÈÅì‰ªÄ‰πàÊó∂ÂÄôËØ•ÂÅö‰ªÄ‰πà‰∫ãÊÉÖÔºåÊàë‰ª¨Âè™Ë¶ÅÂú®ÈúÄË¶ÅÁöÑÊó∂ÂÄôÂéªËé∑ÂèñÂ∞±ÂèØ‰ª•‰∫Ü„ÄÇÂÖ∂Ê¨°ÔºåÊàë‰ª¨‰ΩøÁî®Á∫øÁ®ãÊ±†ÂæàÂ§ßÁ®ãÂ∫¶‰∏äÂΩíÂíé‰∫éÂàõÂª∫ÂíåÈîÄÊØÅÁ∫øÁ®ãÁöÑ‰ª£‰ª∑ÊòØÈùûÂ∏∏ÊòÇË¥µÁöÑÔºåÁîöËá≥Êàë‰ª¨ÂàõÂª∫ÂíåÈîÄÊØÅÁ∫øÁ®ãÁöÑËµÑÊ∫êË¶ÅÊØîÊàë‰ª¨ÂÆûÈôÖÊâßË°åÁöÑ‰ªªÂä°ÊâÄËä±Ë¥πÁöÑÊó∂Èó¥ËøòË¶ÅÈïøÔºåËøôÊòæÁÑ∂ÊòØ‰∏çÁßëÂ≠¶‰πüÊòØ‰∏çÂêàÁêÜÁöÑÔºåËÄå‰∏îÂ¶ÇÊûúÊ≤°Êúâ‰∏Ä‰∏™ÂêàÁêÜÁöÑÁÆ°ÁêÜËÄÖÔºåÂèØËÉΩ‰ºöÂá∫Áé∞ÂàõÂª∫‰∫ÜËøáÂ§öÁöÑÁ∫øÁ®ãÁöÑÊÉÖÂÜµÔºå‰πüÂ∞±ÊòØÂú®JVM‰∏≠Â≠òÊ¥ªÁöÑÁ∫øÁ®ãËøáÂ§öÔºåËÄåÂ≠òÊ¥ªÁùÄÁöÑÁ∫øÁ®ã‰πüÊòØÈúÄË¶ÅÈîÄÊØÅËµÑÊ∫êÁöÑÔºåÂè¶Â§ñ‰∏ÄÁÇπÔºåËøáÂ§öÁöÑÁ∫øÁ®ãÂèØËÉΩ‰ºöÈÄ†ÊàêÁ∫øÁ®ãËøáÂ∫¶ÂàáÊç¢ÁöÑÂ∞¥Â∞¨Â¢ÉÂú∞„ÄÇ ÂØπÁ∫øÁ®ãÊ±†Êúâ‰∫Ü‰∏Ä‰∏™ÂàùÊ≠•ÁöÑËÆ§ËØÜ‰πãÂêéÔºåÊàë‰ª¨Êù•ÁúãÁúãÂ¶Ç‰Ωï‰ΩøÁî®Á∫øÁ®ãÊ±†„ÄÇ Ôºà1ÔºâÂàõÂª∫‰∏Ä‰∏™Á∫øÁ®ãÊ±† 1ExecutorService executorService = Executors.newFixedThreadPool(1); Ôºà2ÔºâÊèê‰∫§‰ªªÂä° 12executorService.submit(() -&gt; System.out.println("run"));Future&lt;String&gt; stringFuture = executorService.submit(() -&gt; "run"); Ôºà3ÔºâÂàõÂª∫‰∏Ä‰∏™Ë∞ÉÂ∫¶Á∫øÁ®ãÊ±† 1ScheduledExecutorService scheduledExecutorService = Executors.newScheduledThreadPool(1); Ôºà4ÔºâÊèê‰∫§‰∏Ä‰∏™Âë®ÊúüÊÄßÊâßË°åÁöÑ‰ªªÂä° 12scheduledExecutorService .scheduleAtFixedRate(() -&gt; System.out.println("schedule"), 0, 1, TimeUnit.SECONDS); Ôºà5Ôºâshutdown 12executorService.shutdownNow();scheduledExecutorService.shutdownNow(); ÂèØ‰ª•ÂèëÁé∞‰ΩøÁî®Á∫øÁ®ãÊ±†ÈùûÂ∏∏ÁÆÄÂçïÔºåÂè™ÈúÄË¶ÅÊûÅÂ∞ëÁöÑ‰ª£Á†ÅÂ∞±ÂèØ‰ª•ÂàõÂª∫Âá∫Êàë‰ª¨ÈúÄË¶ÅÁöÑÁ∫øÁ®ãÊ±†ÔºåÁÑ∂ÂêéÂ∞ÜÊàë‰ª¨ÁöÑ‰ªªÂä°Êèê‰∫§Âà∞Á∫øÁ®ãÊ±†‰∏≠Âéª„ÄÇÊàë‰ª¨Âè™ÈúÄË¶ÅÂú®ÁªìÊùü‰πãÊó∂ËÆ∞ÂæóÂÖ≥Èó≠Á∫øÁ®ãÊ±†Â∞±ÂèØ‰ª•‰∫Ü„ÄÇÊú¨ÊñáÁöÑÈáçÁÇπÂπ∂ÈùûÂú®‰∫éÂ¶Ç‰Ωï‰ΩøÁî®Á∫øÁ®ãÊ±†ÔºåËÄåÊòØËØïÂõæÂâñÊûêÁ∫øÁ®ãÊ±†ÁöÑÂÆûÁé∞ÔºåÊØîÂ¶Ç‰∏Ä‰∏™Ë∞ÉÂ∫¶Á∫øÁ®ãÊ±†ÊòØÊÄé‰πàÂÆûÁé∞ÁöÑÔºüÊòØÈù†‰ªÄ‰πàÂÆûÁé∞ÁöÑÔºü‰∏∫‰ªÄ‰πàËÉΩËøôÊ†∑ÂÆûÁé∞Á≠âÁ≠âÈóÆÈ¢ò„ÄÇ ‰∫å„ÄÅJavaÁ∫øÁ®ãÊ±†ÂÆûÁé∞Êû∂ÊûÑJava‰∏≠‰∏éÁ∫øÁ®ãÊ±†Áõ∏ÂÖ≥ÁöÑÁ±ªÊúâ‰∏ãÈù¢‰∏Ä‰∫õÔºö Executor ExecutorService ScheduledExecutorService ThreadPoolExecutor ScheduledThreadPoolExecutor Executors ÈÄöËøá‰∏äÈù¢‰∏ÄËäÇ‰∏≠ÁöÑ‰ΩøÁî®Á§∫‰æãÔºåÂèØ‰ª•ÂèëÁé∞ExecutorsÁ±ªÊòØ‰∏Ä‰∏™ÂàõÂª∫Á∫øÁ®ãÊ±†ÁöÑÊúâÁî®ÁöÑÁ±ªÔºå‰∫ãÂÆû‰∏äÔºåExecutorsÁ±ªÁöÑËßíËâ≤‰πüÂ∞±ÊòØÂàõÂª∫Á∫øÁ®ãÊ±†ÔºåÂÆÉÊòØ‰∏Ä‰∏™Â∑•ÂéÇÁ±ªÔºåÂèØ‰ª•‰∫ßÁîü‰∏çÂêåÁ±ªÂûãÁöÑÁ∫øÁ®ãÊ±†ÔºåËÄåExecutorÊòØÁ∫øÁ®ãÊ±†ÁöÑÈºªÁ•ñÁ±ªÔºåÂÆÉÊúâ‰∏§‰∏™Â≠êÁ±ªÊòØExecutorServiceÂíåScheduledExecutorServiceÔºåËÄåThreadPoolExecutorÂíåScheduledThreadPoolExecutorÂàôÊòØÁúüÊ≠£ÁöÑÁ∫øÁ®ãÊ±†ÔºåÊàë‰ª¨ÁöÑ‰ªªÂä°Â∞ÜË¢´Ëøô‰∏§‰∏™Á±ª‰∫§Áî±ÂÖ∂ÊâÄÁÆ°ÁêÜËÄÖÁöÑÁ∫øÁ®ãÊ±†ËøêË°åÔºåÂèØ‰ª•ÂèëÁé∞ÔºåScheduledThreadPoolExecutorÊòØ‰∏Ä‰∏™ÈõÜÂ§ßÊàêËÄÖÁ±ªÔºå‰∏ãÈù¢Êàë‰ª¨ÂèØ‰ª•ÁúãÁúãÂÆÉÁöÑÁ±ªÂÖ≥Á≥ªÂõæÔºö ScheduledThreadPoolExecutorÁöÑÁ±ªÂÖ≥Á≥ªÂõæ ScheduledThreadPoolExecutorÁªßÊâø‰∫ÜThreadPoolExecutorÔºåThreadPoolExecutorÂÆûÁé∞‰∫Ü‰∏ÄËà¨ÁöÑÁ∫øÁ®ãÊ±†ÔºåÊ≤°ÊúâË∞ÉÂ∫¶ÂäüËÉΩÔºåËÄåScheduledThreadPoolExecutorÁªßÊâø‰∫ÜThreadPoolExecutorÁöÑÂÆûÁé∞ÔºåÁÑ∂ÂêéÂ¢ûÂä†‰∫ÜË∞ÉÂ∫¶ÂäüËÉΩ„ÄÇ ÊúÄ‰∏∫ÂéüÂßãÁöÑExecutorÂè™Êúâ‰∏Ä‰∏™ÊñπÊ≥ïexecuteÔºåÂÆÉÊé•Âèó‰∏Ä‰∏™RunnableÁ±ªÂûãÁöÑÂèÇÊï∞ÔºåÊÑèÊÄùÊòØ‰ΩøÁî®Á∫øÁ®ãÊ±†Êù•ÊâßË°åËøô‰∏™RunnableÔºåÂèØ‰ª•ÂèëÁé∞Executor‰∏çÊèê‰æõÊúâËøîÂõûÂÄºÁöÑ‰ªªÂä°„ÄÇExecutorServiceÁªßÊâø‰∫ÜExecutorÔºåÂπ∂‰∏îÊûÅÂ§ßÁöÑÂ¢ûÂº∫‰∫ÜExecutorÁöÑÂäüËÉΩÔºå‰∏ç‰ªÖÊîØÊåÅÊúâËøîÂõûÂÄºÁöÑ‰ªªÂä°ÊâßË°åÔºåËÄå‰∏îËøòÊúâÂæàÂ§öÂçÅÂàÜÊúâÁî®ÁöÑÊñπÊ≥ïÊù•‰∏∫‰Ω†Êèê‰æõÊúçÂä°Ôºå‰∏ãÈù¢Â±ïÁ§∫‰∫ÜExecutorServiceÊèê‰æõÁöÑÊñπÊ≥ïÔºö ExecutorServiceÊèê‰æõÁöÑÊñπÊ≥ï ScheduledExecutorServiceÁªßÊâø‰∫ÜExecutorServiceÔºåÂπ∂‰∏îÂ¢ûÂä†‰∫ÜÁâπÊúâÁöÑË∞ÉÂ∫¶ÔºàscheduleÔºâÂäüËÉΩ„ÄÇÂÖ≥‰∫éExecutor„ÄÅExecutorServiceÂíåScheduledExecutorServiceÁöÑÂÖ≥Á≥ªÔºåÂèØ‰ª•ËßÅ‰∏ãÂõæÔºö Executor„ÄÅExecutorServiceÂíåScheduledExecutorServiceÁöÑÂÖ≥Á≥ª ÊÄªÁªì‰∏Ä‰∏ãÔºåÁªèËøáÊàë‰ª¨ÁöÑË∞ÉÁ†îÔºåÂèØ‰ª•ÂèëÁé∞ÂÖ∂ÂÆûÂØπ‰∫éÊàë‰ª¨ÁºñÂÜôÂ§öÁ∫øÁ®ã‰ª£Á†ÅÊù•ËØ¥ÔºåÊúÄ‰∏∫Ê†∏ÂøÉÁöÑÊòØExecutorsÁ±ªÔºåÊ†πÊçÆÊàë‰ª¨ÊòØÈúÄË¶ÅExecutorServiceÁ±ªÂûãÁöÑÁ∫øÁ®ãÊ±†ËøòÊòØScheduledExecutorServiceÁ±ªÂûãÁöÑÁ∫øÁ®ãÊ±†Ë∞ÉÁî®Áõ∏Â∫îÁöÑÂ∑•ÂéÇÊñπÊ≥ïÂ∞±ÂèØ‰ª•‰∫ÜÔºåËÄåExecutorServiceÁöÑÂÆûÁé∞Ë°®Áé∞Âú®ThreadPoolExecutor‰∏äÔºåScheduledExecutorServiceÁöÑÂÆûÁé∞ÂàôË°®Áé∞Âú®ScheduledThreadPoolExecutor‰∏äÔºå‰∏ãÊñáÂ∞ÜÂàÜÂà´ÂâñÊûêËøô‰∏§ËÄÖÔºåÂ∞ùËØïÂºÑÊ∏ÖÊ•öÁ∫øÁ®ãÊ±†ÁöÑÂéüÁêÜ„ÄÇ ‰∏â„ÄÅThreadPoolExecutorËß£Êûê‰∏äÊñá‰∏≠ÊèèËø∞‰∫ÜJava‰∏≠Á∫øÁ®ãÊ±†Áõ∏ÂÖ≥ÁöÑÊû∂ÊûÑÔºå‰∫ÜËß£‰∫ÜËøô‰∫õÂÜÖÂÆπÂÖ∂ÂÆûÊàë‰ª¨Â∞±ÂèØ‰ª•‰ΩøÁî®javaÁöÑÁ∫øÁ®ãÊ±†‰∏∫Êàë‰ª¨Â∑•‰Ωú‰∫ÜÔºå‰ΩøÁî®ÂÖ∂Êèê‰æõÁöÑÁ∫øÁ®ãÊ±†Êàë‰ª¨ÂèØ‰ª•ÂæàÊñπ‰æøÁöÑÂÜôÂá∫È´òË¥®ÈáèÁöÑÂ§öÁ∫øÁ®ã‰ª£Á†ÅÔºåÊú¨ËäÇÂ∞ÜÂàÜÊûêThreadPoolExecutorÁöÑÂÆûÁé∞ÔºåÊù•Êé¢Á¥¢Á∫øÁ®ãÊ±†ÁöÑËøêË°åÂéüÁêÜ„ÄÇ‰∏ãÈù¢ÁöÑÂõæÁâáÂ±ïÁ§∫‰∫ÜThreadPoolExecutorÁöÑÁ±ªÂõæÔºö ThreadPoolExecutorÁöÑÁ±ªÂõæ ‰∏ãÈù¢ÊòØÂá†‰∏™ÊØîËæÉÂÖ≥ÈîÆÁöÑÁ±ªÊàêÂëòÔºö 123456789101112131415private final BlockingQueue&lt;Runnable&gt; workQueue; // ‰ªªÂä°ÈòüÂàóÔºåÊàë‰ª¨ÁöÑ‰ªªÂä°‰ºöÊ∑ªÂä†Âà∞ËØ•ÈòüÂàóÈáåÈù¢ÔºåÁ∫øÁ®ãÂ∞Ü‰ªéËØ•ÈòüÂàóËé∑Âèñ‰ªªÂä°Êù•ÊâßË°åprivate final HashSet&lt;Worker&gt; workers = new HashSet&lt;Worker&gt;();//‰ªªÂä°ÁöÑÊâßË°åÂÄºÈõÜÂêàÔºåÊù•Ê∂àË¥πworkQueueÈáåÈù¢ÁöÑ‰ªªÂä°private volatile ThreadFactory threadFactory;//Á∫øÁ®ãÂ∑•ÂéÇprivate volatile RejectedExecutionHandler handler;//ÊãíÁªùÁ≠ñÁï•ÔºåÈªòËÆ§‰ºöÊäõÂá∫ÂºÇÂºÇÂ∏∏ÔºåËøòË¶ÅÂÖ∂‰ªñÂá†ÁßçÊãíÁªùÁ≠ñÁï•Â¶Ç‰∏ãÔºö //1„ÄÅCallerRunsPolicyÔºöÂú®Ë∞ÉÁî®ËÄÖÁ∫øÁ®ãÈáåÈù¢ËøêË°åËØ•‰ªªÂä° //2„ÄÅDiscardPolicyÔºö‰∏¢ÂºÉ‰ªªÂä° //3„ÄÅDiscardOldestPolicyÔºö‰∏¢ÂºÉworkQueueÁöÑÂ§¥ÈÉ®‰ªªÂä°private volatile int corePoolSize;//ÊúÄ‰∏ã‰øùÊ¥ªworkÊï∞Èáèprivate volatile int maximumPoolSize;//work‰∏äÈôê Êàë‰ª¨Â∞ùËØïÊâßË°åsubmitÊñπÊ≥ïÔºå‰∏ãÈù¢ÊòØÊâßË°åÁöÑÂÖ≥ÈîÆË∑ØÂæÑÔºåÊÄªÁªìËµ∑Êù•Â∞±ÊòØÔºöÂ¶ÇÊûúWorkerÊï∞ÈáèËøòÊ≤°ËææÂà∞‰∏äÈôêÂàôÁªßÁª≠ÂàõÂª∫ÔºåÂê¶ÂàôÊèê‰∫§‰ªªÂä°Âà∞workQueueÔºåÁÑ∂ÂêéËÆ©workerÊù•Ë∞ÉÂ∫¶ËøêË°å‰ªªÂä°„ÄÇ 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364//step 1: &lt;ExecutorService&gt;Future&lt;?&gt; submit(Runnable task); //step 2:&lt;AbstractExecutorService&gt;public Future&lt;?&gt; submit(Runnable task) &#123; if (task == null) throw new NullPointerException(); RunnableFuture&lt;Void&gt; ftask = newTaskFor(task, null); execute(ftask); return ftask;&#125;//step 3:&lt;Executor&gt;void execute(Runnable command);//step 4:&lt;ThreadPoolExecutor&gt;public void execute(Runnable command) &#123; if (command == null) throw new NullPointerException(); /* * Proceed in 3 steps: * * 1. If fewer than corePoolSize threads are running, try to * start a new thread with the given command as its first * task. The call to addWorker atomically checks runState and * workerCount, and so prevents false alarms that would add * threads when it shouldn't, by returning false. * * 2. If a task can be successfully queued, then we still need * to double-check whether we should have added a thread * (because existing ones died since last checking) or that * the pool shut down since entry into this method. So we * recheck state and if necessary roll back the enqueuing if * stopped, or start a new thread if there are none. * * 3. If we cannot queue task, then we try to add a new * thread. If it fails, we know we are shut down or saturated * and so reject the task. */ int c = ctl.get(); if (workerCountOf(c) &lt; corePoolSize) &#123; if (addWorker(command, true)) return; c = ctl.get(); &#125; if (isRunning(c) &amp;&amp; workQueue.offer(command)) &#123; //Êèê‰∫§Êàë‰ª¨ÁöÑÈ¢ù‰ªªÂä°Âà∞workQueue int recheck = ctl.get(); if (! isRunning(recheck) &amp;&amp; remove(command)) reject(command); else if (workerCountOf(recheck) == 0) addWorker(null, false); &#125; else if (!addWorker(command, false)) //‰ΩøÁî®maximumPoolSize‰Ωú‰∏∫ËæπÁïå reject(command); //Ëøò‰∏çË°åÔºüÊãíÁªùÊèê‰∫§ÁöÑ‰ªªÂä°&#125;//step 5:&lt;ThreadPoolExecutor&gt;private boolean addWorker(Runnable firstTask, boolean core) //step 6:&lt;ThreadPoolExecutor&gt;w = new Worker(firstTask); //ÂåÖË£Ö‰ªªÂä°final Thread t = w.thread; //Ëé∑ÂèñÁ∫øÁ®ãÔºàÂåÖÂê´‰ªªÂä°Ôºâworkers.add(w); // ‰ªªÂä°Ë¢´ÊîæÂà∞works‰∏≠t.start(); //ÊâßË°å‰ªªÂä° ‰∏äÈù¢ÁöÑÊµÅÁ®ãÊòØÈ´òÂ∫¶Ê¶ÇÊã¨ÁöÑÔºåÂÆûÈôÖÊÉÖÂÜµËøúÊØîËøôÂ§çÊùÇÂæóÂ§öÔºå‰ΩÜÊòØÊàë‰ª¨ÂÖ≥ÂøÉÁöÑÊòØÊÄé‰πàÊâìÈÄöÊï¥‰∏™ÊµÅÁ®ãÔºåÊâÄ‰ª•ËøôÊ†∑ÂàÜÊûêÈóÆÈ¢òÊòØÊ≤°ÊúâÂ§™Â§ßÁöÑÈóÆÈ¢òÁöÑ„ÄÇËßÇÂØü‰∏äÈù¢ÁöÑÊµÅÁ®ãÔºåÊàë‰ª¨ÂèëÁé∞ÂÖ∂ÂÆûÂÖ≥ÈîÆÁöÑÂú∞ÊñπÂú®‰∫éWorkerÔºåÂ¶ÇÊûúÂºÑÊòéÁôΩÂÆÉÊòØÂ¶Ç‰ΩïÂ∑•‰ΩúÁöÑÔºåÈÇ£‰πàÊàë‰ª¨‰πüÂ∞±Â§ßÊ¶ÇÊòéÁôΩ‰∫ÜÁ∫øÁ®ãÊ±†ÊòØÊÄé‰πàÂ∑•‰ΩúÁöÑ‰∫Ü„ÄÇ‰∏ãÈù¢ÂàÜÊûê‰∏Ä‰∏ãWorkerÁ±ª„ÄÇ workerÁ±ªÂõæ ‰∏äÈù¢ÁöÑÂõæÁâáÂ±ïÁ§∫‰∫ÜWorkerÁöÑÁ±ªÂÖ≥Á≥ªÂõæÔºåÂÖ≥ÈîÆÂú®‰∫é‰ªñÂÆûÁé∞‰∫ÜRunnableÊé•Âè£ÔºåÊâÄ‰ª•ÈóÆÈ¢òÁöÑÂÖ≥ÈîÆÂ∞±Âú®‰∫érunÊñπÊ≥ï‰∏ä„ÄÇÂú®Ëøô‰πãÂâçÔºåÊàë‰ª¨Êù•Áúã‰∏Ä‰∏ãWorkerÁ±ªÈáåÈù¢ÁöÑÂÖ≥ÈîÆÊàêÂëòÔºö 123final Thread thread; Runnable firstTask; //Êàë‰ª¨Êèê‰∫§ÁöÑ‰ªªÂä°ÔºåÂèØËÉΩË¢´Á´ãÂàªÊâßË°åÔºå‰πüÂèØËÉΩË¢´ÊîæÂà∞ÈòüÂàóÈáåÈù¢ threadÊòØWorkerÁöÑÂ∑•‰ΩúÁ∫øÁ®ãÔºå‰∏äÈù¢ÁöÑÂàÜÊûêÊàë‰ª¨‰πüÂèëÁé∞‰∫ÜÂú®addWorker‰∏≠‰ºöËé∑ÂèñworkerÈáåÈù¢ÁöÑthreadÁÑ∂ÂêéstartÔºå‰πüÂ∞±ÊòØËøô‰∏™Á∫øÁ®ãÁöÑÊâßË°åÔºåËÄåWorkerÂÆûÁé∞‰∫ÜRunnableÊé•Âè£ÔºåÊâÄ‰ª•Âú®ÊûÑÈÄ†threadÁöÑÊó∂ÂÄôWorkerÂ∞ÜËá™Â∑±‰º†ÈÄíÁªô‰∫ÜÊûÑÈÄ†ÂáΩÊï∞Ôºåthread.startÊâßË°åÁöÑÂÖ∂ÂÆûÂ∞±ÊòØWorkerÁöÑrunÊñπÊ≥ï„ÄÇ‰∏ãÈù¢ÊòØrunÊñπÊ≥ïÁöÑÂÜÖÂÆπÔºö 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647 public void run() &#123; runWorker(this); &#125; final void runWorker(Worker w) &#123; Thread wt = Thread.currentThread(); Runnable task = w.firstTask; w.firstTask = null; w.unlock(); // allow interrupts boolean completedAbruptly = true; try &#123; while (task != null || (task = getTask()) != null) &#123; w.lock(); // If pool is stopping, ensure thread is interrupted; // if not, ensure thread is not interrupted. This // requires a recheck in second case to deal with // shutdownNow race while clearing interrupt if ((runStateAtLeast(ctl.get(), STOP) || (Thread.interrupted() &amp;&amp; runStateAtLeast(ctl.get(), STOP))) &amp;&amp; !wt.isInterrupted()) wt.interrupt(); try &#123; beforeExecute(wt, task); Throwable thrown = null; try &#123; task.run(); &#125; catch (RuntimeException x) &#123; thrown = x; throw x; &#125; catch (Error x) &#123; thrown = x; throw x; &#125; catch (Throwable x) &#123; thrown = x; throw new Error(x); &#125; finally &#123; afterExecute(task, thrown); &#125; &#125; finally &#123; task = null; w.completedTasks++; w.unlock(); &#125; &#125; completedAbruptly = false; &#125; finally &#123; processWorkerExit(w, completedAbruptly); &#125;&#125; Êàë‰ª¨Êù•ÂàÜÊûê‰∏Ä‰∏ãrunWorkerËøô‰∏™ÊñπÊ≥ïÔºåËøôÂ∞±ÊòØÊï¥‰∏™Á∫øÁ®ãÊ±†ÁöÑÊ†∏ÂøÉ„ÄÇÈ¶ñÂÖàËé∑ÂèñÂà∞‰∫ÜÊàë‰ª¨ÂàöÊèê‰∫§ÁöÑ‰ªªÂä°firstTaskÔºåÁÑ∂Âêé‰ºöÂæ™ÁéØ‰ªéworkQueueÈáåÈù¢Ëé∑Âèñ‰ªªÂä°Êù•ÊâßË°åÔºåËé∑Âèñ‰ªªÂä°ÁöÑÊñπÊ≥ïÂ¶Ç‰∏ãÔºö 12345678910111213141516171819202122232425262728293031323334353637private Runnable getTask() &#123; boolean timedOut = false; // Did the last poll() time out? for (;;) &#123; int c = ctl.get(); int rs = runStateOf(c); // Check if queue empty only if necessary. if (rs &gt;= SHUTDOWN &amp;&amp; (rs &gt;= STOP || workQueue.isEmpty())) &#123; decrementWorkerCount(); return null; &#125; int wc = workerCountOf(c); // Are workers subject to culling? boolean timed = allowCoreThreadTimeOut || wc &gt; corePoolSize; if ((wc &gt; maximumPoolSize || (timed &amp;&amp; timedOut)) &amp;&amp; (wc &gt; 1 || workQueue.isEmpty())) &#123; if (compareAndDecrementWorkerCount(c)) return null; continue; &#125; try &#123; Runnable r = timed ? workQueue.poll(keepAliveTime, TimeUnit.NANOSECONDS) : workQueue.take(); if (r != null) return r; timedOut = true; &#125; catch (InterruptedException retry) &#123; timedOut = false; &#125; &#125; &#125; ÂÖ∂ÂÆûÊ†∏ÂøÉ‰πüÂ∞±‰∏ÄÂè•Ôºö 123Runnable r = timed ? workQueue.poll(keepAliveTime, TimeUnit.NANOSECONDS) : workQueue.take(); Êàë‰ª¨ÂÜçÂõûÂ§¥Áúã‰∏Ä‰∏ãexecuteÔºåÂÖ∂ÂÆûÊàë‰ª¨‰∏äÈù¢Âè™Ëµ∞‰∫Ü‰∏ÄÊù°ÈÄªËæëÔºåÂú®executeÁöÑÊó∂ÂÄôÔºåÊàë‰ª¨ÁöÑworkerÁöÑÊï∞ÈáèËøòÊ≤°ÊúâÂà∞ËææÊàë‰ª¨ËÆæÂÆöÁöÑcorePoolSizeÁöÑÊó∂ÂÄôÔºå‰ºöËµ∞‰∏äÈù¢Êàë‰ª¨ÂàÜÊûêÁöÑÈÄªËæëÔºåËÄåÂ¶ÇÊûúËææÂà∞‰∫ÜÊàë‰ª¨ËÆæÂÆöÁöÑÈòàÂÄº‰πãÂêéÔºåexecute‰∏≠‰ºöÂ∞ùËØïÂéªÊèê‰∫§‰ªªÂä°ÔºåÂ¶ÇÊûúÊèê‰∫§ÊàêÂäü‰∫ÜÂ∞±ÁªìÊùüÔºåÂê¶Âàô‰ºöÊãíÁªù‰ªªÂä°ÁöÑÊèê‰∫§„ÄÇÊàë‰ª¨‰∏äÈù¢ËøòÊèêÂà∞‰∏Ä‰∏™ÊàêÂëòÔºömaximumPoolSizeÔºåÂÖ∂ÂÆûÁ∫øÁ®ãÊ±†ÁöÑÊúÄÂ§ßÁöÑWorkerÊï∞ÈáèÂ∫îËØ•ÊòØmaximumPoolSizeÔºå‰ΩÜÊòØÊàë‰ª¨‰∏äÈù¢ÁöÑÂàÜÊûêÊòØcorePoolSizeÔºåËøôÊòØÂõ†‰∏∫Êàë‰ª¨ÁöÑprivate boolean addWorker(Runnable firstTask, boolean core)ÁöÑÂèÇÊï∞coreÁöÑÂÄºÊù•ÊéßÂà∂ÁöÑÔºåcore‰∏∫trueÂàô‰ΩøÁî®corePoolSizeÊù•ËÆæÂÆöËæπÁïåÔºåÂê¶Âàô‰ΩøÁî®maximumPoolSizeÊù•ËÆæÂÆöËæπÁïå„ÄÇÁõ¥ËßÇÁöÑËß£Èáä‰∏Ä‰∏ãÔºåÂΩìÁ∫øÁ®ãÊ±†ÈáåÈù¢ÁöÑWorkerÊï∞ÈáèËøòÊ≤°ÊúâÂà∞corePoolSizeÔºåÈÇ£‰πàÊñ∞Ê∑ªÂä†ÁöÑ‰ªªÂä°‰ºö‰º¥ÈöèÁùÄ‰∫ßÁîü‰∏Ä‰∏™Êñ∞ÁöÑworkerÔºåÂ¶ÇÊûúWorkerÁöÑÊï∞ÈáèËææÂà∞‰∫ÜcorePoolSizeÔºåÈÇ£‰πàÂ∞±Â∞Ü‰ªªÂä°Â≠òÊîæÂú®ÈòªÂ°ûÈòüÂàó‰∏≠Á≠âÂæÖWorkerÊù•Ëé∑ÂèñÊâßË°åÔºåÂ¶ÇÊûúÊ≤°ÊúâÂäûÊ≥ïÂÜçÂêëÈòªÂ°ûÈòüÂàóÊîæ‰ªªÂä°‰∫ÜÔºåÈÇ£‰πàËøô‰∏™Êó∂ÂÄômaximumPoolSizeÂ∞±ÂèòÂæóÊúâÁî®‰∫ÜÔºåÊñ∞ÁöÑ‰ªªÂä°Â∞Ü‰ºö‰º¥ÈöèÁùÄ‰∫ßÁîü‰∏Ä‰∏™Êñ∞ÁöÑWorkerÔºåÂ¶ÇÊûúÁ∫øÁ®ãÊ±†ÈáåÈù¢ÁöÑWorkerÂ∑≤ÁªèËææÂà∞‰∫ÜmaximumPoolSizeÔºåÈÇ£‰πàÊé•‰∏ãÊù•Êèê‰∫§ÁöÑ‰ªªÂä°Âè™ËÉΩË¢´ÊãíÁªùÁ≠ñÁï•ÊãíÁªù‰∫Ü„ÄÇÂèØ‰ª•ÂèÇËÄÉ‰∏ãÈù¢ÁöÑÊèèËø∞Êù•ÁêÜËß£Ôºö 12345678910111213* When a new task is submitted in method &#123;@link #execute(Runnable)&#125;,* and fewer than corePoolSize threads are running, a new thread is* created to handle the request, even if other worker threads are* idle. If there are more than corePoolSize but less than* maximumPoolSize threads running, a new thread will be created only* if the queue is full. By setting corePoolSize and maximumPoolSize* the same, you create a fixed-size thread pool. By setting* maximumPoolSize to an essentially unbounded value such as &#123;@code* Integer.MAX_VALUE&#125;, you allow the pool to accommodate an arbitrary* number of concurrent tasks. Most typically, core and maximum pool* sizes are set only upon construction, but they may also be changed* dynamically using &#123;@link #setCorePoolSize&#125; and &#123;@link* #setMaximumPoolSize&#125;. Âú®Ê≠§ÈúÄË¶ÅËØ¥Êòé‰∏ÄÁÇπÔºåÊúâ‰∏Ä‰∏™ÈáçË¶ÅÁöÑÊàêÂëòÔºökeepAliveTimeÔºåÂΩìÁ∫øÁ®ãÊ±†ÈáåÈù¢ÁöÑÁ∫øÁ®ãÊï∞ÈáèË∂ÖËøácorePoolSize‰∫ÜÔºåÈÇ£‰πàË∂ÖÂá∫ÁöÑÁ∫øÁ®ãÂ∞Ü‰ºöÂú®Á©∫Èó≤keepAliveTime‰πãÂêéË¢´terminated„ÄÇÂèØ‰ª•ÂèÇËÄÉ‰∏ãÈù¢ÁöÑÊñáÊ°£Ôºö 123* If the pool currently has more than corePoolSize threads,* excess threads will be terminated if they have been idle for more* than the keepAliveTime (see &#123;@link #getKeepAliveTime(TimeUnit)&#125;). Êõ¥Â§öÁ≤æÂΩ©ËßÅ‰∏ãËäÇÔºö„ÄäJavaÁ∫øÁ®ãÊ±†Ê∑±ÂÖ•ÂàÜÊûê„Äã]]></content>
      <tags>
        <tag>ËΩ¨Âèë</tag>
        <tag>Á∫øÁ®ãÊ±†</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Docker ÂÖ•Èó®ÊïôÁ®ã]]></title>
    <url>%2F2018%2F09%2F18%2FDocker%2FDocker%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[‰ΩúËÄÖÔºöÊ∏ÖÂçéÂ∞èÂì•ËØ¥ËØª‰π¶ Êù•Ê∫êÔºöhttps://baijiahao.baidu.com/s?id=1591887487395526427&amp;wfr=spider&amp;for=pc 2013Âπ¥ÂèëÂ∏ÉËá≥‰ªäÔºåDocker‰∏ÄÁõ¥ÂπøÂèóÁû©ÁõÆÔºåË¢´ËÆ§‰∏∫ÂèØËÉΩ‰ºöÊîπÂèòËΩØ‰ª∂Ë°å‰∏ö„ÄÇ ‰ΩÜÊòØÔºåËÆ∏Â§ö‰∫∫Âπ∂‰∏çÊ∏ÖÊ•ö Docker Âà∞Â∫ïÊòØ‰ªÄ‰πàÔºåË¶ÅËß£ÂÜ≥‰ªÄ‰πàÈóÆÈ¢òÔºåÂ•ΩÂ§ÑÂèàÂú®Âì™ÈáåÔºüÊú¨ÊñáÂ∞±Êù•ËØ¶ÁªÜËß£ÈáäÔºåÂ∏ÆÂä©Â§ßÂÆ∂ÁêÜËß£ÂÆÉÔºåËøòÂ∏¶ÊúâÁÆÄÂçïÊòìÊáÇÁöÑÂÆû‰æãÔºåÊïô‰Ω†Â¶Ç‰ΩïÂ∞ÜÂÆÉÁî®‰∫éÊó•Â∏∏ÂºÄÂèë„ÄÇ ‰∏Ä„ÄÅÁéØÂ¢ÉÈÖçÁΩÆÁöÑÈöæÈ¢òËΩØ‰ª∂ÂºÄÂèëÊúÄÂ§ßÁöÑÈ∫ªÁÉ¶‰∫ã‰πã‰∏ÄÔºåÂ∞±ÊòØÁéØÂ¢ÉÈÖçÁΩÆ„ÄÇÁî®Êà∑ËÆ°ÁÆóÊú∫ÁöÑÁéØÂ¢ÉÈÉΩ‰∏çÁõ∏ÂêåÔºå‰Ω†ÊÄé‰πàÁü•ÈÅìËá™ÂÆ∂ÁöÑËΩØ‰ª∂ÔºåËÉΩÂú®ÈÇ£‰∫õÊú∫Âô®Ë∑ëËµ∑Êù•Ôºü Áî®Êà∑ÂøÖÈ°ª‰øùËØÅ‰∏§‰ª∂‰∫ãÔºöÊìç‰ΩúÁ≥ªÁªüÁöÑËÆæÁΩÆÔºåÂêÑÁßçÂ∫ìÂíåÁªÑ‰ª∂ÁöÑÂÆâË£Ö„ÄÇÂè™ÊúâÂÆÉ‰ª¨ÈÉΩÊ≠£Á°ÆÔºåËΩØ‰ª∂ÊâçËÉΩËøêË°å„ÄÇ‰∏æ‰æãÊù•ËØ¥ÔºåÂÆâË£Ö‰∏Ä‰∏™ Python Â∫îÁî®ÔºåËÆ°ÁÆóÊú∫ÂøÖÈ°ªÊúâ Python ÂºïÊìéÔºåËøòÂøÖÈ°ªÊúâÂêÑÁßç‰æùËµñÔºåÂèØËÉΩËøòË¶ÅÈÖçÁΩÆÁéØÂ¢ÉÂèòÈáè„ÄÇ Â¶ÇÊûúÊüê‰∫õËÄÅÊóßÁöÑÊ®°Âùó‰∏éÂΩìÂâçÁéØÂ¢É‰∏çÂÖºÂÆπÔºåÈÇ£Â∞±È∫ªÁÉ¶‰∫Ü„ÄÇÂºÄÂèëËÄÖÂ∏∏Â∏∏‰ºöËØ¥Ôºö‚ÄùÂÆÉÂú®ÊàëÁöÑÊú∫Âô®ÂèØ‰ª•Ë∑ë‰∫Ü‚ÄùÔºàIt works on my machineÔºâÔºåË®Ä‰∏ã‰πãÊÑèÂ∞±ÊòØÔºåÂÖ∂‰ªñÊú∫Âô®ÂæàÂèØËÉΩË∑ë‰∏ç‰∫Ü„ÄÇ ÁéØÂ¢ÉÈÖçÁΩÆÂ¶ÇÊ≠§È∫ªÁÉ¶ÔºåÊç¢‰∏ÄÂè∞Êú∫Âô®ÔºåÂ∞±Ë¶ÅÈáçÊù•‰∏ÄÊ¨°ÔºåÊó∑Êó•Ë¥πÊó∂„ÄÇÂæàÂ§ö‰∫∫ÊÉ≥Âà∞ÔºåËÉΩ‰∏çËÉΩ‰ªéÊ†πÊú¨‰∏äËß£ÂÜ≥ÈóÆÈ¢òÔºåËΩØ‰ª∂ÂèØ‰ª•Â∏¶ÁéØÂ¢ÉÂÆâË£ÖÔºü‰πüÂ∞±ÊòØËØ¥ÔºåÂÆâË£ÖÁöÑÊó∂ÂÄôÔºåÊääÂéüÂßãÁéØÂ¢É‰∏ÄÊ®°‰∏ÄÊ†∑Âú∞Â§çÂà∂ËøáÊù•„ÄÇ &nbsp; ‰∫å„ÄÅËôöÊãüÊú∫ËôöÊãüÊú∫Ôºàvirtual machineÔºâÂ∞±ÊòØÂ∏¶ÁéØÂ¢ÉÂÆâË£ÖÁöÑ‰∏ÄÁßçËß£ÂÜ≥ÊñπÊ°à„ÄÇÂÆÉÂèØ‰ª•Âú®‰∏ÄÁßçÊìç‰ΩúÁ≥ªÁªüÈáåÈù¢ËøêË°åÂè¶‰∏ÄÁßçÊìç‰ΩúÁ≥ªÁªüÔºåÊØîÂ¶ÇÂú® Windows Á≥ªÁªüÈáåÈù¢ËøêË°å Linux Á≥ªÁªü„ÄÇÂ∫îÁî®Á®ãÂ∫èÂØπÊ≠§ÊØ´Êó†ÊÑüÁü•ÔºåÂõ†‰∏∫ËôöÊãüÊú∫Áúã‰∏äÂéªË∑üÁúüÂÆûÁ≥ªÁªü‰∏ÄÊ®°‰∏ÄÊ†∑ÔºåËÄåÂØπ‰∫éÂ∫ïÂ±ÇÁ≥ªÁªüÊù•ËØ¥ÔºåËôöÊãüÊú∫Â∞±ÊòØ‰∏Ä‰∏™ÊôÆÈÄöÊñá‰ª∂Ôºå‰∏çÈúÄË¶Å‰∫ÜÂ∞±Âà†ÊéâÔºåÂØπÂÖ∂‰ªñÈÉ®ÂàÜÊØ´Êó†ÂΩ±Âìç„ÄÇ ËôΩÁÑ∂Áî®Êà∑ÂèØ‰ª•ÈÄöËøáËôöÊãüÊú∫ËøòÂéüËΩØ‰ª∂ÁöÑÂéüÂßãÁéØÂ¢É„ÄÇ‰ΩÜÊòØÔºåËøô‰∏™ÊñπÊ°àÊúâÂá†‰∏™Áº∫ÁÇπ„ÄÇ Ôºà1ÔºâËµÑÊ∫êÂç†Áî®Â§ö ËôöÊãüÊú∫‰ºöÁã¨Âç†‰∏ÄÈÉ®ÂàÜÂÜÖÂ≠òÂíåÁ°¨ÁõòÁ©∫Èó¥„ÄÇÂÆÉËøêË°åÁöÑÊó∂ÂÄôÔºåÂÖ∂‰ªñÁ®ãÂ∫èÂ∞±‰∏çËÉΩ‰ΩøÁî®Ëøô‰∫õËµÑÊ∫ê‰∫Ü„ÄÇÂì™ÊÄïËôöÊãüÊú∫ÈáåÈù¢ÁöÑÂ∫îÁî®Á®ãÂ∫èÔºåÁúüÊ≠£‰ΩøÁî®ÁöÑÂÜÖÂ≠òÂè™Êúâ 1MBÔºåËôöÊãüÊú∫‰æùÁÑ∂ÈúÄË¶ÅÂá†Áôæ MB ÁöÑÂÜÖÂ≠òÊâçËÉΩËøêË°å„ÄÇ Ôºà2ÔºâÂÜó‰ΩôÊ≠•È™§Â§ö ËôöÊãüÊú∫ÊòØÂÆåÊï¥ÁöÑÊìç‰ΩúÁ≥ªÁªüÔºå‰∏Ä‰∫õÁ≥ªÁªüÁ∫ßÂà´ÁöÑÊìç‰ΩúÊ≠•È™§ÔºåÂæÄÂæÄÊó†Ê≥ïË∑≥ËøáÔºåÊØîÂ¶ÇÁî®Êà∑ÁôªÂΩï„ÄÇ Ôºà3ÔºâÂêØÂä®ÊÖ¢ ÂêØÂä®Êìç‰ΩúÁ≥ªÁªüÈúÄË¶ÅÂ§ö‰πÖÔºåÂêØÂä®ËôöÊãüÊú∫Â∞±ÈúÄË¶ÅÂ§ö‰πÖ„ÄÇÂèØËÉΩË¶ÅÁ≠âÂá†ÂàÜÈíüÔºåÂ∫îÁî®Á®ãÂ∫èÊâçËÉΩÁúüÊ≠£ËøêË°å„ÄÇ &nbsp; ‰∏â„ÄÅLinux ÂÆπÂô®Áî±‰∫éËôöÊãüÊú∫Â≠òÂú®Ëøô‰∫õÁº∫ÁÇπÔºåLinux ÂèëÂ±ïÂá∫‰∫ÜÂè¶‰∏ÄÁßçËôöÊãüÂåñÊäÄÊúØÔºöLinux ÂÆπÂô®ÔºàLinux ContainersÔºåÁº©ÂÜô‰∏∫ LXCÔºâ„ÄÇ Linux ÂÆπÂô®‰∏çÊòØÊ®°Êãü‰∏Ä‰∏™ÂÆåÊï¥ÁöÑÊìç‰ΩúÁ≥ªÁªüÔºåËÄåÊòØÂØπËøõÁ®ãËøõË°åÈöîÁ¶ª„ÄÇÊàñËÄÖËØ¥ÔºåÂú®Ê≠£Â∏∏ËøõÁ®ãÁöÑÂ§ñÈù¢Â•ó‰∫Ü‰∏Ä‰∏™‰øùÊä§Â±Ç„ÄÇÂØπ‰∫éÂÆπÂô®ÈáåÈù¢ÁöÑËøõÁ®ãÊù•ËØ¥ÔºåÂÆÉÊé•Ëß¶Âà∞ÁöÑÂêÑÁßçËµÑÊ∫êÈÉΩÊòØËôöÊãüÁöÑÔºå‰ªéËÄåÂÆûÁé∞‰∏éÂ∫ïÂ±ÇÁ≥ªÁªüÁöÑÈöîÁ¶ª„ÄÇ Áî±‰∫éÂÆπÂô®ÊòØËøõÁ®ãÁ∫ßÂà´ÁöÑÔºåÁõ∏ÊØîËôöÊãüÊú∫ÊúâÂæàÂ§ö‰ºòÂäø„ÄÇ Ôºà1ÔºâÂêØÂä®Âø´ ÂÆπÂô®ÈáåÈù¢ÁöÑÂ∫îÁî®ÔºåÁõ¥Êé•Â∞±ÊòØÂ∫ïÂ±ÇÁ≥ªÁªüÁöÑ‰∏Ä‰∏™ËøõÁ®ãÔºåËÄå‰∏çÊòØËôöÊãüÊú∫ÂÜÖÈÉ®ÁöÑËøõÁ®ã„ÄÇÊâÄ‰ª•ÔºåÂêØÂä®ÂÆπÂô®Áõ∏ÂΩì‰∫éÂêØÂä®Êú¨Êú∫ÁöÑ‰∏Ä‰∏™ËøõÁ®ãÔºåËÄå‰∏çÊòØÂêØÂä®‰∏Ä‰∏™Êìç‰ΩúÁ≥ªÁªüÔºåÈÄüÂ∫¶Â∞±Âø´ÂæàÂ§ö„ÄÇ Ôºà2ÔºâËµÑÊ∫êÂç†Áî®Â∞ë ÂÆπÂô®Âè™Âç†Áî®ÈúÄË¶ÅÁöÑËµÑÊ∫êÔºå‰∏çÂç†Áî®ÈÇ£‰∫õÊ≤°ÊúâÁî®Âà∞ÁöÑËµÑÊ∫êÔºõËôöÊãüÊú∫Áî±‰∫éÊòØÂÆåÊï¥ÁöÑÊìç‰ΩúÁ≥ªÁªüÔºå‰∏çÂèØÈÅøÂÖçË¶ÅÂç†Áî®ÊâÄÊúâËµÑÊ∫ê„ÄÇÂè¶Â§ñÔºåÂ§ö‰∏™ÂÆπÂô®ÂèØ‰ª•ÂÖ±‰∫´ËµÑÊ∫êÔºåËôöÊãüÊú∫ÈÉΩÊòØÁã¨‰∫´ËµÑÊ∫ê„ÄÇ Ôºà3Ôºâ‰ΩìÁßØÂ∞è ÂÆπÂô®Âè™Ë¶ÅÂåÖÂê´Áî®Âà∞ÁöÑÁªÑ‰ª∂Âç≥ÂèØÔºåËÄåËôöÊãüÊú∫ÊòØÊï¥‰∏™Êìç‰ΩúÁ≥ªÁªüÁöÑÊâìÂåÖÔºåÊâÄ‰ª•ÂÆπÂô®Êñá‰ª∂ÊØîËôöÊãüÊú∫Êñá‰ª∂Ë¶ÅÂ∞èÂæàÂ§ö„ÄÇ ÊÄª‰πãÔºåÂÆπÂô®ÊúâÁÇπÂÉèËΩªÈáèÁ∫ßÁöÑËôöÊãüÊú∫ÔºåËÉΩÂ§üÊèê‰æõËôöÊãüÂåñÁöÑÁéØÂ¢ÉÔºå‰ΩÜÊòØÊàêÊú¨ÂºÄÈîÄÂ∞èÂæóÂ§ö„ÄÇ &nbsp; Âõõ„ÄÅDocker ÊòØ‰ªÄ‰πàÔºüDocker Â±û‰∫é Linux ÂÆπÂô®ÁöÑ‰∏ÄÁßçÂ∞ÅË£ÖÔºåÊèê‰æõÁÆÄÂçïÊòìÁî®ÁöÑÂÆπÂô®‰ΩøÁî®Êé•Âè£„ÄÇÂÆÉÊòØÁõÆÂâçÊúÄÊµÅË°åÁöÑ Linux ÂÆπÂô®Ëß£ÂÜ≥ÊñπÊ°à„ÄÇ Docker Â∞ÜÂ∫îÁî®Á®ãÂ∫è‰∏éËØ•Á®ãÂ∫èÁöÑ‰æùËµñÔºåÊâìÂåÖÂú®‰∏Ä‰∏™Êñá‰ª∂ÈáåÈù¢„ÄÇËøêË°åËøô‰∏™Êñá‰ª∂ÔºåÂ∞±‰ºöÁîüÊàê‰∏Ä‰∏™ËôöÊãüÂÆπÂô®„ÄÇÁ®ãÂ∫èÂú®Ëøô‰∏™ËôöÊãüÂÆπÂô®ÈáåËøêË°åÔºåÂ∞±Â•ΩÂÉèÂú®ÁúüÂÆûÁöÑÁâ©ÁêÜÊú∫‰∏äËøêË°å‰∏ÄÊ†∑„ÄÇÊúâ‰∫Ü DockerÔºåÂ∞±‰∏çÁî®ÊãÖÂøÉÁéØÂ¢ÉÈóÆÈ¢ò„ÄÇ ÊÄª‰ΩìÊù•ËØ¥ÔºåDocker ÁöÑÊé•Âè£Áõ∏ÂΩìÁÆÄÂçïÔºåÁî®Êà∑ÂèØ‰ª•Êñπ‰æøÂú∞ÂàõÂª∫Âíå‰ΩøÁî®ÂÆπÂô®ÔºåÊääËá™Â∑±ÁöÑÂ∫îÁî®ÊîæÂÖ•ÂÆπÂô®„ÄÇÂÆπÂô®ËøòÂèØ‰ª•ËøõË°åÁâàÊú¨ÁÆ°ÁêÜ„ÄÅÂ§çÂà∂„ÄÅÂàÜ‰∫´„ÄÅ‰øÆÊîπÔºåÂ∞±ÂÉèÁÆ°ÁêÜÊôÆÈÄöÁöÑ‰ª£Á†Å‰∏ÄÊ†∑„ÄÇ &nbsp; ‰∫î„ÄÅDocker ÁöÑÁî®ÈÄîDocker ÁöÑ‰∏ªË¶ÅÁî®ÈÄîÔºåÁõÆÂâçÊúâ‰∏âÂ§ßÁ±ª„ÄÇ Ôºà1ÔºâÊèê‰æõ‰∏ÄÊ¨°ÊÄßÁöÑÁéØÂ¢É„ÄÇÊØîÂ¶ÇÔºåÊú¨Âú∞ÊµãËØï‰ªñ‰∫∫ÁöÑËΩØ‰ª∂„ÄÅÊåÅÁª≠ÈõÜÊàêÁöÑÊó∂ÂÄôÊèê‰æõÂçïÂÖÉÊµãËØïÂíåÊûÑÂª∫ÁöÑÁéØÂ¢É„ÄÇ Ôºà2ÔºâÊèê‰æõÂºπÊÄßÁöÑ‰∫ëÊúçÂä°„ÄÇÂõ†‰∏∫ Docker ÂÆπÂô®ÂèØ‰ª•ÈöèÂºÄÈöèÂÖ≥ÔºåÂæàÈÄÇÂêàÂä®ÊÄÅÊâ©ÂÆπÂíåÁº©ÂÆπ„ÄÇ Ôºà3ÔºâÁªÑÂª∫ÂæÆÊúçÂä°Êû∂ÊûÑ„ÄÇÈÄöËøáÂ§ö‰∏™ÂÆπÂô®Ôºå‰∏ÄÂè∞Êú∫Âô®ÂèØ‰ª•Ë∑ëÂ§ö‰∏™ÊúçÂä°ÔºåÂõ†Ê≠§Âú®Êú¨Êú∫Â∞±ÂèØ‰ª•Ê®°ÊãüÂá∫ÂæÆÊúçÂä°Êû∂ÊûÑ„ÄÇ &nbsp; ÂÖ≠„ÄÅDocker ÁöÑÂÆâË£ÖDocker ÊòØ‰∏Ä‰∏™ÂºÄÊ∫êÁöÑÂïÜ‰∏ö‰∫ßÂìÅÔºåÊúâ‰∏§‰∏™ÁâàÊú¨ÔºöÁ§æÂå∫ÁâàÔºàCommunity EditionÔºåÁº©ÂÜô‰∏∫ CEÔºâÂíå‰ºÅ‰∏öÁâàÔºàEnterprise EditionÔºåÁº©ÂÜô‰∏∫ EEÔºâ„ÄÇ‰ºÅ‰∏öÁâàÂåÖÂê´‰∫Ü‰∏Ä‰∫õÊî∂Ë¥πÊúçÂä°Ôºå‰∏™‰∫∫ÂºÄÂèëËÄÖ‰∏ÄËà¨Áî®‰∏çÂà∞„ÄÇ‰∏ãÈù¢ÁöÑ‰ªãÁªçÈÉΩÈíàÂØπÁ§æÂå∫Áâà„ÄÇ Docker CE ÁöÑÂÆâË£ÖËØ∑ÂèÇËÄÉÂÆòÊñπÊñáÊ°£„ÄÇ ÂÆâË£ÖÂÆåÊàêÂêéÔºåËøêË°å‰∏ãÈù¢ÁöÑÂëΩ‰ª§ÔºåÈ™åËØÅÊòØÂê¶ÂÆâË£ÖÊàêÂäü„ÄÇ $ docker version ÊàñËÄÖ$ docker info Docker ÈúÄË¶ÅÁî®Êà∑ÂÖ∑Êúâ sudo ÊùÉÈôêÔºå‰∏∫‰∫ÜÈÅøÂÖçÊØèÊ¨°ÂëΩ‰ª§ÈÉΩËæìÂÖ•sudoÔºåÂèØ‰ª•ÊääÁî®Êà∑Âä†ÂÖ• Docker Áî®Êà∑ÁªÑÔºàÂÆòÊñπÊñáÊ°£Ôºâ„ÄÇ $ sudo usermod -aG docker$USER Docker ÊòØÊúçÂä°Âô®‚Äî‚ÄîÂÆ¢Êà∑Á´ØÊû∂ÊûÑ„ÄÇÂëΩ‰ª§Ë°åËøêË°ådockerÂëΩ‰ª§ÁöÑÊó∂ÂÄôÔºåÈúÄË¶ÅÊú¨Êú∫Êúâ Docker ÊúçÂä°„ÄÇÂ¶ÇÊûúËøôÈ°πÊúçÂä°Ê≤°ÊúâÂêØÂä®ÔºåÂèØ‰ª•Áî®‰∏ãÈù¢ÁöÑÂëΩ‰ª§ÂêØÂä®ÔºàÂÆòÊñπÊñáÊ°£Ôºâ„ÄÇ # service ÂëΩ‰ª§ÁöÑÁî®Ê≥ï$ sudo service docker start # systemctl ÂëΩ‰ª§ÁöÑÁî®Ê≥ï$ sudo systemctl start docker &nbsp; ‰∏É„ÄÅimage Êñá‰ª∂Docker ÊääÂ∫îÁî®Á®ãÂ∫èÂèäÂÖ∂‰æùËµñÔºåÊâìÂåÖÂú® image Êñá‰ª∂ÈáåÈù¢„ÄÇÂè™ÊúâÈÄöËøáËøô‰∏™Êñá‰ª∂ÔºåÊâçËÉΩÁîüÊàê Docker ÂÆπÂô®„ÄÇimage Êñá‰ª∂ÂèØ‰ª•Áúã‰ΩúÊòØÂÆπÂô®ÁöÑÊ®°Êùø„ÄÇDocker Ê†πÊçÆ image Êñá‰ª∂ÁîüÊàêÂÆπÂô®ÁöÑÂÆû‰æã„ÄÇÂêå‰∏Ä‰∏™ image Êñá‰ª∂ÔºåÂèØ‰ª•ÁîüÊàêÂ§ö‰∏™ÂêåÊó∂ËøêË°åÁöÑÂÆπÂô®ÂÆû‰æã„ÄÇ image ÊòØ‰∫åËøõÂà∂Êñá‰ª∂„ÄÇÂÆûÈôÖÂºÄÂèë‰∏≠Ôºå‰∏Ä‰∏™ image Êñá‰ª∂ÂæÄÂæÄÈÄöËøáÁªßÊâøÂè¶‰∏Ä‰∏™ image Êñá‰ª∂ÔºåÂä†‰∏ä‰∏Ä‰∫õ‰∏™ÊÄßÂåñËÆæÁΩÆËÄåÁîüÊàê„ÄÇ‰∏æ‰æãÊù•ËØ¥Ôºå‰Ω†ÂèØ‰ª•Âú® Ubuntu ÁöÑ image Âü∫Á°Ä‰∏äÔºåÂæÄÈáåÈù¢Âä†ÂÖ• Apache ÊúçÂä°Âô®ÔºåÂΩ¢Êàê‰Ω†ÁöÑ image„ÄÇ # ÂàóÂá∫Êú¨Êú∫ÁöÑÊâÄÊúâ image Êñá‰ª∂Ôºö$ docker image ls # Âà†Èô§ image Êñá‰ª∂Ôºö$ docker image rm [IMAGE ID] image Êñá‰ª∂ÊòØÈÄöÁî®ÁöÑÔºå‰∏ÄÂè∞Êú∫Âô®ÁöÑ image Êñá‰ª∂Êã∑Ë¥ùÂà∞Âè¶‰∏ÄÂè∞Êú∫Âô®ÔºåÁÖßÊ†∑ÂèØ‰ª•‰ΩøÁî®„ÄÇ‰∏ÄËà¨Êù•ËØ¥Ôºå‰∏∫‰∫ÜËäÇÁúÅÊó∂Èó¥ÔºåÊàë‰ª¨Â∫îËØ•Â∞ΩÈáè‰ΩøÁî®Âà´‰∫∫Âà∂‰ΩúÂ•ΩÁöÑ image Êñá‰ª∂ÔºåËÄå‰∏çÊòØËá™Â∑±Âà∂‰Ωú„ÄÇÂç≥‰ΩøË¶ÅÂÆöÂà∂Ôºå‰πüÂ∫îËØ•Âü∫‰∫éÂà´‰∫∫ÁöÑ image Êñá‰ª∂ËøõË°åÂä†Â∑•ÔºåËÄå‰∏çÊòØ‰ªéÈõ∂ÂºÄÂßãÂà∂‰Ωú„ÄÇ ‰∏∫‰∫ÜÊñπ‰æøÂÖ±‰∫´Ôºåimage Êñá‰ª∂Âà∂‰ΩúÂÆåÊàêÂêéÔºåÂèØ‰ª•‰∏ä‰º†Âà∞ÁΩë‰∏äÁöÑ‰ªìÂ∫ì„ÄÇDocker ÁöÑÂÆòÊñπ‰ªìÂ∫ìDocker HubÊòØÊúÄÈáçË¶Å„ÄÅÊúÄÂ∏∏Áî®ÁöÑ image ‰ªìÂ∫ì„ÄÇÊ≠§Â§ñÔºåÂá∫ÂîÆËá™Â∑±Âà∂‰ΩúÁöÑ image Êñá‰ª∂‰πüÊòØÂèØ‰ª•ÁöÑ„ÄÇ &nbsp; ÂÖ´„ÄÅÂÆû‰æãÔºöhello world‰∏ãÈù¢ÔºåÊàë‰ª¨ÈÄöËøáÊúÄÁÆÄÂçïÁöÑ image Êñá‰ª∂‚Äùhello world‚ÄùÔºåÊÑüÂèó‰∏Ä‰∏ã Docker„ÄÇ È¶ñÂÖàÔºåËøêË°å‰∏ãÈù¢ÁöÑÂëΩ‰ª§ÔºåÂ∞Ü image Êñá‰ª∂‰ªé‰ªìÂ∫ìÊäìÂèñÂà∞Êú¨Âú∞„ÄÇ $ docker image pull library/hello-world ‰∏äÈù¢‰ª£Á†Å‰∏≠Ôºådocker image pullÊòØÊäìÂèñ image Êñá‰ª∂ÁöÑÂëΩ‰ª§„ÄÇlibrary/hello-worldÊòØ image Êñá‰ª∂Âú®‰ªìÂ∫ìÈáåÈù¢ÁöÑ‰ΩçÁΩÆÔºåÂÖ∂‰∏≠libraryÊòØ image Êñá‰ª∂ÊâÄÂú®ÁöÑÁªÑÔºåhello-worldÊòØ image Êñá‰ª∂ÁöÑÂêçÂ≠ó„ÄÇ Áî±‰∫é Docker ÂÆòÊñπÊèê‰æõÁöÑ image Êñá‰ª∂ÔºåÈÉΩÊîæÂú®libraryÁªÑÈáåÈù¢ÔºåÊâÄ‰ª•ÂÆÉÁöÑÊòØÈªòËÆ§ÁªÑÔºåÂèØ‰ª•ÁúÅÁï•„ÄÇÂõ†Ê≠§Ôºå‰∏äÈù¢ÁöÑÂëΩ‰ª§ÂèØ‰ª•ÂÜôÊàê‰∏ãÈù¢ËøôÊ†∑„ÄÇ $ docker image pull hello-world ÊäìÂèñÊàêÂäü‰ª•ÂêéÔºåÂ∞±ÂèØ‰ª•Âú®Êú¨Êú∫ÁúãÂà∞Ëøô‰∏™ image Êñá‰ª∂‰∫Ü„ÄÇ $ docker image ls Áé∞Âú®ÔºåËøêË°åËøô‰∏™ image Êñá‰ª∂„ÄÇ $ docker container run hello-world docker container runÂëΩ‰ª§‰ºö‰ªé image Êñá‰ª∂ÔºåÁîüÊàê‰∏Ä‰∏™Ê≠£Âú®ËøêË°åÁöÑÂÆπÂô®ÂÆû‰æã„ÄÇ Ê≥®ÊÑèÔºådocker container runÂëΩ‰ª§ÂÖ∑ÊúâËá™Âä®ÊäìÂèñ image Êñá‰ª∂ÁöÑÂäüËÉΩ„ÄÇÂ¶ÇÊûúÂèëÁé∞Êú¨Âú∞Ê≤°ÊúâÊåáÂÆöÁöÑ image Êñá‰ª∂ÔºåÂ∞±‰ºö‰ªé‰ªìÂ∫ìËá™Âä®ÊäìÂèñ„ÄÇÂõ†Ê≠§ÔºåÂâçÈù¢ÁöÑdocker image pullÂëΩ‰ª§Âπ∂‰∏çÊòØÂøÖÈúÄÁöÑÊ≠•È™§„ÄÇ Â¶ÇÊûúËøêË°åÊàêÂäüÔºå‰Ω†‰ºöÂú®Â±èÂπï‰∏äËØªÂà∞‰∏ãÈù¢ÁöÑËæìÂá∫„ÄÇ $ docker container run hello-worldHello from Docker!This message shows that your installation appears to be working correctly....... ËæìÂá∫ËøôÊÆµÊèêÁ§∫‰ª•ÂêéÔºåhello worldÂ∞±‰ºöÂÅúÊ≠¢ËøêË°åÔºåÂÆπÂô®Ëá™Âä®ÁªàÊ≠¢„ÄÇ Êúâ‰∫õÂÆπÂô®‰∏ç‰ºöËá™Âä®ÁªàÊ≠¢ÔºåÂõ†‰∏∫Êèê‰æõÁöÑÊòØÊúçÂä°„ÄÇÊØîÂ¶ÇÔºåÂÆâË£ÖËøêË°å Ubuntu ÁöÑ imageÔºåÂ∞±ÂèØ‰ª•Âú®ÂëΩ‰ª§Ë°å‰ΩìÈ™å Ubuntu Á≥ªÁªü„ÄÇ $ docker container run-it ubuntu bash ÂØπ‰∫éÈÇ£‰∫õ‰∏ç‰ºöËá™Âä®ÁªàÊ≠¢ÁöÑÂÆπÂô®ÔºåÂøÖÈ°ª‰ΩøÁî®docker container killÂëΩ‰ª§ÊâãÂä®ÁªàÊ≠¢„ÄÇ $ docker container kill [containerID] &nbsp; ‰πù„ÄÅÂÆπÂô®Êñá‰ª∂image Êñá‰ª∂ÁîüÊàêÁöÑÂÆπÂô®ÂÆû‰æãÔºåÊú¨Ë∫´‰πüÊòØ‰∏Ä‰∏™Êñá‰ª∂ÔºåÁß∞‰∏∫ÂÆπÂô®Êñá‰ª∂„ÄÇ‰πüÂ∞±ÊòØËØ¥Ôºå‰∏ÄÊó¶ÂÆπÂô®ÁîüÊàêÔºåÂ∞±‰ºöÂêåÊó∂Â≠òÂú®‰∏§‰∏™Êñá‰ª∂Ôºö image Êñá‰ª∂ÂíåÂÆπÂô®Êñá‰ª∂„ÄÇËÄå‰∏îÂÖ≥Èó≠ÂÆπÂô®Âπ∂‰∏ç‰ºöÂà†Èô§ÂÆπÂô®Êñá‰ª∂ÔºåÂè™ÊòØÂÆπÂô®ÂÅúÊ≠¢ËøêË°åËÄåÂ∑≤„ÄÇ # ÂàóÂá∫Êú¨Êú∫Ê≠£Âú®ËøêË°åÁöÑÂÆπÂô®$ docker container ls # ÂàóÂá∫Êú¨Êú∫ÊâÄÊúâÂÆπÂô®ÔºåÂåÖÊã¨ÁªàÊ≠¢ËøêË°åÁöÑÂÆπÂô®$ docker container ls--all ‰∏äÈù¢ÂëΩ‰ª§ÁöÑËæìÂá∫ÁªìÊûú‰πã‰∏≠ÔºåÂåÖÊã¨ÂÆπÂô®ÁöÑ ID„ÄÇÂæàÂ§öÂú∞ÊñπÈÉΩÈúÄË¶ÅÊèê‰æõËøô‰∏™ IDÔºåÊØîÂ¶Ç‰∏ä‰∏ÄËäÇÁªàÊ≠¢ÂÆπÂô®ËøêË°åÁöÑdocker container killÂëΩ‰ª§„ÄÇ ÁªàÊ≠¢ËøêË°åÁöÑÂÆπÂô®Êñá‰ª∂Ôºå‰æùÁÑ∂‰ºöÂç†ÊçÆÁ°¨ÁõòÁ©∫Èó¥ÔºåÂèØ‰ª•‰ΩøÁî®docker container rmÂëΩ‰ª§Âà†Èô§„ÄÇ $ docker container rm[containerID] ËøêË°å‰∏äÈù¢ÁöÑÂëΩ‰ª§‰πãÂêéÔºåÂÜç‰ΩøÁî®docker container ls ‚ÄîallÂëΩ‰ª§ÔºåÂ∞±‰ºöÂèëÁé∞Ë¢´Âà†Èô§ÁöÑÂÆπÂô®Êñá‰ª∂Â∑≤ÁªèÊ∂àÂ§±‰∫Ü„ÄÇ &nbsp; ÂçÅ„ÄÅDockerfile Êñá‰ª∂Â≠¶‰ºö‰ΩøÁî® image Êñá‰ª∂‰ª•ÂêéÔºåÊé•‰∏ãÊù•ÁöÑÈóÆÈ¢òÂ∞±ÊòØÔºåÂ¶Ç‰ΩïÂèØ‰ª•ÁîüÊàê image Êñá‰ª∂ÔºüÂ¶ÇÊûú‰Ω†Ë¶ÅÊé®ÂπøËá™Â∑±ÁöÑËΩØ‰ª∂ÔºåÂäøÂøÖË¶ÅËá™Â∑±Âà∂‰Ωú image Êñá‰ª∂„ÄÇ ËøôÂ∞±ÈúÄË¶ÅÁî®Âà∞ Dockerfile Êñá‰ª∂„ÄÇÂÆÉÊòØ‰∏Ä‰∏™ÊñáÊú¨Êñá‰ª∂ÔºåÁî®Êù•ÈÖçÁΩÆ image„ÄÇDocker Ê†πÊçÆ ËØ•Êñá‰ª∂ÁîüÊàê‰∫åËøõÂà∂ÁöÑ image Êñá‰ª∂„ÄÇ ‰∏ãÈù¢ÈÄöËøá‰∏Ä‰∏™ÂÆû‰æãÔºåÊºîÁ§∫Â¶Ç‰ΩïÁºñÂÜô Dockerfile Êñá‰ª∂„ÄÇ &nbsp; ÂçÅ‰∏Ä„ÄÅÂÆû‰æãÔºöÂà∂‰ΩúËá™Â∑±ÁöÑ Docker ÂÆπÂô®‰∏ãÈù¢Êàë‰ª•koa-demosÈ°πÁõÆ‰∏∫‰æãÔºå‰ªãÁªçÊÄé‰πàÂÜô Dockerfile Êñá‰ª∂ÔºåÂÆûÁé∞ËÆ©Áî®Êà∑Âú® Docker ÂÆπÂô®ÈáåÈù¢ËøêË°å Koa Ê°ÜÊû∂„ÄÇ ‰Ωú‰∏∫ÂáÜÂ§áÂ∑•‰ΩúÔºåËØ∑ÂÖà‰∏ãËΩΩÊ∫êÁ†Å„ÄÇ $ git clone https://github.com/ruanyf/koa-demos.git $ cd koa-demos 11.1 ÁºñÂÜô Dockerfile Êñá‰ª∂ È¶ñÂÖàÔºåÂú®È°πÁõÆÁöÑÊ†πÁõÆÂΩï‰∏ãÔºåÊñ∞Âª∫‰∏Ä‰∏™ÊñáÊú¨Êñá‰ª∂.dockerignoreÔºåÂÜôÂÖ•‰∏ãÈù¢ÁöÑÂÜÖÂÆπ„ÄÇ .gitnode_modulesnpm-debug.log ‰∏äÈù¢‰ª£Á†ÅË°®Á§∫ÔºåËøô‰∏â‰∏™Ë∑ØÂæÑË¶ÅÊéíÈô§Ôºå‰∏çË¶ÅÊâìÂåÖËøõÂÖ• image Êñá‰ª∂„ÄÇÂ¶ÇÊûú‰Ω†Ê≤°ÊúâË∑ØÂæÑË¶ÅÊéíÈô§ÔºåËøô‰∏™Êñá‰ª∂ÂèØ‰ª•‰∏çÊñ∞Âª∫„ÄÇ ÁÑ∂ÂêéÔºåÂú®È°πÁõÆÁöÑÊ†πÁõÆÂΩï‰∏ãÔºåÊñ∞Âª∫‰∏Ä‰∏™ÊñáÊú¨Êñá‰ª∂ DockerfileÔºåÂÜôÂÖ•‰∏ãÈù¢ÁöÑÂÜÖÂÆπ„ÄÇ FROM node:8.4COPY./appWORKDIR/appRUN npm install‚Äîregistry=https://registry.npm.taobao.orgEXPOSE3000 ‰∏äÈù¢‰ª£Á†Å‰∏ÄÂÖ±‰∫îË°åÔºåÂê´‰πâÂ¶Ç‰∏ã„ÄÇ FROM node:8.4ÔºöËØ• image Êñá‰ª∂ÁªßÊâøÂÆòÊñπÁöÑ node imageÔºåÂÜíÂè∑Ë°®Á§∫Ê†áÁ≠æÔºåËøôÈáåÊ†áÁ≠æÊòØ8.4ÔºåÂç≥8.4ÁâàÊú¨ÁöÑ node„ÄÇ COPY . /appÔºöÂ∞ÜÂΩìÂâçÁõÆÂΩï‰∏ãÁöÑÊâÄÊúâÊñá‰ª∂ÔºàÈô§‰∫Ü.dockerignoreÊéíÈô§ÁöÑË∑ØÂæÑÔºâÔºåÈÉΩÊã∑Ë¥ùËøõÂÖ• image Êñá‰ª∂ÁöÑ/appÁõÆÂΩï„ÄÇ WORKDIR /appÔºöÊåáÂÆöÊé•‰∏ãÊù•ÁöÑÂ∑•‰ΩúË∑ØÂæÑ‰∏∫/app„ÄÇ RUN npm installÔºöÂú®/appÁõÆÂΩï‰∏ãÔºåËøêË°ånpm installÂëΩ‰ª§ÂÆâË£Ö‰æùËµñ„ÄÇÊ≥®ÊÑèÔºåÂÆâË£ÖÂêéÊâÄÊúâÁöÑ‰æùËµñÔºåÈÉΩÂ∞ÜÊâìÂåÖËøõÂÖ• image Êñá‰ª∂„ÄÇ EXPOSE 3000ÔºöÂ∞ÜÂÆπÂô® 3000 Á´ØÂè£Êö¥Èú≤Âá∫Êù•Ôºå ÂÖÅËÆ∏Â§ñÈÉ®ËøûÊé•Ëøô‰∏™Á´ØÂè£„ÄÇ 11.2 ÂàõÂª∫ image Êñá‰ª∂ Êúâ‰∫Ü Dockerfile Êñá‰ª∂‰ª•ÂêéÔºåÂ∞±ÂèØ‰ª•‰ΩøÁî®docker image buildÂëΩ‰ª§ÂàõÂª∫ image Êñá‰ª∂‰∫Ü„ÄÇ $ docker image build-t koa-demo. # ÊàñËÄÖ$ docker image build-t koa-demo:0.0.1. ‰∏äÈù¢‰ª£Á†Å‰∏≠Ôºå-tÂèÇÊï∞Áî®Êù•ÊåáÂÆö image Êñá‰ª∂ÁöÑÂêçÂ≠óÔºåÂêéÈù¢ËøòÂèØ‰ª•Áî®ÂÜíÂè∑ÊåáÂÆöÊ†áÁ≠æ„ÄÇÂ¶ÇÊûú‰∏çÊåáÂÆöÔºåÈªòËÆ§ÁöÑÊ†áÁ≠æÂ∞±ÊòØlatest„ÄÇÊúÄÂêéÁöÑÈÇ£‰∏™ÁÇπË°®Á§∫ Dockerfile Êñá‰ª∂ÊâÄÂú®ÁöÑË∑ØÂæÑÔºå‰∏ä‰æãÊòØÂΩìÂâçË∑ØÂæÑÔºåÊâÄ‰ª•ÊòØ‰∏Ä‰∏™ÁÇπ„ÄÇ Â¶ÇÊûúËøêË°åÊàêÂäüÔºåÂ∞±ÂèØ‰ª•ÁúãÂà∞Êñ∞ÁîüÊàêÁöÑ image Êñá‰ª∂koa-demo‰∫Ü„ÄÇ $ docker image ls 11.3 ÁîüÊàêÂÆπÂô® docker container runÂëΩ‰ª§‰ºö‰ªé image Êñá‰ª∂ÁîüÊàêÂÆπÂô®„ÄÇ $ docker container run-p8000:3000-it koa-demo/bin/bash # ÊàñËÄÖ$ docker container run-p8000:3000-it koa-demo:0.0.1/bin/bash ‰∏äÈù¢ÂëΩ‰ª§ÁöÑÂêÑ‰∏™ÂèÇÊï∞Âê´‰πâÂ¶Ç‰∏ãÔºö -pÂèÇÊï∞ÔºöÂÆπÂô®ÁöÑ 3000 Á´ØÂè£Êò†Â∞ÑÂà∞Êú¨Êú∫ÁöÑ 8000 Á´ØÂè£„ÄÇ -itÂèÇÊï∞ÔºöÂÆπÂô®ÁöÑ Shell Êò†Â∞ÑÂà∞ÂΩìÂâçÁöÑ ShellÔºåÁÑ∂Âêé‰Ω†Âú®Êú¨Êú∫Á™óÂè£ËæìÂÖ•ÁöÑÂëΩ‰ª§ÔºåÂ∞±‰ºö‰º†ÂÖ•ÂÆπÂô®„ÄÇ koa-demo:0.0.1Ôºöimage Êñá‰ª∂ÁöÑÂêçÂ≠óÔºàÂ¶ÇÊûúÊúâÊ†áÁ≠æÔºåËøòÈúÄË¶ÅÊèê‰æõÊ†áÁ≠æÔºåÈªòËÆ§ÊòØ latest Ê†áÁ≠æÔºâ„ÄÇ /bin/bashÔºöÂÆπÂô®ÂêØÂä®‰ª•ÂêéÔºåÂÜÖÈÉ®Á¨¨‰∏Ä‰∏™ÊâßË°åÁöÑÂëΩ‰ª§„ÄÇËøôÈáåÊòØÂêØÂä® BashÔºå‰øùËØÅÁî®Êà∑ÂèØ‰ª•‰ΩøÁî® Shell„ÄÇ Â¶ÇÊûú‰∏ÄÂàáÊ≠£Â∏∏ÔºåËøêË°å‰∏äÈù¢ÁöÑÂëΩ‰ª§‰ª•ÂêéÔºåÂ∞±‰ºöËøîÂõû‰∏Ä‰∏™ÂëΩ‰ª§Ë°åÊèêÁ§∫Á¨¶„ÄÇ root@66d80f4aaf1e:/app# ËøôË°®Á§∫‰Ω†Â∑≤ÁªèÂú®ÂÆπÂô®ÈáåÈù¢‰∫ÜÔºåËøîÂõûÁöÑÊèêÁ§∫Á¨¶Â∞±ÊòØÂÆπÂô®ÂÜÖÈÉ®ÁöÑ Shell ÊèêÁ§∫Á¨¶„ÄÇÊâßË°å‰∏ãÈù¢ÁöÑÂëΩ‰ª§„ÄÇ root@66d80f4aaf1e:/app# node demos/01.js ËøôÊó∂ÔºåKoa Ê°ÜÊû∂Â∑≤ÁªèËøêË°åËµ∑Êù•‰∫Ü„ÄÇÊâìÂºÄÊú¨Êú∫ÁöÑÊµèËßàÂô®ÔºåËÆøÈóÆ http://127.0.0.1:8000ÔºåÁΩëÈ°µÊòæÁ§∫&quot;Not Found‚ÄùÔºåËøôÊòØÂõ†‰∏∫Ëøô‰∏™demoÊ≤°ÊúâÂÜôË∑ØÁî±„ÄÇ Ëøô‰∏™‰æãÂ≠ê‰∏≠ÔºåNode ËøõÁ®ãËøêË°åÂú® Docker ÂÆπÂô®ÁöÑËôöÊãüÁéØÂ¢ÉÈáåÈù¢ÔºåËøõÁ®ãÊé•Ëß¶Âà∞ÁöÑÊñá‰ª∂Á≥ªÁªüÂíåÁΩëÁªúÊé•Âè£ÈÉΩÊòØËôöÊãüÁöÑÔºå‰∏éÊú¨Êú∫ÁöÑÊñá‰ª∂Á≥ªÁªüÂíåÁΩëÁªúÊé•Âè£ÊòØÈöîÁ¶ªÁöÑÔºåÂõ†Ê≠§ÈúÄË¶ÅÂÆö‰πâÂÆπÂô®‰∏éÁâ©ÁêÜÊú∫ÁöÑÁ´ØÂè£Êò†Â∞ÑÔºàmapÔºâ„ÄÇ Áé∞Âú®ÔºåÂú®ÂÆπÂô®ÁöÑÂëΩ‰ª§Ë°åÔºåÊåâ‰∏ã Ctrl + c ÂÅúÊ≠¢ Node ËøõÁ®ãÔºåÁÑ∂ÂêéÊåâ‰∏ã Ctrl + d ÔºàÊàñËÄÖËæìÂÖ• exitÔºâÈÄÄÂá∫ÂÆπÂô®„ÄÇÊ≠§Â§ñÔºå‰πüÂèØ‰ª•Áî®docker container killÁªàÊ≠¢ÂÆπÂô®ËøêË°å„ÄÇ # Âú®Êú¨Êú∫ÁöÑÂè¶‰∏Ä‰∏™ÁªàÁ´ØÁ™óÂè£ÔºåÊü•Âá∫ÂÆπÂô®ÁöÑ IDÔºö$ docker container ls # ÂÅúÊ≠¢ÊåáÂÆöÁöÑÂÆπÂô®ËøêË°å$ docker container kill[containerID] ÂÆπÂô®ÂÅúÊ≠¢ËøêË°å‰πãÂêéÔºåÂπ∂‰∏ç‰ºöÊ∂àÂ§±ÔºåÁî®‰∏ãÈù¢ÁöÑÂëΩ‰ª§Âà†Èô§ÂÆπÂô®Êñá‰ª∂„ÄÇ # Êü•Âá∫ÂÆπÂô®ÁöÑ IDÔºö$ docker container ls--all # Âà†Èô§ÊåáÂÆöÁöÑÂÆπÂô®Êñá‰ª∂Ôºö$ docker container rm[containerID] ‰πüÂèØ‰ª•‰ΩøÁî®docker container runÂëΩ‰ª§ÁöÑ‚ÄîrmÂèÇÊï∞ÔºåÂú®ÂÆπÂô®ÁªàÊ≠¢ËøêË°åÂêéËá™Âä®Âà†Èô§ÂÆπÂô®Êñá‰ª∂„ÄÇ $ docker container run--rm-p8000:3000-it koa-demo/bin/bash 11.4 CMD ÂëΩ‰ª§ ‰∏ä‰∏ÄËäÇÁöÑ‰æãÂ≠êÈáåÈù¢ÔºåÂÆπÂô®ÂêØÂä®‰ª•ÂêéÔºåÈúÄË¶ÅÊâãÂä®ËæìÂÖ•ÂëΩ‰ª§node demos/01.js„ÄÇÊàë‰ª¨ÂèØ‰ª•ÊääËøô‰∏™ÂëΩ‰ª§ÂÜôÂú® Dockerfile ÈáåÈù¢ÔºåËøôÊ†∑ÂÆπÂô®ÂêØÂä®‰ª•ÂêéÔºåËøô‰∏™ÂëΩ‰ª§Â∞±Â∑≤ÁªèÊâßË°å‰∫ÜÔºå‰∏çÁî®ÂÜçÊâãÂä®ËæìÂÖ•‰∫Ü„ÄÇ FROM node:8.4COPY./appWORKDIR/appRUN npm install‚Äîregistry=https://registry.npm.taobao.orgEXPOSE3000CMD node demos/01.js ‰∏äÈù¢ÁöÑ Dockerfile ÈáåÈù¢ÔºåÂ§ö‰∫ÜÊúÄÂêé‰∏ÄË°åCMD node demos/01.jsÔºåÂÆÉË°®Á§∫ÂÆπÂô®ÂêØÂä®ÂêéËá™Âä®ÊâßË°ånode demos/01.js„ÄÇ ‰Ω†ÂèØËÉΩ‰ºöÈóÆÔºåRUNÂëΩ‰ª§‰∏éCMDÂëΩ‰ª§ÁöÑÂå∫Âà´Âú®Âì™ÈáåÔºüÁÆÄÂçïËØ¥ÔºåRUNÂëΩ‰ª§Âú® image Êñá‰ª∂ÁöÑÊûÑÂª∫Èò∂ÊÆµÊâßË°åÔºåÊâßË°åÁªìÊûúÈÉΩ‰ºöÊâìÂåÖËøõÂÖ• image Êñá‰ª∂ÔºõCMDÂëΩ‰ª§ÂàôÊòØÂú®ÂÆπÂô®ÂêØÂä®ÂêéÊâßË°å„ÄÇÂè¶Â§ñÔºå‰∏Ä‰∏™ Dockerfile ÂèØ‰ª•ÂåÖÂê´Â§ö‰∏™RUNÂëΩ‰ª§Ôºå‰ΩÜÊòØÂè™ËÉΩÊúâ‰∏Ä‰∏™CMDÂëΩ‰ª§„ÄÇ Ê≥®ÊÑèÔºåÊåáÂÆö‰∫ÜCMDÂëΩ‰ª§‰ª•ÂêéÔºådocker container runÂëΩ‰ª§Â∞±‰∏çËÉΩÈôÑÂä†ÂëΩ‰ª§‰∫ÜÔºàÊØîÂ¶ÇÂâçÈù¢ÁöÑ/bin/bashÔºâÔºåÂê¶ÂàôÂÆÉ‰ºöË¶ÜÁõñCMDÂëΩ‰ª§„ÄÇÁé∞Âú®ÔºåÂêØÂä®ÂÆπÂô®ÂèØ‰ª•‰ΩøÁî®‰∏ãÈù¢ÁöÑÂëΩ‰ª§„ÄÇ $ docker container run--rm-p8000:3000-it koa-demo:0.0.1 11.5 ÂèëÂ∏É image Êñá‰ª∂ ÂÆπÂô®ËøêË°åÊàêÂäüÂêéÔºåÂ∞±Á°ÆËÆ§‰∫Ü image Êñá‰ª∂ÁöÑÊúâÊïàÊÄß„ÄÇËøôÊó∂ÔºåÊàë‰ª¨Â∞±ÂèØ‰ª•ËÄÉËôëÊää image Êñá‰ª∂ÂàÜ‰∫´Âà∞ÁΩë‰∏äÔºåËÆ©ÂÖ∂‰ªñ‰∫∫‰ΩøÁî®„ÄÇ È¶ñÂÖàÔºåÂéªhub.docker.comÊàñcloud.docker.comÊ≥®ÂÜå‰∏Ä‰∏™Ë¥¶Êà∑„ÄÇÁÑ∂ÂêéÔºåÁî®‰∏ãÈù¢ÁöÑÂëΩ‰ª§ÁôªÂΩï„ÄÇ $ docker login Êé•ÁùÄÔºå‰∏∫Êú¨Âú∞ÁöÑ image Ê†áÊ≥®Áî®Êà∑ÂêçÂíåÁâàÊú¨„ÄÇ $ docker image tag[imageName][username]/[repository]:[tag] # ÂÆû‰æã$ docker image tag koa-demos:0.0.1ruanyf/koa-demos:0.0.1 ‰πüÂèØ‰ª•‰∏çÊ†áÊ≥®Áî®Êà∑ÂêçÔºåÈáçÊñ∞ÊûÑÂª∫‰∏Ä‰∏ã image Êñá‰ª∂„ÄÇ $ docker image build-t[username]/[repository]:[tag]. ÊúÄÂêéÔºåÂèëÂ∏É image Êñá‰ª∂„ÄÇ $ docker image push[username]/[repository]:[tag] ÂèëÂ∏ÉÊàêÂäü‰ª•ÂêéÔºåÁôªÂΩï hub.docker.comÔºåÂ∞±ÂèØ‰ª•ÁúãÂà∞Â∑≤ÁªèÂèëÂ∏ÉÁöÑ image Êñá‰ª∂„ÄÇ &nbsp; ÂçÅ‰∫å„ÄÅÂÖ∂‰ªñÊúâÁî®ÁöÑÂëΩ‰ª§docker ÁöÑ‰∏ªË¶ÅÁî®Ê≥ïÂ∞±ÊòØ‰∏äÈù¢Ëøô‰∫õÔºåÊ≠§Â§ñËøòÊúâÂá†‰∏™ÂëΩ‰ª§Ôºå‰πüÈùûÂ∏∏ÊúâÁî®„ÄÇ Ôºà1Ôºâdocker container start ÂâçÈù¢ÁöÑdocker container runÂëΩ‰ª§ÊòØÊñ∞Âª∫ÂÆπÂô®ÔºåÊØèËøêË°å‰∏ÄÊ¨°ÔºåÂ∞±‰ºöÊñ∞Âª∫‰∏Ä‰∏™ÂÆπÂô®„ÄÇÂêåÊ†∑ÁöÑÂëΩ‰ª§ËøêË°å‰∏§Ê¨°ÔºåÂ∞±‰ºöÁîüÊàê‰∏§‰∏™‰∏ÄÊ®°‰∏ÄÊ†∑ÁöÑÂÆπÂô®Êñá‰ª∂„ÄÇÂ¶ÇÊûúÂ∏åÊúõÈáçÂ§ç‰ΩøÁî®ÂÆπÂô®ÔºåÂ∞±Ë¶Å‰ΩøÁî®docker container startÂëΩ‰ª§ÔºåÂÆÉÁî®Êù•ÂêØÂä®Â∑≤ÁªèÁîüÊàê„ÄÅÂ∑≤ÁªèÂÅúÊ≠¢ËøêË°åÁöÑÂÆπÂô®Êñá‰ª∂„ÄÇ $ docker container start[containerID] Ôºà2Ôºâdocker container stop ÂâçÈù¢ÁöÑdocker container killÂëΩ‰ª§ÁªàÊ≠¢ÂÆπÂô®ËøêË°åÔºåÁõ∏ÂΩì‰∫éÂêëÂÆπÂô®ÈáåÈù¢ÁöÑ‰∏ªËøõÁ®ãÂèëÂá∫ SIGKILL ‰ø°Âè∑„ÄÇËÄådocker container stopÂëΩ‰ª§‰πüÊòØÁî®Êù•ÁªàÊ≠¢ÂÆπÂô®ËøêË°åÔºåÁõ∏ÂΩì‰∫éÂêëÂÆπÂô®ÈáåÈù¢ÁöÑ‰∏ªËøõÁ®ãÂèëÂá∫ SIGTERM ‰ø°Âè∑ÔºåÁÑ∂ÂêéËøá‰∏ÄÊÆµÊó∂Èó¥ÂÜçÂèëÂá∫ SIGKILL ‰ø°Âè∑„ÄÇ $ bash container stop[containerID] Ëøô‰∏§‰∏™‰ø°Âè∑ÁöÑÂ∑ÆÂà´ÊòØÔºåÂ∫îÁî®Á®ãÂ∫èÊî∂Âà∞ SIGTERM ‰ø°Âè∑‰ª•ÂêéÔºåÂèØ‰ª•Ëá™Ë°åËøõË°åÊî∂Â∞æÊ∏ÖÁêÜÂ∑•‰ΩúÔºå‰ΩÜ‰πüÂèØ‰ª•‰∏çÁêÜ‰ºöËøô‰∏™‰ø°Âè∑„ÄÇÂ¶ÇÊûúÊî∂Âà∞ SIGKILL ‰ø°Âè∑ÔºåÂ∞±‰ºöÂº∫Ë°åÁ´ãÂç≥ÁªàÊ≠¢ÔºåÈÇ£‰∫õÊ≠£Âú®ËøõË°å‰∏≠ÁöÑÊìç‰Ωú‰ºöÂÖ®ÈÉ®‰∏¢Â§±„ÄÇ Ôºà3Ôºâdocker container logs docker container logsÂëΩ‰ª§Áî®Êù•Êü•Áúã docker ÂÆπÂô®ÁöÑËæìÂá∫ÔºåÂç≥ÂÆπÂô®ÈáåÈù¢ Shell ÁöÑÊ†áÂáÜËæìÂá∫„ÄÇÂ¶ÇÊûúdocker runÂëΩ‰ª§ËøêË°åÂÆπÂô®ÁöÑÊó∂ÂÄôÔºåÊ≤°Êúâ‰ΩøÁî®-itÂèÇÊï∞ÔºåÂ∞±Ë¶ÅÁî®Ëøô‰∏™ÂëΩ‰ª§Êü•ÁúãËæìÂá∫„ÄÇ $ docker container logs[containerID] Ôºà4Ôºâdocker container exec docker container execÂëΩ‰ª§Áî®‰∫éËøõÂÖ•‰∏Ä‰∏™Ê≠£Âú®ËøêË°åÁöÑ docker ÂÆπÂô®„ÄÇÂ¶ÇÊûúdocker runÂëΩ‰ª§ËøêË°åÂÆπÂô®ÁöÑÊó∂ÂÄôÔºåÊ≤°Êúâ‰ΩøÁî®-itÂèÇÊï∞ÔºåÂ∞±Ë¶ÅÁî®Ëøô‰∏™ÂëΩ‰ª§ËøõÂÖ•ÂÆπÂô®„ÄÇ‰∏ÄÊó¶ËøõÂÖ•‰∫ÜÂÆπÂô®ÔºåÂ∞±ÂèØ‰ª•Âú®ÂÆπÂô®ÁöÑ Shell ÊâßË°åÂëΩ‰ª§‰∫Ü„ÄÇ $ docker container exec-it[containerID]/bin/bash Ôºà5Ôºâdocker container cp docker container cpÂëΩ‰ª§Áî®‰∫é‰ªéÊ≠£Âú®ËøêË°åÁöÑ Docker ÂÆπÂô®ÈáåÈù¢ÔºåÂ∞ÜÊñá‰ª∂Êã∑Ë¥ùÂà∞Êú¨Êú∫„ÄÇ‰∏ãÈù¢ÊòØÊã∑Ë¥ùÂà∞ÂΩìÂâçÁõÆÂΩïÁöÑÂÜôÊ≥ï„ÄÇ $ docker container cp[containID]:[/path/to/file]. ÔºàÂÆåÔºâ]]></content>
      <tags>
        <tag>ËΩ¨Âèë</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ËÑöÊú¨ÊµãËØï]]></title>
    <url>%2F2018%2F08%2F27%2FUntitled%2F</url>
    <content type="text"><![CDATA[12345678910111213141516171819202122232425//Ê∑ªÂä†Êã¶Êà™Âô®@Overridepublic void addInterceptors(InterceptorRegistry registry) &#123; //Êé•Âè£Á≠æÂêçËÆ§ËØÅÊã¶Êà™Âô®ÔºåËØ•Á≠æÂêçËÆ§ËØÅÊØîËæÉÁÆÄÂçïÔºåÂÆûÈôÖÈ°πÁõÆ‰∏≠ÂèØ‰ª•‰ΩøÁî®Json Web TokenÊàñÂÖ∂‰ªñÊõ¥Â•ΩÁöÑÊñπÂºèÊõø‰ª£„ÄÇ if (!"dev".equals(env)) &#123; //ÂºÄÂèëÁéØÂ¢ÉÂøΩÁï•Á≠æÂêçËÆ§ËØÅ registry.addInterceptor(new HandlerInterceptorAdapter() &#123; @Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception &#123; //È™åËØÅÁ≠æÂêç boolean pass = validateSign(request); if (pass) &#123; return true; &#125; else &#123; logger.warn("Á≠æÂêçËÆ§ËØÅÂ§±Ë¥•ÔºåËØ∑Ê±ÇÊé•Âè£Ôºö&#123;&#125;ÔºåËØ∑Ê±ÇIPÔºö&#123;&#125;ÔºåËØ∑Ê±ÇÂèÇÊï∞Ôºö&#123;&#125;", request.getRequestURI(), getIpAddress(request), JSON.toJSONString(request.getParameterMap())); Result result = new Result(); result.setCode(ResultCode.UNAUTHORIZED).setMessage("Á≠æÂêçËÆ§ËØÅÂ§±Ë¥•"); responseResult(response, result); return false; &#125; &#125; &#125;); &#125;&#125; 12345678910111213141516&lt;script src="https://unpkg.com/vue/dist/vue.js"&gt;&lt;/script&gt;&lt;script src="https://unpkg.com/vue-router/dist/vue-router.js"&gt;&lt;/script&gt;&lt;div id="app"&gt; &lt;h1&gt;Hello App!&lt;/h1&gt; &lt;p&gt; &lt;!-- ‰ΩøÁî® router-link ÁªÑ‰ª∂Êù•ÂØºËà™. --&gt; &lt;!-- ÈÄöËøá‰º†ÂÖ• `to` Â±ûÊÄßÊåáÂÆöÈìæÊé•. --&gt; &lt;!-- &lt;router-link&gt; ÈªòËÆ§‰ºöË¢´Ê∏≤ÊüìÊàê‰∏Ä‰∏™ `&lt;a&gt;` Ê†áÁ≠æ --&gt; &lt;router-link to="/foo"&gt;Go to Foo&lt;/router-link&gt; &lt;router-link to="/bar"&gt;Go to Bar&lt;/router-link&gt; &lt;/p&gt; &lt;!-- Ë∑ØÁî±Âá∫Âè£ --&gt; &lt;!-- Ë∑ØÁî±ÂåπÈÖçÂà∞ÁöÑÁªÑ‰ª∂Â∞ÜÊ∏≤ÊüìÂú®ËøôÈáå --&gt; &lt;router-view&gt;&lt;/router-view&gt;&lt;/div&gt; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546-- ÂàõÂª∫ÁßíÊùÄÂ∫ìÂ≠òË°®CREATE TABLE seckill ( seckill_id BIGINT NOT NULL AUTO_INCREMENT COMMENT 'ÂïÜÂìÅÂ∫ìÂ≠òid', NAME VARCHAR (120) NOT NULL COMMENT 'ÂïÜÂìÅÂêçÁß∞', number INT NOT NULL COMMENT 'Â∫ìÂ≠òÊï∞Èáè', start_time TIMESTAMP NOT NULL COMMENT 'ÁßíÊùÄÂºÄÂêØÊó∂Èó¥', end_time TIMESTAMP NOT NULL COMMENT 'ÁßíÊùÄÁªìÊùüÊó∂Èó¥', create_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'ÂàõÂª∫Êó∂Èó¥', PRIMARY KEY (seckill_id), KEY idx_start_time (start_time), KEY idx_end_time (end_time), KEY idx_create_time (create_time)) ENGINE = INNODB AUTO_INCREMENT = 1000 DEFAULT CHARSET = utf8 COMMENT = 'ÁßíÊùÄÂ∫ìÂ≠òË°®';-- ÂàùÂßãÂåñÊï∞ÊçÆINSERT INTO seckill ( NAME, number, start_time, end_time)VALUES ( '1000ÂÖÉÁßíÊùÄiphone6', 100, '2018-06-06 00:00:00', '2018-08-10 23:59:59' ), ( '1000ÂÖÉÁßíÊùÄipad2', 100, '2018-07-07 00:00:00', '2018-08-12 23:59:59' ), ( '1000ÂÖÉÁßíÊùÄÂ∞èÁ±≥4', 100, '2018-08-08 00:00:00', '2018-08-14 23:59:59' ), ( '1000ÂÖÉÁßíÊùÄÁ∫¢Á±≥note', 100, '2018-07-09 00:00:00', '2018-08-15 23:59:59' ); 12345678910111213141516171819202122232425262728293031// 0. Â¶ÇÊûú‰ΩøÁî®Ê®°ÂùóÂåñÊú∫Âà∂ÁºñÁ®ãÔºåÂØºÂÖ•VueÂíåVueRouterÔºåË¶ÅË∞ÉÁî® Vue.use(VueRouter)// 1. ÂÆö‰πâ (Ë∑ØÁî±) ÁªÑ‰ª∂„ÄÇ// ÂèØ‰ª•‰ªéÂÖ∂‰ªñÊñá‰ª∂ import ËøõÊù•const Foo = &#123; template: '&lt;div&gt;foo&lt;/div&gt;' &#125;const Bar = &#123; template: '&lt;div&gt;bar&lt;/div&gt;' &#125;// 2. ÂÆö‰πâË∑ØÁî±// ÊØè‰∏™Ë∑ØÁî±Â∫îËØ•Êò†Â∞Ñ‰∏Ä‰∏™ÁªÑ‰ª∂„ÄÇ ÂÖ∂‰∏≠"component" ÂèØ‰ª•ÊòØ// ÈÄöËøá Vue.extend() ÂàõÂª∫ÁöÑÁªÑ‰ª∂ÊûÑÈÄ†Âô®Ôºå// ÊàñËÄÖÔºåÂè™ÊòØ‰∏Ä‰∏™ÁªÑ‰ª∂ÈÖçÁΩÆÂØπË±°„ÄÇ// Êàë‰ª¨ÊôöÁÇπÂÜçËÆ®ËÆ∫ÂµåÂ•óË∑ØÁî±„ÄÇconst routes = [ &#123; path: '/foo', component: Foo &#125;, &#123; path: '/bar', component: Bar &#125;]// 3. ÂàõÂª∫ router ÂÆû‰æãÔºåÁÑ∂Âêé‰º† `routes` ÈÖçÁΩÆ// ‰Ω†ËøòÂèØ‰ª•‰º†Âà´ÁöÑÈÖçÁΩÆÂèÇÊï∞, ‰∏çËøáÂÖàËøô‰πàÁÆÄÂçïÁùÄÂêß„ÄÇconst router = new VueRouter(&#123; routes // (Áº©ÂÜô) Áõ∏ÂΩì‰∫é routes: routes&#125;)// 4. ÂàõÂª∫ÂíåÊåÇËΩΩÊ†πÂÆû‰æã„ÄÇ// ËÆ∞ÂæóË¶ÅÈÄöËøá router ÈÖçÁΩÆÂèÇÊï∞Ê≥®ÂÖ•Ë∑ØÁî±Ôºå// ‰ªéËÄåËÆ©Êï¥‰∏™Â∫îÁî®ÈÉΩÊúâË∑ØÁî±ÂäüËÉΩconst app = new Vue(&#123; router&#125;).$mount('#app')// Áé∞Âú®ÔºåÂ∫îÁî®Â∑≤ÁªèÂêØÂä®‰∫ÜÔºÅ 1234567891011121314151617181920212223&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;script type="text/javascript"&gt; // Say hello world until the user starts questioning // the meaningfulness of their existence. function helloWorld(world) &#123; for (var i = 42; --i &gt;= 0;) &#123; alert('Hello ' + String(world)); &#125; &#125; &lt;/script&gt; &lt;style&gt; p &#123; color: pink &#125; b &#123; color: blue &#125; u &#123; color: "umber" &#125; &lt;/style&gt;&lt;/body&gt;&lt;/html&gt; 1$ sudo mkdir folder 2.2.2 Ê®™ÂàáÊäÄÊúØ2.2.2 Ê®™ÂàáÊäÄÊúØ2.2.2 Ê®™ÂàáÊäÄÊúØ2.2.2 Ê®™ÂàáÊäÄÊúØ2.2.2 Ê®™ÂàáÊäÄÊúØ2.2.2 Ê®™ÂàáÊäÄÊúØÊäÄËÉΩÊ∏ÖÂçï1„ÄÅJavaÂü∫Á°ÄÁü•ËØÜÊâéÂÆûÔºåÂØπËÆæËÆ°Ê®°Âºè„ÄÅÁÆóÊ≥ï„ÄÅÂ§öÁ∫øÁ®ã„ÄÅÈ´òÂπ∂ÂèëÊúâ‰∏ÄÂÆöÁöÑÁêÜËß£Âπ∂Âú®ÂÆûÈôÖÂ∑•‰Ωú‰∏≠ÊúâËøêÁî® 2„ÄÅÁÜüÊÇâhttp/httpsÁ≠âÂ∏∏Áî®ÈÄöËÆØÂçèËÆÆ„ÄÅÂØπÂ∏∏Áî®Âä†ÂØÜ„ÄÅÁ≠æÂêçÁÆóÊ≥ïÊúâËøáÂÆûÈôÖÂºÄÂèëÁªèÈ™åÔºåÁÜüÊÇâÁΩëÁªú‰ø°ÊÅØÂÆâÂÖ®„ÄÇ 3„ÄÅÁ≤æÈÄöJ2EEÁõ∏ÂÖ≥ÊäÄÊúØÔºåÁ≤æÈÄöspringmvc„ÄÅspringboot„ÄÅmybatis„ÄÅspringÁ≠âÂºÄÊ∫êÊäÄÊúØÊ°ÜÊû∂Âπ∂Ê∑±ÂÖ•‰∫ÜËß£ÂÖ∂ÂéüÁêÜ 4„ÄÅÊéåÊè°PostgreÊï∞ÊçÆÂ∫ìÁöÑÂºÄÂèë„ÄÅÈÖçÁΩÆ„ÄÅÁÆ°ÁêÜ„ÄÅË∞ÉËØïÔºåÁÜüÁªÉÊéåÊè°SQLÊü•ËØ¢‰ºòÂåñ 2„ÄÅÁÜüÊÇâ Ajax ÂºÄÂèëÔºåÁÜüÁªÉÊéåÊè°JSP„ÄÅServlet„ÄÅXML„ÄÅJDBC Á≠â J2EE ÂÖ≥ÈîÆÊäÄÊúØÔºõ 3„ÄÅÁÜüÊÇâ Spring + Hibernate(ÊàñMybatis) Ê°ÜÊû∂Ôºõ 4„ÄÅÁÜüÊÇâ TOMCAT„ÄÅWebLogic Á≠âÊúçÂä°ËΩØ‰ª∂Ôºõ 5„ÄÅÁÜüÊÇâ MySQL, OracleÁ≠âÊï∞ÊçÆÂ∫ìÂ§ßÂûãÊï∞ÊçÆÂ∫ìÔºõ 6„ÄÅÁÜüÊÇâ jquery,extjsÁ≠âËÑöÊú¨Ê°ÜÊû∂„ÄÇ 3„ÄÅÁÜüÁªÉ‰ΩøÁî®Â§öÁ∫øÁ®ã„ÄÅIO„ÄÅÈõÜÂêà„ÄÅÂèçÂ∞ÑÁ≠âÔºåÊéåÊè°Â∏∏Áî®ÁöÑËÆæËÆ°Ê®°ÂºèÔºõ 4„ÄÅÁÜüÁªÉ‰ΩøÁî®spring, springMVC, springBoot ,mybatisÁ≠âÂºÄÊ∫êÊ°ÜÊû∂ÔºàÊ°ÜÊû∂Êèê‰æõÁöÑÁâπÊÄßÂèäÂÖ∂ÂÆûÁé∞ÂéüÁêÜÔºâÔºõ 5„ÄÅÁÜüÁªÉ‰ΩøÁî®ÂÖ≥Á≥ªÂûãÊï∞ÊçÆÂ∫ìÔºàmysql, postgresSQLÔºâÔºåÈùûÂÖ≥Á≥ªÂûãÊï∞ÊçÆÂ∫ìÔºàredis, mongodbÔºâÁ≠âÊï∞ÊçÆÂ∫ìÔºõ 6„ÄÅÁÜüÁªÉ‰ΩøÁî®ÂàÜÂ∏ÉÂºèÊ°ÜÊû∂dubbo„ÄÅzookeeper„ÄÅspring-cloudÂºÄÂèëÁªèÈ™åËÄÖ‰ºòÂÖàÔºåÊ∑±ÂàªÁêÜËß£OODÔºåOOPÁõ∏ÂÖ≥ÁêÜÂøµÔºõ 7„ÄÅÁÜüÁªÉ‰ΩøÁî®ÁâàÊú¨ÁÆ°ÁêÜÂ∑•ÂÖ∑gitÔºå‰∫ÜËß£È°πÁõÆÁÆ°ÁêÜÂ∑•ÂÖ∑mavenÊàñgradleÔºõ 8„ÄÅÊúâÂ§ßËßÑÊ®°È´òÂπ∂ÂèëËÆøÈóÆÁöÑWebÂ∫îÁî®Êû∂ÊûÑËÆæËÆ°„ÄÅÂèäÁõ∏ÂÖ≥È´òÊÄßËÉΩË∞É‰ºòÁöÑÂºÄÂèëÁªèÈ™åËÄÖ‰ºòÂÖàÔºõ 9„ÄÅÁÜüÊÇâInternetÂü∫Êú¨ÂçèËÆÆÔºàÂ¶ÇTCP/IP, HTTPÁ≠âÔºâÂÜÖÂÆπÂèäÁõ∏ÂÖ≥Â∫îÁî®ÔºåÁÜüÊÇâLinux/UnixÁéØÂ¢ÉÂºÄÂèë„ÄÇ 1„ÄÅ ‰∏âÂπ¥‰ª•‰∏äÂ∑•‰ΩúÁªèÈ™å 2„ÄÅ ÁÜüÁªÉÊéåÊè°JavaÂü∫Á°ÄÔºåÁÜüÊÇâÂºÄÂèë 3„ÄÅ ‰∫ÜËß£springMVC,mybatisÔºåredisÔºådubboÁ≠âÂü∫Á°ÄÊ°ÜÊû∂ 4„ÄÅ ÁÜüÊÇâ jsÔºåajaxÔºåxmlÔºåjqueryÁ≠âÂâçÁ´ØÊäÄÊúØÔºõ 5„ÄÅÁÜüÁªÉÊéåÊè°mysqlÁ≠âÊï∞ÊçÆÂ∫ìÂºÄÂèëÔºåÂÖ∑Êúâ‰∏ÄÂÆöÁöÑË∞É‰ºòËÉΩÂäõ„ÄÇ 2.Á≤æÈÄö JAVA Âíå SQL ÂèäÂ∏∏Áî®Êï∞ÊçÆÁªìÊûÑ‰∏éÁÆóÊ≥ï, ÁÜüÁªÉÊéåÊè° Servlet/JSP/HTML/JavaScript/JDBC/XML/HTTP/RESTfulÔºõ 3.Á≤æÈÄö J2EE Â∏∏Áî®Ê°ÜÊû∂ÔºåSpring/Hibernate/iBatis/CXF/MySQL/DubboÔºõ 4.ÁÜüÊÇâ Linux„ÄÅTomcat Â∏∏Áî®ÂëΩ‰ª§ÂíåÈÖçÁΩÆÔºõ \2. ÁÜüÊÇâÊéåÊè°JavaÂü∫Êú¨Â∫ìÁöÑ‰ΩøÁî®Ôºå‰∫ÜËß£JDBCÔºåÂ§öÁ∫øÁ®ãÔºåÈÄö‰ø°Áõ∏ÂÖ≥Áü•ËØÜÂèäÁõ∏ÂÖ≥Â∫ì„ÄÇ \3. ÁÜüÊÇâÂ∏∏Áî®Java EEÂºÄÂèëÁõ∏ÂÖ≥ÊäÄÊúØÔºåÁÜüÁªÉ‰ΩøÁî®Spring, Spring MVCÔºåHibernate„ÄÅMyBatis/iBatisÊàñÂÖ∂‰ªñÂºÄÂèëÊ°ÜÊû∂,ÁÜüÁªÉ‰ΩøÁî®redisÁ≠âÁºìÂ≠òÊäÄÊúØÔºåÁÜüÁªÉ‰ΩøÁî®html+javaScript+cssÂâçÁ´ØÊäÄÊúØ„ÄÇ \4. ÂøÖÈ°ªÁÜüÁªÉ‰ΩøÁî®MySQLÊï∞ÊçÆÂ∫ìÔºåÁÜüÊÇâSQL‰ºòÂåñÊñπÊ≥ïÔºåÊúâÈõÜÁæ§ÁªèÈ™åÊõ¥‰Ω≥„ÄÇ \5. ÁÜüÊÇâLinuxÊó•Â∏∏Â∑•‰ΩúÁéØÂ¢ÉÔºåÁÜüÁªÉÊéåÊè°Â∏∏Áî®ÂëΩ‰ª§ÂíåË∞É‰ºòÁõëÊéßÊâãÊÆµÔºåÊúâLinuxËá™Âä®ÂåñÈÉ®ÁΩ≤ÁªèÈ™åÊõ¥‰Ω≥ \6. ÂØπÁ≥ªÁªüÁöÑÂèØÈù†ÊÄßËÆæËÆ°ÂíåÂºÇÂ∏∏ËÆæËÆ°ÊúâËæÉÊ∑±‰∫ÜËß£ÔºåÁ≤æÈÄö‰∫ãÂä°ÔºåÂºÇÂ∏∏Á≥ªÁ≠âÈÄªËæëÊ®°ÂùóÁöÑÁºñÁ†Å„ÄÇ 2„ÄÅJavaÂü∫Á°ÄÊâéÂÆûÔºå‰∫ÜËß£Èù¢ÂêëÂØπË±°ÂíåËÆæËÆ°Ê®°ÂºèÔºõ 3„ÄÅÁÜüÊÇâMVCÊûÑÊû∂Ê®°ÂºèÔºåÁ≤æÈÄöSpringÔºåibatisÁ≠âÂ∏∏Áî®Ê°ÜÊû∂Ôºõ 4„ÄÅÁÜüÁªÉÊéåÊè°Tomcat,Apache,NginxÁ≠âWEBÂ∫îÁî®ÊúçÂä°Âô®ÔºåÁÜüÁªÉ‰ΩøÁî®Linux 5„ÄÅÁÜüÁªÉËá≥Â∞ë‰∏ÄÁßçÂÖ≥Á≥ªÂûãÊï∞ÊçÆÂ∫ì‰ΩøÁî®, ÊéåÊè°redis„ÄÅMongoÁ≠âNOSQLÊï∞ÊçÆÂ∫ì‰ΩøÁî®ÂèäÂ∫îÁî®ÂºÄÂèëÁªèÈ™åËÄÖ‰ºò 1„ÄÅ3Âπ¥‰ª•‰∏äÂÆûÈôÖJAVAÂºÄÂèëÂ∑•‰ΩúÁªèÈ™åÔºõ 2„ÄÅÁÜüÁªÉ‰ΩøÁî®Java„ÄÅ„ÄÅHtmlÁ≠âÂºÄÂèëËØ≠Ë®ÄÔºõ 3„ÄÅÁÜüÊÇâJ2EEÊû∂ÊûÑ,‰ΩøÁî®MyBatis,Hibernate,Spring,Struts2Á≠âÊ°ÜÊû∂ÂºÄÂèëÈ°πÁõÆÔºõ 4„ÄÅÁÜüÁªÉSqlServer/mysqlÊï∞ÊçÆÂ∫ìÔºåËÉΩÁÜüÁªÉ‰ΩøÁî®SQLËØ≠Ë®ÄÂíå‰ºòÂåñ„ÄÇ 5„ÄÅÁÜüÊÇânginx,apacheÊúçÂä°Âô®Êê≠Âª∫ÂíåÈÖçÁΩÆ,ÁÜüÊÇâwebÂºÄÂèëÊµÅÁ®ãËßÑËåÉÔºõ 6„ÄÅ‰∫ÜËß£ÂàÜÂ∏ÉÂºèÁ≥ªÁªüÁöÑÁõ∏ÂÖ≥ÊäÄÊúØÊàñËÄÖÂæÆÊúçÂä°ÊäÄÊúØÔºåÂ¶Çzookeeper/redis/dubbo/Spring cloud]]></content>
      <tags>
        <tag>ËÑöÊú¨</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ë∑üÊàëvolatile‰ªéË°®Èù¢Âà∞Â∫ïÂ±Ç]]></title>
    <url>%2F2018%2F08%2F21%2Fthread%2F%E6%AD%BB%E7%A3%95Java%E5%B9%B6%E5%8F%91%2F%E8%B7%9F%E6%88%91volatile%E4%BB%8E%E8%A1%A8%E9%9D%A2%E5%88%B0%E5%BA%95%E5%B1%82%2F</url>
    <content type="text"><![CDATA[ËØ•ÁØáÊñáÁ´†ËÆ®ËÆ∫ÁöÑËÆÆÈ¢òÔºö javaËØ≠‰πâ‰∏äÁöÑvolatile ÂÜÖÂ≠òÂ±èÈöú JVMÁöÑÂÆûÁé∞ ÁîüÊàêÁöÑÊ±áÁºñÊåá‰ª§ Â¶Ç‰Ωï‰øùÈöúÁöÑÁöÑÂèØËßÅÊÄßÂíåÊúâÂ∫èÊÄß ‰∏∫‰ªÄ‰πàvolatile‰∏çËÉΩ‰øùËØÅÂ§çÂêàÊìç‰ΩúÁöÑÂéüÂ≠êÊÄß javaËØ≠‰πâ‰∏äÁöÑvolatileÊàë‰ª¨‰ªé‰∏Ä‰∏™ÂæàÂ∏∏ËßÅÁöÑÊ°à‰æãÂºÄÂßãÂá∫Âèë 12345678910111213141516171819202122public class Test &#123; public static void main(String[] args) throws InterruptedException &#123; Demo demo = new Demo(); demo.setName("demo-thread"); demo.start(); Thread.sleep(1000); demo.flag = false; demo.join(); System.out.println(demo.getName() + "Á∫øÁ®ãÊâßË°åÂÆåÊØïÔºö" + demo.count); &#125; static class Demo extends Thread&#123; boolean flag = true; int count = 0; @Override public void run()&#123; while (flag)&#123; count ++; &#125; &#125; &#125;&#125; ËøôÊÆµ‰ª£Á†ÅÂú®ÊâßË°åÊó∂Ôºå‰ºöÂèëÁîüÊó†Ê≥ïÂÅúÊ≠¢‰∏ãÊù•ÁöÑÁé∞Ë±°ÔºåÊòæËÄåÊòìËßÅÔºådemo-thread‰ªé‰∏ªÂÜÖÂ≠ò‰∏≠ËØªÂèñÂá∫flagÁöÑÂÄº‰∏∫trueÊîæÂú®‰∫ÜÂ∑•‰ΩúÂÜÖÂ≠ò‰∏≠ÔºåÁÑ∂ÂêéwhileÂéªÂà§Êñ≠ËØ•ÂÄºÊòØÂê¶‰∏∫trueÂ¶ÇÊûú‰∏∫trueÂ∞±‰ºö‰∏çÊñ≠ÁöÑÂæ™ÁéØÔºåÁõ¥Ëá≥flagÁöÑÂÄº‰∏∫false‰∏∫Ê≠¢ÔºåÁÑ∂ÂêéÂú®mainÊñπÊ≥ïÁöÑÁ∫øÁ®ã‰∏≠‰øÆÊîπ‰∫ÜdemoÂÆû‰æã‰∏≠ÁöÑflagÁöÑÂÄºÔºå‰ΩÜdemo-threadÁ∫øÁ®ãÂπ∂Ê≤°ÊúâÊÑüÁü•Âà∞flagÁöÑÂÄºÂ∑≤ÁªèË¢´mainÁ∫øÁ®ã‰øÆÊîπ‰∏∫true‰∫ÜÔºå‰ªéËÄåÂèëÁîü‰∫ÜÊó†Ê≥ïÂÅúÊ≠¢ÁöÑÁé∞Ë±°ÔºåÁÆÄÂçïÁÇπÊù•ËØ¥ËøôÂ∞±ÊòØÁ∫øÁ®ã‰πãÈó¥ÁöÑÂèØËßÅÊÄßÈóÆÈ¢òÔºåÁÆÄÂçïÁöÑÁîª‰∏™ÂõæÂä†Ê∑±‰∏ãÁêÜËß£„ÄÇ ÈÇ£‰πàhow to Ëß£ÂÜ≥Âë¢ÔºüÂ∞±ÊòØÊàë‰ª¨ËøôÁØáÁöÑ‰∏ªËßívolatileÔºàÂÆûÈôÖ‰∏äËß£ÂÜ≥ÁöÑÊñπÂºèÊúâÂ§öÁßçÔºåÊàëËøôÈáåÊòØ‰∏∫‰∫ÜÂÜôËøôÁØáÊñáÁ´†ÊâÄ‰ª•ËøôÊ†∑Ëß£ÂÜ≥Ôºâ 12345678910public class Test &#123; public static void main(String[] args) throws InterruptedException &#123; ................... &#125; static class Demo extends Thread&#123; volatile boolean flag = true; ........... &#125;&#125; ÈÄöËøávolatileÂÖ≥ÈîÆÂ≠óÊù•‰øÆÈ•∞ËØ•ÂèòÈáèÔºå‰ΩøÂæóËØ•ÂèòÈáèÁöÑ‰øÆÊîπÊòØÂØπÂÖ∂ÂÆÉÁ∫øÁ®ãÂèØËßÅÁöÑÔºåÂêåÊó∂volatileËøò‰ºöÁ¶ÅÊ≠¢Êåá‰ª§‰ºòÂåñÁöÑÈáçÊéíÂ∫èÂú®‰øÆÈ•∞ÂÆåvolatileÂêé‰ºöÂú®ÂØπËØ•ÂèòÈáèÊâßË°åÊìç‰ΩúÊó∂ÊèíÂÖ•ÂÜÖÂ≠òÂ±èÈöúÔºåÂú®ËøõÂÖ•‰∏ã‰∏Ä‰∏™ËÆÆÈ¢ò‰πãÂâçÂÖàËØ¥ËØ¥‰Ωï‰∏∫ÂÜÖÂ≠òÂ±èÈöú„ÄÇ ÂÜÖÂ≠òÂ±èÈöúÂÖàËØ¥ËØ¥Â§ÑÁêÜÂô®ÁöÑÂÜÖÂ≠òÂ±èÈöúÔºåÂÜçÊù•ËÆ®ËÆ∫‰∏ãJVMÂÆö‰πâÁöÑÂÜÖÂ≠òÂ±èÈöúÔºåÈ¶ñÂÖàÁêÜËß£ÂÜÖÂ≠òÂ±èÈöúÊú¨Ë¥®ÊòØ‰ªÄ‰πàÔºåÂú®Êú¨Ë¥®‰∏äÁöÑÂÜÖÂ≠òÂ±èÈöúÂÆûÈôÖ‰∏äÂ∞±ÊòØ‰∏ÄÁ±ªÂêåÊ≠•Â±èÈöúÊåá‰ª§ÔºåÂä†‰∫ÜÂ±èÈöúÁöÑÂú∞ÊñπÔºåÂÅáÂ¶ÇÂ±èÈöúÂâçÊúâËØªÂÜôÊìç‰Ωú‰ª•ÂèäÂ±èÈöúÂêé‰πüÊúâËØªÂÜôÊìç‰ΩúÔºåÈÇ£‰πàÂ±èÈöúÂâçÁöÑËØªÂÜôÊìç‰ΩúÂøÖÁÑ∂ÂøÖÈ°ªÂÖà‰∫éÂ±èÈöúÂêéÁöÑËØªÂÜôÊìç‰ΩúÔºåÂ±èÈöúÂêéÁöÑËØªÂÜôÊìç‰Ωú‰πüÂøÖÁÑ∂ÂøÖÈ°ªÂêé‰∫éÂ±èÈöúÂâçÁöÑËØªÂÜôÊìç‰ΩúÔºàËøôÈáåÂ¶ÇÊûúÁêÜËß£‰∫Ü‰π±Â∫èÊâßË°åÂ∫îËØ•ÂæàÂ•ΩÁêÜËß£Ôºâ Â§ÑÁêÜÂô®ÁöÑÂÜÖÂ≠òÂ±èÈöú read memory barrier (ÂÜÖÂ≠òËØªÂ±èÈöú) ‰øùÈöúÊó©‰∫éÂ±èÈöú‰πãÂâçÁöÑËØªÊìç‰Ωú‰πãÂêéÂÜçÊâßË°åÊôö‰∫éÂ±èÈöúÁöÑËØªÊìç‰Ωú write memory barrierÔºàÂÜÖÂ≠òÂÜôÂ±èÈöúÔºâ ‰øùÈöúÊó©‰∫éÂ±èÈöú‰πãÂâçÁöÑÂÜôÊìç‰Ωú‰πãÂêéÂÜçÊâßË°åÊôö‰∫éÂ±èÈöúÁöÑÂÜôÊìç‰Ωú full memory barrierÔºàÂÆåÂÖ®ÂÜÖÂ≠òÂ±èÈöúÔºâ ‰øùÈöúÊó©‰∫éÂ±èÈöú‰πãÂâçÁöÑËØªÂÜôÊìç‰Ωú‰πãÂêéÂÜçÊâßË°åÊôö‰∫éÂ±èÈöú‰πãÂêéÁöÑËØªÂÜôÊìç‰Ωú ÂÖàÊù•ËÆ§ËØÜÂá†‰∏™ËØ≠‰πâÁöÑÊåá‰ª§ÔºåÂõ†‰∏∫ÂæÖ‰ºöÂú®JVMÁöÑÂÆûÁé∞‰∏≠‰πü‰ºöÂèëÁé∞ÂÆÉÁöÑË∫´ÂΩ±ÔºåËøôÈáåÁÆÄÂçïÈòêËø∞‰∏Ä‰∏ã acquire: Â±èÈöúÂâçÁöÑÊåá‰ª§‰∏ç‰ºöË¢´ÊéíÂà∞Â±èÈöúÂêéÂéª release: Â±èÈöúÂêéÁöÑÊåá‰ª§‰∏ç‰ºöË¢´ÊéíÂà∞Â±èÈöúÂâçÂéª fence:Â±èÈöúÂâçÁöÑÊåá‰ª§‰∏ç‰ºöË¢´ÊéíÂà∞Â±èÈöúÂêéÂéªÔºåÂ±èÈöúÂêéÁöÑÊåá‰ª§‰πü‰∏ç‰ºöÊéíÂà∞Â±èÈöúÂâçÂéª JVMÁöÑÂÜÖÂ≠òÂ±èÈöú LoadLoad ËØªÂ±èÈöúÔºö‰æãÂ¶ÇÊúâÊåá‰ª§Load1ÂíåLoad2ÈÇ£‰πàÂÅáÂ¶ÇÊèíÂÖ•Â±èÈöúÊåá‰ª§‰∏∫Load1;LoadLoad;Load2ÔºåÂú®‰∏≠Èó¥ÊèíÂÖ•LoadLoadÂ±èÈöúÂèØ‰ª•‰øùÈöúËØªÊìç‰Ωú‰∏ç‰ºöËøõË°å‰π±Â∫è‰ºòÂåñÔºåÂç≥Load2Âú®ÊâßË°åÊó∂ÔºåLoad1ÁöÑËØªÊìç‰ΩúÂ∫îÊòØÊâßË°åÂÆå‰∫ÜÁöÑ„ÄÇ StoreStore ÂÜôÂ±èÈöúÔºö‰æãÂ¶ÇÊúâÊåá‰ª§Store1ÂíåStore2ÈÇ£‰πàÂÅáÂ¶ÇÊèíÂÖ•Â±èÈöúÊåá‰ª§‰∏∫Store1;StoreSotre;Store2ÔºåÂú®‰∏≠Èó¥ÊèíÂÖ•StoreStoreÂ±èÈöúÂèØ‰ª•‰øùÈöúÂÜôÊìç‰Ωú‰∏ç‰ºöËøõË°å‰π±Â∫è‰ºòÂåñÔºåÂç≥Store2Âú®ÊâßË°åÊó∂ÔºåStore1ÁöÑÂÜôÊìç‰ΩúÂ∫îÊòØÊâßË°åÂÆå‰∫ÜÁöÑÔºåÂπ∂‰∏îSotre1ÁöÑÂÜôÊìç‰ΩúÊòØÂØπStore2ÂèØËßÅÁöÑÔºåËá≥‰∫é‰∏∫‰ªÄ‰πàÂèØËßÅÔºåÊàë‰ºöÂú®ËØ¥ÂÆåËøôÂõõÁßçÂ±èÈöúÊó∂ÁªôÂá∫Á≠îÊ°à„ÄÇ LoadStore ËØªÂÜôÂ±èÈöúÔºö‰æãÂ¶ÇÊúâÊåá‰ª§Load1ÂíåStore2ÈÇ£‰πàÂÅáÂ¶ÇÊèíÂÖ•Â±èÈöúÊåá‰ª§‰∏∫Load1;LoadStore;Store2ÔºåÂú®‰∏≠Èó¥ÊèíÂÖ•LoadStoreÂ±èÈöúÂèØ‰ª•‰øùÈöúÂâçÈù¢ÁöÑËØªÊìç‰ΩúÂíåÂêéÈù¢ÁöÑÂÜôÊìç‰Ωú‰∏ç‰ºöË¢´‰π±Â∫è‰ºòÂåñÔºåÂç≥Store2ÊâßË°åÊó∂ÔºåLoad1Â∫îÊòØÊâßË°åÂÆå‰∫ÜÁöÑ StoreLoad ÂÜôËØªÂ±èÈöúÔºö‰æãÂ¶ÇÊúâÊåá‰ª§Store1ÂíåLoad2ÈÇ£‰πàÂÅáÂ¶ÇÊèíÂÖ•Â±èÈöúÁöÑÊåá‰ª§‰∏∫Store1;StoreLoad;Load2ÔºåÂú®‰∏≠Èó¥ÊèíÂÖ•StoreLoadÂ±èÈöúÂèØ‰ª•‰øùÈöúÂâçÈù¢ÁöÑÂÜôÊìç‰ΩúÂØπÂêéÈù¢ÁöÑËØªÊìç‰Ωú‰∏ç‰ºöË¢´‰π±Â∫è‰ºòÂåñÔºåÂπ∂‰∏îÊòØÂèØËßÅÁöÑÔºåÂç≥Load2ÊâßË°åÊó∂ÔºåStore1Â∫îÊòØÊâßË°åÂÆå‰∫ÜÁöÑÔºåÂπ∂ÂÖ∂ÂÜôÊìç‰ΩúÂØπÂ±èÈöúÂêéÁöÑËØªÊìç‰ΩúÂèØËßÅ Â¶ÇÊûúÊó†ËÆ∫ÊòØÂä†‰∫Ü‰ΩïÁßçÂ±èÈöúÔºå‰æãÂ¶ÇLoadStoreÂ±èÈöúÂç≥Â±èÈöúÂâçÁöÑËØªÊìç‰ΩúÈÉΩ‰ºö‰ªé‰∏ªÂ≠ò‰∏≠ËØªÂèñÂÄºÔºåÂ±èÈöúÂêéÁöÑÊåá‰ª§‰ºöÂæÄ‰∏ªÂ≠òÂÜôÂÄºÔºåÂÜç‰æãÂ¶ÇStoreLoadÂ±èÈöúÂç≥Â±èÈöúÂâçÁöÑÂÜôÊìç‰Ωú‰ºöÂæÄ‰∏ªÂ≠òÂÜôÂÄºÔºå‰ªéËÄåÂØπÂ±èÈöúÂêéÁöÑËØªÊìç‰ΩúÂèØËßÅÔºåÂΩìÁÑ∂‰ªÖ‰ªÖÊòØÂæÄ‰∏ªÂ≠òÂÜôÂÄº‰πü‰∏çËÉΩ‰øùÈöúÂ∞±ÊòØÂèØËßÅÁöÑÔºåÊâÄ‰ª•ÂêéÈù¢ÁöÑËØªÊìç‰Ωú‰πüÊòØ‰ªé‰∏ªÂ≠ò‰∏≠ËØªÂÄº JVMÁöÑÂÆûÁé∞So,Áé∞Âú®ÊòØ‰∏çÊòØÂØπvolatileÂæàÊ∏ÖÊô∞‰∫ÜÔºå‰πüÁü•ÈÅì‰∏äÈù¢‰∏∫‰ªÄ‰πàÂä†‰∫ÜvolatileÂÖ≥ÈîÆÂ≠óÂêéÔºåÂèòÈáèÊòØÂØπÂÖ∂ÂÆÉÁ∫øÁ®ãÂèØËßÅÁöÑ‰∫ÜÂêßÔºü,‰ªéËÄå‰ΩøÂæóÊàë‰ª¨ÁöÑflag‰øÆÊîπÂêéËÉΩÂ§üÂú®Â§öÁ∫øÁ®ãÁéØÂ¢É‰∏ãËÉΩÂ§üÊúâÊïàÔºå‰ª•‰∏Ä‰∏™ÈùûÂ∏∏ÁÆÄÂçïÁöÑ‰æãÂ≠êÔºåÊ∑±ÂÖ•ÁöÑÊé¢ËÆ®‰∏ãÂéª„ÄÇ 123456public class Demo&#123; static volatile int i; public static void main(String[] args)&#123; i = 1; &#125;&#125; Êü•ÁúãÁîüÊàêÁöÑÂ≠óËäÇÁ†ÅÔºàÈÉ®ÂàÜÁâáÊÆµÔºâ 123static volatile int i; descriptor: I flags: ACC_STATIC, ACC_VOLATILE ÂèØ‰ª•ÁúãÂà∞Âú®Â≠óËäÇÁ†ÅÊñá‰ª∂‰∏äÊúâ‰∏Ä‰∏™ACC_VOLATILEÁöÑÊ†áËØÜÁ¨¶ÔºåÊé•ÁùÄÊâìÂºÄJVMÔºàÊàëÁî®ÁöÑHotspotÔºâÁöÑ‰ª£Á†ÅÊù•ÁúãÁúãÂêß~ ÂèØ‰ª•Âú®JVMÊ∫êÁ†Å‰∏≠ÁúãÂà∞Êúâ‰∏Ä‰∏™is_volatileÂà§Êñ≠ÊòØÂê¶ÊòØvolatileËÆøÈóÆÈôêÂÆöÁ¨¶‰øÆÈ•∞ÁöÑ,ÁÑ∂ÂêéÂÜçÁúãÂ≠óËäÇÁ†ÅËß£ÈáäÂô®ÁöÑÈÉ®ÂàÜÊ∫êÁ†Å Ê≥®ÊÑèÊúâ‰∏â‰∏™ÁªÜËäÇÔºåÈ¶ñÂÖà‰ºöÂà§Êñ≠ÊòØÂê¶Ê†áËØÜ‰∫ÜvolatileÔºåÁÑ∂ÂêéÂÜçÂà§Êñ≠Á±ªÂûãÔºåÊàë‰ª¨Ëøô‰∏™ÊòØintÁ±ªÂûãÊâÄ‰ª•‰ºöË∞ÉÁî®release_int_field_putÔºåÊúÄÂêéÊèíÂÖ•‰∏ÄÈÅìÂ±èÈöústoreloadÔºåÈ¶ñÂÖàÂÖàÁúãitosÁöÑÂÆö‰πâ È°æÂêçÊÄù‰πâÔºöË°®Á§∫Ê†àÈ°∂ÁºìÂ≠òÁöÑintÁ±ªÂûãÊï∞ÊçÆ Êé•ÁùÄÁúãrelease_int_field_put ‰ºöÂèëÁé∞ÂÆÉË∞ÉÁî®‰∫ÜOrderAccess::release_store ÈÇ£‰πàËøô‰∏™ÊñπÊ≥ïÁ©∂Á´üÊòØÂπ≤‰ªÄ‰πàÁöÑÂë¢ÔºüÈ¶ñÂÖàÊ≥®ÊÑèÊñπÊ≥ïÂèÇÊï∞Ê∑ªÂä†‰∫ÜvolatileÂÖ≥ÈîÆÂ≠óÔºåËøôÊòØc++ÁöÑvolatileÂÖ≥ÈîÆÂ≠óÂíåJava(javaËØ≠Ê≥ï‰πüÊúâËøô‰∏™ÂêåÂêçÁöÑÂÖ≥ÈîÆÂ≠ó‰∏çÊòØÂêóÔºü)Ë¢´ËØ•ÂÖ≥ÈîÆÂ≠óÊâÄ‰øÆÈ•∞ÁöÑÂèòÈáèÊÑèÂë≥ÁùÄÊòìÂèòÁöÑÔºåÂÜçc++‰∏≠‰øÆÈ•∞‰∫ÜËøô‰∏™ÂÖ≥ÈîÆÂ≠óÁöÑÂèòÈáèÊØèÊ¨°‰ΩøÁî®Êó∂ÈÉΩ‰ºö‰ªéÂèòÈáèÂØπÂ∫îÁöÑÂÜÖÂ≠òÂú∞ÂùÄ‰∏îÁºñËØëÂô®‰πü‰∏ç‰ºöÂØπÂÆÉËøõË°å‰ºòÂåñ„ÄÇ ÈÇ£‰πàos::atomic_copy64ÂèàÊòØ‰ªÄ‰πàÂë¢ÔºüËøôÈáå‰ºöÈíàÂØπ‰∏çÂêåÁöÑÁ≥ªÁªüÔºåÊàëËøôÈáåÂè™ÁúãLinuxÁöÑ Á≤óÊö¥ÁÇπÔºåÂ∞±ÊòØÁîüÊàêÊ±áÁºñ‰ª£Á†ÅÂéªÊã∑Ë¥ùÂÄºÂêßÔºü Êé•ÁùÄÊàë‰ª¨Áúã Êé•ÁùÄÁúãOrderAccess::storeload ËØ∑ÂëäËØâÊàëËøô4‰∏™‰∏úË•øÁúºÁÜü‰∏çÁúºÁÜüÔºüÔºÅÔºüÔºåËøôÂΩìÁÑ∂Âè™ÊòØÂÆö‰πâ‰∏çÂêåÁ≥ªÁªü‰∏ãÂÆûÁé∞‰∏ç‰∏ÄÊ†∑ÔºåÊàë‰ª¨ËøôÈáåËøòÊòØÁúãlinuxÁöÑ ÁúãËøô‰∏™ÊñπÊ≥ïÁöÑÂÆûÁé∞ÔºåËøòÊúâÂÖ∂ÂÆÉ‰∏âÁßçÁöÑÂÆûÁé∞ÊòØ‰ªÄ‰πàÔºüÊú¨ÁØáÊñáÁ´†‰∏äÈù¢‰πüÂØπËØ•ËØ≠‰πâËøõË°å‰∫ÜÈòêËø∞ÂêßÔºüÁªßÁª≠Áúãlinux‰∏ãÁöÑÂÆûÁé∞ FULL_MEM_BARRIERÊòØ‰ªÄ‰πàÊú¨Êñá‰∏äÈù¢‰πüËØ¥‰∫ÜÂêß ÈíàÂØπÁöÑÁéØÂ¢É‰∏çÈÄöÂÆûÁé∞‰πü‰∏çÂêåÔºåËøôÈáåÂÖ∑‰ΩìÂ∞±‰∏çÂÜçÈòêËø∞ ÁîüÊàêÁöÑÊ±áÁºñÊåá‰ª§= = ÂÜôÂà∞Ëøô‰∏™Â∞èËäÇÁöÑÊó∂ÂÄôÁ¨îËÄÖÊòØÁî®ÁöÑwindows‰∫ÜÔºåÊâÄ‰ª•ÂÜçË°•‰∏Ä‰∏ãwindowsÂØπfenceÂÆûÁé∞ÁöÑÊ∫êÁ†Å Áúã‰∏ãÂú®ÊàëÊú∫Âô®‰∏äÁîüÊàêÁöÑÊ±áÁºñ‰ª£Á†Å 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202[Disassembling for mach='amd64'][Entry Point][Verified Entry Point][Constants] # &#123;method&#125; &#123;0x0000000017cf2a38&#125; 'main' '([Ljava/lang/String;)V' in 'org/yuequan/thread/test/Demo' # parm0: rdx:rdx = '[Ljava/lang/String;' # [sp+0x40] (sp of caller) 0x00000000037e5320: mov dword ptr [rsp+0ffffffffffffa000h],eax 0x00000000037e5327: push rbp 0x00000000037e5328: sub rsp,30h 0x00000000037e532c: mov rsi,17cf2af8h ; &#123;metadata(method data for &#123;method&#125; &#123;0x0000000017cf2a38&#125; 'main' '([Ljava/lang/String;)V' in 'org/yuequan/thread/test/Demo')&#125; 0x00000000037e5336: mov edi,dword ptr [rsi+0dch] 0x00000000037e533c: add edi,8h 0x00000000037e533f: mov dword ptr [rsi+0dch],edi 0x00000000037e5345: mov rsi,17cf2a30h ; &#123;metadata(&#123;method&#125; &#123;0x0000000017cf2a38&#125; 'main' '([Ljava/lang/String;)V' in 'org/yuequan/thread/test/Demo')&#125; 0x00000000037e534f: and edi,0h 0x00000000037e5352: cmp edi,0h 0x00000000037e5355: je 37e537eh ;*iconst_1 ; - org.yuequan.thread.test.Demo::main@0 (line 6) 0x00000000037e535b: mov rsi,0d5b0dad0h ; &#123;oop(a 'java/lang/Class' = 'org/yuequan/thread/test/Demo')&#125; 0x00000000037e5365: mov edi,1h 0x00000000037e536a: mov dword ptr [rsi+68h],edi 0x00000000037e536d: lock add dword ptr [rsp],0h ;*putstatic i ; - org.yuequan.thread.test.Demo::main@1 (line 6) 0x00000000037e5372: add rsp,30h 0x00000000037e5376: pop rbp 0x00000000037e5377: test dword ptr [2f20100h],eax ; &#123;poll_return&#125; 0x00000000037e537d: ret 0x00000000037e537e: mov qword ptr [rsp+8h],rsi 0x00000000037e5383: mov qword ptr [rsp],0ffffffffffffffffh 0x00000000037e538b: call 37e20a0h ; OopMap&#123;rdx=Oop off=112&#125; ;*synchronization entry ; - org.yuequan.thread.test.Demo::main@-1 (line 6) ; &#123;runtime_call&#125; 0x00000000037e5390: jmp 37e535bh 0x00000000037e5392: nop 0x00000000037e5393: nop 0x00000000037e5394: mov rax,qword ptr [r15+2a8h] 0x00000000037e539b: mov r10,0h 0x00000000037e53a5: mov qword ptr [r15+2a8h],r10 0x00000000037e53ac: mov r10,0h 0x00000000037e53b6: mov qword ptr [r15+2b0h],r10 0x00000000037e53bd: add rsp,30h 0x00000000037e53c1: pop rbp 0x00000000037e53c2: jmp 374ece0h ; &#123;runtime_call&#125; 0x00000000037e53c7: hlt 0x00000000037e53c8: hlt 0x00000000037e53c9: hlt 0x00000000037e53ca: hlt 0x00000000037e53cb: hlt 0x00000000037e53cc: hlt 0x00000000037e53cd: hlt 0x00000000037e53ce: hlt 0x00000000037e53cf: hlt 0x00000000037e53d0: hlt 0x00000000037e53d1: hlt 0x00000000037e53d2: hlt 0x00000000037e53d3: hlt 0x00000000037e53d4: hlt 0x00000000037e53d5: hlt 0x00000000037e53d6: hlt 0x00000000037e53d7: hlt 0x00000000037e53d8: hlt 0x00000000037e53d9: hlt 0x00000000037e53da: hlt 0x00000000037e53db: hlt 0x00000000037e53dc: hlt 0x00000000037e53dd: hlt 0x00000000037e53de: hlt 0x00000000037e53df: hlt[Exception Handler][Stub Code] 0x00000000037e53e0: call 3750aa0h ; &#123;no_reloc&#125; 0x00000000037e53e5: mov qword ptr [rsp+0ffffffffffffffd8h],rsp 0x00000000037e53ea: sub rsp,80h 0x00000000037e53f1: mov qword ptr [rsp+78h],rax 0x00000000037e53f6: mov qword ptr [rsp+70h],rcx 0x00000000037e53fb: mov qword ptr [rsp+68h],rdx 0x00000000037e5400: mov qword ptr [rsp+60h],rbx 0x00000000037e5405: mov qword ptr [rsp+50h],rbp 0x00000000037e540a: mov qword ptr [rsp+48h],rsi 0x00000000037e540f: mov qword ptr [rsp+40h],rdi 0x00000000037e5414: mov qword ptr [rsp+38h],r8 0x00000000037e5419: mov qword ptr [rsp+30h],r9 0x00000000037e541e: mov qword ptr [rsp+28h],r10 0x00000000037e5423: mov qword ptr [rsp+20h],r11 0x00000000037e5428: mov qword ptr [rsp+18h],r12 0x00000000037e542d: mov qword ptr [rsp+10h],r13 0x00000000037e5432: mov qword ptr [rsp+8h],r14 0x00000000037e5437: mov qword ptr [rsp],r15 0x00000000037e543b: mov rcx,6601c4e0h ; &#123;external_word&#125; 0x00000000037e5445: mov rdx,37e53e5h ; &#123;internal_word&#125; 0x00000000037e544f: mov r8,rsp 0x00000000037e5452: and rsp,0fffffffffffffff0h 0x00000000037e5456: call 65cd4510h ; &#123;runtime_call&#125; 0x00000000037e545b: hlt[Deopt Handler Code] 0x00000000037e545c: mov r10,37e545ch ; &#123;section_word&#125; 0x00000000037e5466: push r10 0x00000000037e5468: jmp 3727600h ; &#123;runtime_call&#125; 0x00000000037e546d: hlt 0x00000000037e546e: hlt 0x00000000037e546f: hltDecoding compiled method 0x00000000037e4ed0:Code:Argument 0 is unknown.RIP: 0x37e5020 Code size: 0x00000110[Entry Point][Verified Entry Point][Constants] # &#123;method&#125; &#123;0x0000000017cf2a38&#125; 'main' '([Ljava/lang/String;)V' in 'org/yuequan/thread/test/Demo' # parm0: rdx:rdx = '[Ljava/lang/String;' # [sp+0x40] (sp of caller) 0x00000000037e5020: mov dword ptr [rsp+0ffffffffffffa000h],eax 0x00000000037e5027: push rbp 0x00000000037e5028: sub rsp,30h ;*iconst_1 ; - org.yuequan.thread.test.Demo::main@0 (line 6) 0x00000000037e502c: mov rsi,0d5b0dad0h ; &#123;oop(a 'java/lang/Class' = 'org/yuequan/thread/test/Demo')&#125; 0x00000000037e5036: mov edi,1h 0x00000000037e503b: mov dword ptr [rsi+68h],edi 0x00000000037e503e: lock add dword ptr [rsp],0h ;*putstatic i ; - org.yuequan.thread.test.Demo::main@1 (line 6) 0x00000000037e5043: add rsp,30h 0x00000000037e5047: pop rbp 0x00000000037e5048: test dword ptr [2f20100h],eax ; &#123;poll_return&#125; 0x00000000037e504e: ret 0x00000000037e504f: nop 0x00000000037e5050: nop 0x00000000037e5051: mov rax,qword ptr [r15+2a8h] 0x00000000037e5058: mov r10,0h 0x00000000037e5062: mov qword ptr [r15+2a8h],r10 0x00000000037e5069: mov r10,0h 0x00000000037e5073: mov qword ptr [r15+2b0h],r10 0x00000000037e507a: add rsp,30h 0x00000000037e507e: pop rbp 0x00000000037e507f: jmp 374ece0h ; &#123;runtime_call&#125; 0x00000000037e5084: hlt 0x00000000037e5085: hlt 0x00000000037e5086: hlt 0x00000000037e5087: hlt 0x00000000037e5088: hlt 0x00000000037e5089: hlt 0x00000000037e508a: hlt 0x00000000037e508b: hlt 0x00000000037e508c: hlt 0x00000000037e508d: hlt 0x00000000037e508e: hlt 0x00000000037e508f: hlt 0x00000000037e5090: hlt 0x00000000037e5091: hlt 0x00000000037e5092: hlt 0x00000000037e5093: hlt 0x00000000037e5094: hlt 0x00000000037e5095: hlt 0x00000000037e5096: hlt 0x00000000037e5097: hlt 0x00000000037e5098: hlt 0x00000000037e5099: hlt 0x00000000037e509a: hlt 0x00000000037e509b: hlt 0x00000000037e509c: hlt 0x00000000037e509d: hlt 0x00000000037e509e: hlt 0x00000000037e509f: hlt[Exception Handler][Stub Code] 0x00000000037e50a0: call 3750aa0h ; &#123;no_reloc&#125; 0x00000000037e50a5: mov qword ptr [rsp+0ffffffffffffffd8h],rsp 0x00000000037e50aa: sub rsp,80h 0x00000000037e50b1: mov qword ptr [rsp+78h],rax 0x00000000037e50b6: mov qword ptr [rsp+70h],rcx 0x00000000037e50bb: mov qword ptr [rsp+68h],rdx 0x00000000037e50c0: mov qword ptr [rsp+60h],rbx 0x00000000037e50c5: mov qword ptr [rsp+50h],rbp 0x00000000037e50ca: mov qword ptr [rsp+48h],rsi 0x00000000037e50cf: mov qword ptr [rsp+40h],rdi 0x00000000037e50d4: mov qword ptr [rsp+38h],r8 0x00000000037e50d9: mov qword ptr [rsp+30h],r9 0x00000000037e50de: mov qword ptr [rsp+28h],r10 0x00000000037e50e3: mov qword ptr [rsp+20h],r11 0x00000000037e50e8: mov qword ptr [rsp+18h],r12 0x00000000037e50ed: mov qword ptr [rsp+10h],r13 0x00000000037e50f2: mov qword ptr [rsp+8h],r14 0x00000000037e50f7: mov qword ptr [rsp],r15 0x00000000037e50fb: mov rcx,6601c4e0h ; &#123;external_word&#125; 0x00000000037e5105: mov rdx,37e50a5h ; &#123;internal_word&#125; 0x00000000037e510f: mov r8,rsp 0x00000000037e5112: and rsp,0fffffffffffffff0h 0x00000000037e5116: call 65cd4510h ; &#123;runtime_call&#125; 0x00000000037e511b: hlt[Deopt Handler Code] 0x00000000037e511c: mov r10,37e511ch ; &#123;section_word&#125; 0x00000000037e5126: push r10 0x00000000037e5128: jmp 3727600h ; &#123;runtime_call&#125; 0x00000000037e512d: hlt 0x00000000037e512e: hlt 0x00000000037e512f: hlt Ëøô‰πàÈïøËÇø‰πàÁúãÔºüÁúãÂÖ≥ÈîÆÈÉ®‰ΩçÂ∞±Â•ΩÊãâ ÁúãÂà∞ÊòØ‰ΩøÁî®ÁöÑlockÊåá‰ª§ÂêßÔºüÈÇ£‰πàÈóÆÈ¢òÊù•‰∫ÜlockÊåá‰ª§ÊòØ‰ªÄ‰πàÔºåÊàëÂú®ËøôÈáåËÇ§ÊµÖÁöÑËß£Èáä‰∏Ä‰∏ãÔºöCPUÊèê‰æõ‰∫ÜÂú®ÊâßË°åÊåá‰ª§ÊúüÈó¥Êèê‰æõ‰∫ÜÊÄªÁ∫øÂä†ÈîÅÁöÑÊâãÊÆµÔºåÈÇ£‰πàÂä†‰∫ÜlockÁöÑÊ±áÁºñÁîüÊàêÊú∫Âô®Á†ÅÂ∞±‰ΩøCPUÂú®ÊâßË°åËøôÊù°Êåá‰ª§ÁöÑÊó∂ÂÄô‰ºöÊää#HLOCK pinÁöÑÁîµ‰ΩçÊãâ‰ΩéÔºåÊåÅÁª≠Âà∞ËøôÊù°Êåá‰ª§ÁªìÊùüÊó∂ÊîæÂºÄÔºå‰ªéËÄåÊääÊÄªÁ∫øÈîÅ‰ΩèÔºå‰ªéËÄå‰øùËØÅËøôÊù°Êåá‰ª§ÊâßË°åÁöÑÂéüÂ≠êÊÄß Â¶Ç‰Ωï‰øùÈöúÁöÑÁöÑÂèØËßÅÊÄßÂíåÊúâÂ∫èÊÄßÈÄöËøáÂÜÖÂ≠òÂ±èÈöúÊù•ÊèêÈÜíÁºñËØëÂô®ÂíåCPU‰∏çÂØπÊåá‰ª§ËøõË°å‰ºòÂåñÈò≤Ê≠¢ÂÖ∂‰ºòÂåñ‰π±Â∫èÊâßË°å‰ªéËÄåËææÂà∞ÊúâÂ∫èÊÄßÔºåÂú®Â±èÈöúÁöÑÂâçÂêéÈÉΩÊòØÈÄöËøá‰∏ªÂ≠òËØªÂÜôËææÂà∞Á∫øÁ®ã‰πãÈó¥ÁöÑÂèØËßÅÊÄß„ÄÇÔºàO(‚à©_‚à©)O ÊàëÊÉ≥‰∏çÁî®ÂÜçÂ§öËß£Èáä‰∫ÜÔºâ ‰∏∫‰ªÄ‰πàvolatile‰∏çËÉΩ‰øùËØÅÂ§çÂêàÊìç‰ΩúÁöÑÂéüÂ≠êÊÄßÂ∞±ÊØîÂ¶ÇÂú®Â§öÁ∫øÁ®ã‰∏≠ÔºåÂ§ö‰∏™Á∫øÁ®ãÂØπ‰∫é‰∏Ä‰∏™ÂÆû‰æãÂèòÈáèÁöÑÂèòÈáèiËøõË°åËá™Â¢ûÊìç‰ΩúÔºå‰æãÂ¶Çi++ÔºåËøôÊó∂ÂÄôÂ∞±‰∫ßÁîü‰∫ÜÁ´ûÊÄÅÊù°‰ª∂ÂØºËá¥Ôºå‰æãÂ¶ÇÁªôiÂèòÈáèÂä†5000Ê¨°ÔºåÂæóÂà∞ÁöÑÁªìÊûúÂèØËÉΩÊòØ5000ÂæóÂà∞ÁöÑÁªìÊûú‰πüÂèØËÉΩÊòØÂ∞ë‰∫é5000ÔºåÂ∞ΩÁÆ°‰Ω†Âä†‰∫ÜvolatileÔºåËøôÊòØ‰∏∫‰ªÄ‰πàÂë¢ÔºüË¶ÅÁü•ÈÅìvolatile‰ªÖÊòØÈÄöËøáÂÜÖÂ≠òÂ±èÈöúÁöÑÊú∫Âà∂Êù•‰øùÈöú ‰æãÂ¶Ç 1load1;load2;store1;store2;StoreLoad;load3;store3..... Â∞ΩÁÆ°‰Ω†‰øùËØÅ‰∫ÜÂèØËßÅÊÄßÔºå‰ΩÜ‰Ω†‰∏çËÉΩ‰øùËØÅËØ•Êìç‰ΩúÁöÑÂéüÂ≠êÊÄßÔºåÊâÄË∞ìÁöÑÂéüÂ≠êÊÄßÊú¨Ë¥®Â∞±ÊòØÊåá‰ª§Âú®ÊâßË°åÊúüÈó¥‰∏çË¢´ÊâìÊñ≠ÔºåË¶Å‰πàÂ∞±ÊòØ‰∏çÊâßË°åÔºå‰ªîÁªÜÊÉ≥ÊÉ≥i++ÊòØ‰∏çÊòØ‰∏Ä‰∏™‰∏âÊ≠•ÁöÑÂ§çÂêàÊìç‰ΩúÔºöÂèñÂÄº„ÄÅÁõ∏Âä†„ÄÅËµãÂÄºÔºåÂ∞±ÊØîÂ¶ÇÔºö‰Ω†Âú®Êú™ËµãÂÄºÊó∂Âà´ÁöÑÁ∫øÁ®ãÊâßË°åÊó∂ÔºåÂà´ÁöÑÁ∫øÁ®ã‰πüÊ≠£Âú®Â§Ñ‰ª•ËµãÂÄºÁä∂ÊÄÅÔºåËØ≠Ë®ÄËß£ÈáäÂ•ΩÈ∫ªÁÉ¶Áúã‰∏ãÂàóÁ§∫‰æã 12345678i= 0Á∫øÁ®ãA Á∫øÁ®ãBÂèñÂÄº 0 ÂèñÂÄº 0Áõ∏Âä† 1 Áõ∏Âä† 1ËµãÂÄº 1 ËµãÂÄº 1 Â∞ΩÁÆ°‰Ω†‰øùÈöú‰∫ÜÂèØËßÅÊÄßÔºå‰ΩÜ‰Ω†Âπ∂‰∏çËÉΩ‰øùËØÅ‰Ω†ÊãøÂà∞Êâã‰∏äÁöÑÂÄºÊ∞∏ËøúÊòØÊúÄÊñ∞ÂÄº„ÄÇ]]></content>
      <tags>
        <tag>Á∫øÁ®ã</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Áªà‰∫éÊúâ‰∫∫ÊääJavaÂÜÖÂ≠òÊ®°ÂûãËØ¥Ê∏ÖÊ•ö‰∫ÜÔºÅ]]></title>
    <url>%2F2018%2F08%2F18%2Fthread%2F%E7%BB%88%E4%BA%8E%E6%9C%89%E4%BA%BA%E6%8A%8AJava%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E8%AF%B4%E6%B8%85%E6%A5%9A%E4%BA%86%EF%BC%81%2F</url>
    <content type="text"><![CDATA[ËΩ¨ÊëòËá™ Hollis ÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ ‚ÄúÁΩë‰∏äÊúâÂæàÂ§öÂÖ≥‰∫é Java ÂÜÖÂ≠òÊ®°ÂûãÁöÑÊñáÁ´†Ôºå‰ΩÜÊòØÂæàÂ§ö‰∫∫ËØªÂÆå‰πãÂêéËøòÊòØÊêû‰∏çÊ∏ÖÊ•öÔºåÁîöËá≥ÊúâÁöÑ‰∫∫ËØ¥Ëá™Â∑±Êõ¥Êáµ‰∫Ü„ÄÇ‚Äù Êú¨ÊñáÂ∞±Êù•Êï¥‰ΩìÁöÑ‰ªãÁªç‰∏Ä‰∏ã Java ÂÜÖÂ≠òÊ®°ÂûãÔºåËØªÂÆåÊú¨Êñá‰ª•ÂêéÔºå‰Ω†Â∞±Áü•ÈÅìÂà∞Â∫ï Java ÂÜÖÂ≠òÊ®°ÂûãÊòØ‰ªÄ‰πàÔºå‰∏∫‰ªÄ‰πàË¶ÅÊúâ Java ÂÜÖÂ≠òÊ®°ÂûãÔºåJava ÂÜÖÂ≠òÊ®°ÂûãËß£ÂÜ≥‰∫Ü‰ªÄ‰πàÈóÆÈ¢òÁ≠â„ÄÇ Êú¨Êñá‰∏≠ÂæàÂ§öËØ¥Ê≥ïÈÉΩÊòØÁ¨îËÄÖËá™Â∑±ÁêÜËß£ÂêéÂÆö‰πâÂá∫Êù•ÁöÑ„ÄÇÂ∏åÊúõËÉΩÂ§üËÆ©ËØªËÄÖÂèØ‰ª•ÂØπ Java ÂÜÖÂ≠òÊ®°ÂûãÊúâÊõ¥Âä†Ê∏ÖÊô∞ÁöÑËÆ§ËØÜ„ÄÇ ‰∏∫‰ªÄ‰πàË¶ÅÊúâÂÜÖÂ≠òÊ®°ÂûãÂú®‰ªãÁªç Java ÂÜÖÂ≠òÊ®°Âûã‰πãÂâçÔºåÊàë‰ª¨ÂÖàÊù•Áúã‰∏Ä‰∏ãÂà∞Â∫ï‰ªÄ‰πàÊòØËÆ°ÁÆóÊú∫ÂÜÖÂ≠òÊ®°ÂûãÔºåÁÑ∂ÂêéÂÜçÊù•Áúã Java ÂÜÖÂ≠òÊ®°ÂûãÂú®ËÆ°ÁÆóÊú∫ÂÜÖÂ≠òÊ®°ÂûãÁöÑÂü∫Á°Ä‰∏äÈÉΩÂÅö‰∫ÜÂì™‰∫õ‰∫ãÊÉÖ„ÄÇ Ë¶ÅËØ¥ËÆ°ÁÆóÊú∫ÁöÑÂÜÖÂ≠òÊ®°ÂûãÔºåÂ∞±Ë¶ÅËØ¥‰∏ÄÊÆµÂè§ËÄÅÁöÑÂéÜÂè≤ÔºåÁúã‰∏Ä‰∏ã‰∏∫‰ªÄ‰πàË¶ÅÊúâÂÜÖÂ≠òÊ®°Âûã„ÄÇ ÂÜÖÂ≠òÊ®°ÂûãÔºöËã±ÊñáÂêç Memory ModelÔºåÂÆÉÊòØ‰∏Ä‰∏™ËÄÅÂè§Ëë£‰∫Ü„ÄÇÂÆÉÊòØ‰∏éËÆ°ÁÆóÊú∫Á°¨‰ª∂ÊúâÂÖ≥ÁöÑ‰∏Ä‰∏™Ê¶ÇÂøµ„ÄÇÈÇ£‰πàÔºåÊàëÂÖà‰ªãÁªç‰∏ãÂÆÉÂíåÁ°¨‰ª∂Âà∞Â∫ïÊúâÂï•ÂÖ≥Á≥ª„ÄÇ CPU ÂíåÁºìÂ≠ò‰∏ÄËá¥ÊÄßÊàë‰ª¨Â∫îËØ•Áü•ÈÅìÔºåËÆ°ÁÆóÊú∫Âú®ÊâßË°åÁ®ãÂ∫èÁöÑÊó∂ÂÄôÔºåÊØèÊù°Êåá‰ª§ÈÉΩÊòØÂú® CPU ‰∏≠ÊâßË°åÁöÑÔºåËÄåÊâßË°åÁöÑÊó∂ÂÄôÔºåÂèàÂÖç‰∏ç‰∫ÜÂíåÊï∞ÊçÆÊâì‰∫§ÈÅì„ÄÇ ËÄåËÆ°ÁÆóÊú∫‰∏äÈù¢ÁöÑÊï∞ÊçÆÔºåÊòØÂ≠òÊîæÂú®‰∏ªÂ≠òÂΩì‰∏≠ÁöÑÔºå‰πüÂ∞±ÊòØËÆ°ÁÆóÊú∫ÁöÑÁâ©ÁêÜÂÜÖÂ≠ò„ÄÇ ÂàöÂºÄÂßãÔºåËøòÁõ∏ÂÆâÊó†‰∫ãÔºå‰ΩÜÊòØÈöèÁùÄ CPU ÊäÄÊúØÁöÑÂèëÂ±ïÔºåCPU ÁöÑÊâßË°åÈÄüÂ∫¶Ë∂äÊù•Ë∂äÂø´„ÄÇ ËÄåÁî±‰∫éÂÜÖÂ≠òÁöÑÊäÄÊúØÂπ∂Ê≤°ÊúâÂ§™Â§ßÁöÑÂèòÂåñÔºåÊâÄ‰ª•‰ªéÂÜÖÂ≠ò‰∏≠ËØªÂèñÂíåÂÜôÂÖ•Êï∞ÊçÆÁöÑËøáÁ®ãÂíå CPU ÁöÑÊâßË°åÈÄüÂ∫¶ÊØîËµ∑Êù•Â∑ÆË∑ùÂ∞±‰ºöË∂äÊù•Ë∂äÂ§ßÔºåËøôÂ∞±ÂØºËá¥ CPU ÊØèÊ¨°Êìç‰ΩúÂÜÖÂ≠òÈÉΩË¶ÅËÄóË¥πÂæàÂ§öÁ≠âÂæÖÊó∂Èó¥„ÄÇ ËøôÂ∞±ÂÉè‰∏ÄÂÆ∂Âàõ‰∏öÂÖ¨Âè∏ÔºåÂàöÂºÄÂßãÔºåÂàõÂßã‰∫∫ÂíåÂëòÂ∑•‰πãÈó¥Â∑•‰ΩúÂÖ≥Á≥ªÂÖ∂‰πêËûçËûçÔºå‰ΩÜÊòØÈöèÁùÄÂàõÂßã‰∫∫ÁöÑËÉΩÂäõÂíåÈáéÂøÉË∂äÊù•Ë∂äÂ§ßÔºåÈÄêÊ∏êÂíåÂëòÂ∑•‰πãÈó¥Âá∫Áé∞‰∫ÜÂ∑ÆË∑ùÔºåÊôÆÈÄöÂëòÂ∑•Ë∂äÊù•Ë∂äË∑ü‰∏ç‰∏ä CEO ÁöÑËÑöÊ≠•„ÄÇ ËÄÅÊùøÁöÑÊØè‰∏Ä‰∏™ÂëΩ‰ª§Ôºå‰º†ËææÂà∞Âü∫Â±ÇÂëòÂ∑•‰πãÂêéÔºåÁî±‰∫éÂü∫Â±ÇÂëòÂ∑•ÁöÑÁêÜËß£ËÉΩÂäõ„ÄÅÊâßË°åËÉΩÂäõÁöÑÊ¨†Áº∫ÔºåÂ∞±‰ºöËÄóË¥πÂæàÂ§öÊó∂Èó¥„ÄÇËøô‰πüÂ∞±Êó†ÂΩ¢‰∏≠ÊãñÊÖ¢‰∫ÜÊï¥ÂÆ∂ÂÖ¨Âè∏ÁöÑÂ∑•‰ΩúÊïàÁéá„ÄÇ ÂèØÊòØÔºå‰∏çËÉΩÂõ†‰∏∫ÂÜÖÂ≠òÁöÑËØªÂÜôÈÄüÂ∫¶ÊÖ¢ÔºåÂ∞±‰∏çÂèëÂ±ï CPU ÊäÄÊúØ‰∫ÜÂêßÔºüÊÄª‰∏çËÉΩËÆ©ÂÜÖÂ≠òÊàê‰∏∫ËÆ°ÁÆóÊú∫Â§ÑÁêÜÁöÑÁì∂È¢àÂêßÔºü ÊâÄ‰ª•Ôºå‰∫∫‰ª¨ÊÉ≥Âá∫Êù•‰∫Ü‰∏Ä‰∏™Â•ΩÁöÑÂäûÊ≥ïÔºåÂ∞±ÊòØÂú® CPU ÂíåÂÜÖÂ≠ò‰πãÈó¥Â¢ûÂä†È´òÈÄüÁºìÂ≠ò„ÄÇ ÁºìÂ≠òÁöÑÊ¶ÇÂøµÂ§ßÂÆ∂ÈÉΩÁü•ÈÅìÔºåÂ∞±ÊòØ‰øùÂ≠ò‰∏Ä‰ªΩÊï∞ÊçÆÊã∑Ë¥ù„ÄÇÂÆÉÁöÑÁâπÁÇπÊòØÈÄüÂ∫¶Âø´ÔºåÂÜÖÂ≠òÂ∞èÔºåÂπ∂‰∏î‰ª∑Ê†ºÊòÇË¥µ„ÄÇ ÈÇ£‰πàÔºåÁ®ãÂ∫èÁöÑÊâßË°åËøáÁ®ãÂ∞±ÂèòÊàê‰∫ÜÔºöÁ®ãÂ∫èÂú®ËøêË°åËøáÁ®ã‰∏≠Ôºå‰ºöÂ∞ÜËøêÁÆóÈúÄË¶ÅÁöÑÊï∞ÊçÆ‰ªé‰∏ªÂ≠òÂ§çÂà∂‰∏Ä‰ªΩÂà∞ CPU ÁöÑÈ´òÈÄüÁºìÂ≠òÂΩì‰∏≠„ÄÇ ÈÇ£‰πà CPU ËøõË°åËÆ°ÁÆóÊó∂Â∞±ÂèØ‰ª•Áõ¥Êé•‰ªéÂÆÉÁöÑÈ´òÈÄüÁºìÂ≠òËØªÂèñÊï∞ÊçÆÂíåÂêëÂÖ∂‰∏≠ÂÜôÂÖ•Êï∞ÊçÆÔºåÂΩìËøêÁÆóÁªìÊùü‰πãÂêéÔºåÂÜçÂ∞ÜÈ´òÈÄüÁºìÂ≠ò‰∏≠ÁöÑÊï∞ÊçÆÂà∑Êñ∞Âà∞‰∏ªÂ≠òÂΩì‰∏≠„ÄÇ ‰πãÂêéÔºåËøôÂÆ∂ÂÖ¨Âè∏ÂºÄÂßãËÆæÁ´ã‰∏≠Â±ÇÁÆ°ÁêÜ‰∫∫ÂëòÔºåÁÆ°ÁêÜ‰∫∫ÂëòÁõ¥Êé•ÂΩí CEO È¢ÜÂØºÔºåÈ¢ÜÂØºÊúâ‰ªÄ‰πàÊåáÁ§∫ÔºåÁõ¥Êé•ÂëäËØâÁÆ°ÁêÜ‰∫∫ÂëòÔºåÁÑ∂ÂêéÂ∞±ÂèØ‰ª•ÂéªÂÅöËá™Â∑±ÁöÑ‰∫ãÊÉÖ‰∫Ü„ÄÇÁÆ°ÁêÜ‰∫∫ÂëòË¥üË¥£ÂéªÂçèË∞ÉÂ∫ïÂ±ÇÂëòÂ∑•ÁöÑÂ∑•‰Ωú„ÄÇ Âõ†‰∏∫ÁÆ°ÁêÜ‰∫∫ÂëòÊòØ‰∫ÜËß£Êâã‰∏ãÁöÑ‰∫∫Âëò‰ª•ÂèäËá™Â∑±Ë¥üË¥£ÁöÑ‰∫ãÊÉÖÁöÑ„ÄÇÊâÄ‰ª•Â§ßÂ§öÊï∞Êó∂ÂÄôÔºåÂÖ¨Âè∏ÁöÑÂêÑÁßçÂÜ≥Á≠ñÔºåÈÄöÁü•Á≠âÔºåCEO Âè™Ë¶ÅÂíåÁÆ°ÁêÜ‰∫∫Âëò‰πãÈó¥Ê≤üÈÄöÂ∞±Â§ü‰∫Ü„ÄÇ ËÄåÈöèÁùÄ CPU ËÉΩÂäõÁöÑ‰∏çÊñ≠ÊèêÂçáÔºå‰∏ÄÂ±ÇÁºìÂ≠òÂ∞±ÊÖ¢ÊÖ¢ÁöÑÊó†Ê≥ïÊª°Ë∂≥Ë¶ÅÊ±Ç‰∫ÜÔºåÂ∞±ÈÄêÊ∏êÁöÑË°çÁîüÂá∫Â§öÁ∫ßÁºìÂ≠ò„ÄÇ ÊåâÁÖßÊï∞ÊçÆËØªÂèñÈ°∫Â∫èÂíå‰∏é CPU ÁªìÂêàÁöÑÁ¥ßÂØÜÁ®ãÂ∫¶ÔºåCPU ÁºìÂ≠òÂèØ‰ª•ÂàÜ‰∏∫‰∏ÄÁ∫ßÁºìÂ≠òÔºàL1ÔºâÔºå‰∫åÁ∫ßÁºìÂ≠òÔºàL2ÔºâÔºåÈÉ®ÂàÜÈ´òÁ´Ø CPU ËøòÂÖ∑Êúâ‰∏âÁ∫ßÁºìÂ≠òÔºàL3ÔºâÔºåÊØè‰∏ÄÁ∫ßÁºìÂ≠ò‰∏≠ÊâÄÂÇ®Â≠òÁöÑÂÖ®ÈÉ®Êï∞ÊçÆÈÉΩÊòØ‰∏ã‰∏ÄÁ∫ßÁºìÂ≠òÁöÑ‰∏ÄÈÉ®ÂàÜ„ÄÇ Ëøô‰∏âÁßçÁºìÂ≠òÁöÑÊäÄÊúØÈöæÂ∫¶ÂíåÂà∂ÈÄ†ÊàêÊú¨ÊòØÁõ∏ÂØπÈÄíÂáèÁöÑÔºåÊâÄ‰ª•ÂÖ∂ÂÆπÈáè‰πüÊòØÁõ∏ÂØπÈÄíÂ¢ûÁöÑ„ÄÇ ÈÇ£‰πàÔºåÂú®Êúâ‰∫ÜÂ§öÁ∫ßÁºìÂ≠ò‰πãÂêéÔºåÁ®ãÂ∫èÁöÑÊâßË°åÂ∞±ÂèòÊàê‰∫ÜÔºöÂΩì CPU Ë¶ÅËØªÂèñ‰∏Ä‰∏™Êï∞ÊçÆÊó∂ÔºåÈ¶ñÂÖà‰ªé‰∏ÄÁ∫ßÁºìÂ≠ò‰∏≠Êü•ÊâæÔºåÂ¶ÇÊûúÊ≤°ÊúâÊâæÂà∞ÂÜç‰ªé‰∫åÁ∫ßÁºìÂ≠ò‰∏≠Êü•ÊâæÔºåÂ¶ÇÊûúËøòÊòØÊ≤°ÊúâÂ∞±‰ªé‰∏âÁ∫ßÁºìÂ≠òÊàñÂÜÖÂ≠ò‰∏≠Êü•Êâæ„ÄÇ ÈöèÁùÄÂÖ¨Âè∏Ë∂äÊù•Ë∂äÂ§ßÔºåËÄÅÊùøË¶ÅÁÆ°ÁöÑ‰∫ãÊÉÖË∂äÊù•Ë∂äÂ§öÔºåÂÖ¨Âè∏ÁöÑÁÆ°ÁêÜÈÉ®Èó®ÂºÄÂßãÊîπÈù©ÔºåÂºÄÂßãÂá∫Áé∞È´òÂ±ÇÔºå‰∏≠Â±ÇÔºåÂ∫ïÂ±ÇÁ≠âÁÆ°ÁêÜËÄÖ„ÄÇ‰∏ÄÁ∫ß‰∏ÄÁ∫ß‰πãÈó¥ÈÄêÂ±ÇÁÆ°ÁêÜ„ÄÇ ÂçïÊ†∏ CPU Âè™Âê´Êúâ‰∏ÄÂ•ó L1ÔºåL2ÔºåL3 ÁºìÂ≠òÔºõÂ¶ÇÊûú CPU Âê´ÊúâÂ§ö‰∏™Ê†∏ÂøÉÔºåÂç≥Â§öÊ†∏ CPUÔºåÂàôÊØè‰∏™Ê†∏ÂøÉÈÉΩÂê´Êúâ‰∏ÄÂ•ó L1ÔºàÁîöËá≥Âíå L2ÔºâÁºìÂ≠òÔºåËÄåÂÖ±‰∫´ L3ÔºàÊàñËÄÖÂíå L2ÔºâÁºìÂ≠ò„ÄÇ ÂÖ¨Âè∏‰πüÂàÜÂæàÂ§öÁßçÔºåÊúâ‰∫õÂÖ¨Âè∏Âè™Êúâ‰∏Ä‰∏™Â§ß BossÔºå‰ªñ‰∏Ä‰∏™‰∫∫ËØ¥‰∫ÜÁÆó„ÄÇ‰ΩÜÊòØÊúâ‰∫õÂÖ¨Âè∏ÊúâÊØîÂ¶ÇËÅîÂ∏≠ÊÄªÁªèÁêÜ„ÄÅÂêà‰ºô‰∫∫Á≠âÊú∫Âà∂„ÄÇ ÂçïÊ†∏ CPU Â∞±ÂÉè‰∏ÄÂÆ∂ÂÖ¨Âè∏Âè™Êúâ‰∏Ä‰∏™ËÄÅÊùøÔºåÊâÄÊúâÂëΩ‰ª§ÈÉΩÊù•Ëá™‰∫é‰ªñÔºåÈÇ£‰πàÂ∞±Âè™ÈúÄË¶Å‰∏ÄÂ•óÁÆ°ÁêÜÁè≠Â∫ïÂ∞±Â§ü‰∫Ü„ÄÇ Â§öÊ†∏ CPU Â∞±ÂÉè‰∏ÄÂÆ∂ÂÖ¨Âè∏ÊòØÁî±Â§ö‰∏™Âêà‰ºô‰∫∫ÂÖ±ÂêåÂàõÂäûÁöÑÔºåÈÇ£‰πàÔºåÂ∞±ÈúÄË¶ÅÁªôÊØè‰∏™Âêà‰ºô‰∫∫ÈÉΩËÆæÁ´ã‰∏ÄÂ•ó‰æõËá™Â∑±Áõ¥Êé•È¢ÜÂØºÁöÑÈ´òÂ±ÇÁÆ°ÁêÜ‰∫∫ÂëòÔºåÂ§ö‰∏™Âêà‰ºô‰∫∫ÂÖ±‰∫´‰ΩøÁî®ÁöÑÊòØÂÖ¨Âè∏ÁöÑÂ∫ïÂ±ÇÂëòÂ∑•„ÄÇ ËøòÊúâÁöÑÂÖ¨Âè∏Ôºå‰∏çÊñ≠Â£ÆÂ§ßÔºåÂºÄÂßãÊãÜÂàÜÂá∫ÂêÑ‰∏™Â≠êÂÖ¨Âè∏„ÄÇÂêÑ‰∏™Â≠êÂÖ¨Âè∏Â∞±ÊòØÂ§ö‰∏™ CPU ‰∫ÜÔºå‰∫íÁõ∏‰πãÂâçÊ≤°ÊúâÂÖ±Áî®ÁöÑËµÑÊ∫ê„ÄÇ‰∫í‰∏çÂΩ±Âìç„ÄÇ ‰∏ãÂõæ‰∏∫‰∏Ä‰∏™Âçï CPU ÂèåÊ†∏ÁöÑÁºìÂ≠òÁªìÊûÑÔºö ÈöèÁùÄËÆ°ÁÆóÊú∫ËÉΩÂäõ‰∏çÊñ≠ÊèêÂçáÔºåÂºÄÂßãÊîØÊåÅÂ§öÁ∫øÁ®ã„ÄÇÈÇ£‰πàÈóÆÈ¢òÂ∞±Êù•‰∫ÜÔºåÊàë‰ª¨ÂàÜÂà´Êù•ÂàÜÊûê‰∏ãÂçïÁ∫øÁ®ã„ÄÅÂ§öÁ∫øÁ®ãÂú®ÂçïÊ†∏ CPU„ÄÅÂ§öÊ†∏ CPU ‰∏≠ÁöÑÂΩ±Âìç„ÄÇ ÂçïÁ∫øÁ®ãÔºöCPU Ê†∏ÂøÉÁöÑÁºìÂ≠òÂè™Ë¢´‰∏Ä‰∏™Á∫øÁ®ãËÆøÈóÆ„ÄÇÁºìÂ≠òÁã¨Âç†Ôºå‰∏ç‰ºöÂá∫Áé∞ËÆøÈóÆÂÜ≤Á™ÅÁ≠âÈóÆÈ¢ò„ÄÇ ÂçïÊ†∏ CPUÔºåÂ§öÁ∫øÁ®ãÔºöËøõÁ®ã‰∏≠ÁöÑÂ§ö‰∏™Á∫øÁ®ã‰ºöÂêåÊó∂ËÆøÈóÆËøõÁ®ã‰∏≠ÁöÑÂÖ±‰∫´Êï∞ÊçÆÔºåCPU Â∞ÜÊüêÂùóÂÜÖÂ≠òÂä†ËΩΩÂà∞ÁºìÂ≠òÂêéÔºå‰∏çÂêåÁ∫øÁ®ãÂú®ËÆøÈóÆÁõ∏ÂêåÁöÑÁâ©ÁêÜÂú∞ÂùÄÁöÑÊó∂ÂÄôÔºåÈÉΩ‰ºöÊò†Â∞ÑÂà∞Áõ∏ÂêåÁöÑÁºìÂ≠ò‰ΩçÁΩÆÔºåËøôÊ†∑Âç≥‰ΩøÂèëÁîüÁ∫øÁ®ãÁöÑÂàáÊç¢ÔºåÁºìÂ≠ò‰ªçÁÑ∂‰∏ç‰ºöÂ§±Êïà„ÄÇ ‰ΩÜÁî±‰∫é‰ªª‰ΩïÊó∂ÂàªÂè™ËÉΩÊúâ‰∏Ä‰∏™Á∫øÁ®ãÂú®ÊâßË°åÔºåÂõ†Ê≠§‰∏ç‰ºöÂá∫Áé∞ÁºìÂ≠òËÆøÈóÆÂÜ≤Á™Å„ÄÇ Â§öÊ†∏ CPUÔºåÂ§öÁ∫øÁ®ãÔºöÊØè‰∏™Ê†∏ÈÉΩËá≥Â∞ëÊúâ‰∏Ä‰∏™ L1 ÁºìÂ≠ò„ÄÇÂ§ö‰∏™Á∫øÁ®ãËÆøÈóÆËøõÁ®ã‰∏≠ÁöÑÊüê‰∏™ÂÖ±‰∫´ÂÜÖÂ≠òÔºå‰∏îËøôÂ§ö‰∏™Á∫øÁ®ãÂàÜÂà´Âú®‰∏çÂêåÁöÑÊ†∏ÂøÉ‰∏äÊâßË°åÔºåÂàôÊØè‰∏™Ê†∏ÂøÉÈÉΩ‰ºöÂú®ÂêÑËá™ÁöÑ Cache ‰∏≠‰øùÁïô‰∏Ä‰ªΩÂÖ±‰∫´ÂÜÖÂ≠òÁöÑÁºìÂÜ≤„ÄÇ Áî±‰∫éÂ§öÊ†∏ÊòØÂèØ‰ª•Âπ∂Ë°åÁöÑÔºåÂèØËÉΩ‰ºöÂá∫Áé∞Â§ö‰∏™Á∫øÁ®ãÂêåÊó∂ÂÜôÂêÑËá™ÁöÑÁºìÂ≠òÁöÑÊÉÖÂÜµÔºåËÄåÂêÑËá™ÁöÑ Cache ‰πãÈó¥ÁöÑÊï∞ÊçÆÂ∞±ÊúâÂèØËÉΩ‰∏çÂêå„ÄÇ Âú® CPU Âíå‰∏ªÂ≠ò‰πãÈó¥Â¢ûÂä†ÁºìÂ≠òÔºåÂú®Â§öÁ∫øÁ®ãÂú∫ÊôØ‰∏ãÂ∞±ÂèØËÉΩÂ≠òÂú®ÁºìÂ≠ò‰∏ÄËá¥ÊÄßÈóÆÈ¢òÔºå‰πüÂ∞±ÊòØËØ¥ÔºåÂú®Â§öÊ†∏ CPU ‰∏≠ÔºåÊØè‰∏™Ê†∏ÁöÑËá™Â∑±ÁöÑÁºìÂ≠ò‰∏≠ÔºåÂÖ≥‰∫éÂêå‰∏Ä‰∏™Êï∞ÊçÆÁöÑÁºìÂ≠òÂÜÖÂÆπÂèØËÉΩ‰∏ç‰∏ÄËá¥„ÄÇ Â¶ÇÊûúËøôÂÆ∂ÂÖ¨Âè∏ÁöÑÂëΩ‰ª§ÈÉΩÊòØ‰∏≤Ë°å‰∏ãÂèëÁöÑËØùÔºåÈÇ£‰πàÂ∞±Ê≤°Êúâ‰ªª‰ΩïÈóÆÈ¢ò„ÄÇ Â¶ÇÊûúËøôÂÆ∂ÂÖ¨Âè∏ÁöÑÂëΩ‰ª§ÈÉΩÊòØÂπ∂Ë°å‰∏ãÂèëÁöÑËØùÔºåÂπ∂‰∏îËøô‰∫õÂëΩ‰ª§ÈÉΩÊòØÁî±Âêå‰∏Ä‰∏™ CEO ‰∏ãÂèëÁöÑÔºåËøôÁßçÊú∫Âà∂ÊòØ‰πüÊ≤°Êúâ‰ªÄ‰πàÈóÆÈ¢ò„ÄÇÂõ†‰∏∫‰ªñÁöÑÂëΩ‰ª§ÊâßË°åËÄÖÂè™Êúâ‰∏ÄÂ•óÁÆ°ÁêÜ‰ΩìÁ≥ª„ÄÇ Â¶ÇÊûúËøôÂÆ∂ÂÖ¨Âè∏ÁöÑÂëΩ‰ª§ÈÉΩÊòØÂπ∂Ë°å‰∏ãÂèëÁöÑËØùÔºåÂπ∂‰∏îËøô‰∫õÂëΩ‰ª§ÊòØÁî±Â§ö‰∏™Âêà‰ºô‰∫∫‰∏ãÂèëÁöÑÔºåËøôÂ∞±ÊúâÈóÆÈ¢ò‰∫Ü„ÄÇ Âõ†‰∏∫ÊØè‰∏™Âêà‰ºô‰∫∫Âè™‰ºöÊääÂëΩ‰ª§‰∏ãËææÁªôËá™Â∑±Áõ¥Â±ûÁöÑÁÆ°ÁêÜ‰∫∫ÂëòÔºåËÄåÂ§ö‰∏™ÁÆ°ÁêÜ‰∫∫ÂëòÁÆ°ÁêÜÁöÑÂ∫ïÂ±ÇÂëòÂ∑•ÂèØËÉΩÊòØÂÖ¨Áî®ÁöÑ„ÄÇ ÊØîÂ¶ÇÔºåÂêà‰ºô‰∫∫ 1 Ë¶ÅËæûÈÄÄÂëòÂ∑• aÔºåÂêà‰ºô‰∫∫ 2 Ë¶ÅÁªôÂëòÂ∑• a ÂçáËÅåÔºåÂçáËÅåÂêéÁöÑËØù‰ªñÂÜçË¢´ËæûÈÄÄÈúÄË¶ÅÂ§ö‰∏™Âêà‰ºô‰∫∫ÂºÄ‰ºöÂÜ≥ËÆÆ„ÄÇ‰∏§‰∏™Âêà‰ºô‰∫∫ÂàÜÂà´ÊääÂëΩ‰ª§‰∏ãÂèëÁªô‰∫ÜËá™Â∑±ÁöÑÁÆ°ÁêÜ‰∫∫Âëò„ÄÇ Âêà‰ºô‰∫∫ 1 ÂëΩ‰ª§‰∏ãËææÂêéÔºåÁÆ°ÁêÜ‰∫∫Âëò a Âú®ËæûÈÄÄ‰∫ÜÂëòÂ∑•ÂêéÔºå‰ªñÂ∞±Áü•ÈÅìËøô‰∏™ÂëòÂ∑•Ë¢´ÂºÄÈô§‰∫Ü„ÄÇ ËÄåÂêà‰ºô‰∫∫ 2 ÁöÑÁÆ°ÁêÜ‰∫∫Âëò 2 ËøôÊó∂ÂÄôÂú®Ê≤°ÂæóÂà∞Ê∂àÊÅØ‰πãÂâçÔºåËøòËÆ§‰∏∫ÂëòÂ∑• a ÊòØÂú®ËÅåÁöÑÔºå‰ªñÂ∞±Ê¨£ÁÑ∂ÁöÑÊé•Êî∂‰∫ÜÂêà‰ºô‰∫∫Áªô‰ªñÁöÑÂçáËÅå a ÁöÑÂëΩ‰ª§„ÄÇ Â§ÑÁêÜÂô®‰ºòÂåñÂíåÊåá‰ª§ÈáçÊéí‰∏äÈù¢ÊèêÂà∞Âú® CPU Âíå‰∏ªÂ≠ò‰πãÈó¥Â¢ûÂä†ÁºìÂ≠òÔºåÂú®Â§öÁ∫øÁ®ãÂú∫ÊôØ‰∏ã‰ºöÂ≠òÂú®ÁºìÂ≠ò‰∏ÄËá¥ÊÄßÈóÆÈ¢ò„ÄÇ Èô§‰∫ÜËøôÁßçÊÉÖÂÜµÔºåËøòÊúâ‰∏ÄÁßçÁ°¨‰ª∂ÈóÆÈ¢ò‰πüÊØîËæÉÈáçË¶Å„ÄÇÈÇ£Â∞±ÊòØ‰∏∫‰∫Ü‰ΩøÂ§ÑÁêÜÂô®ÂÜÖÈÉ®ÁöÑËøêÁÆóÂçïÂÖÉËÉΩÂ§üË¢´ÂÖÖÂàÜÂà©Áî®ÔºåÂ§ÑÁêÜÂô®ÂèØËÉΩ‰ºöÂØπËæìÂÖ•‰ª£Á†ÅËøõË°å‰π±Â∫èÊâßË°åÂ§ÑÁêÜ„ÄÇËøôÂ∞±ÊòØÂ§ÑÁêÜÂô®‰ºòÂåñ„ÄÇ Èô§‰∫ÜÁé∞Âú®ÂæàÂ§öÊµÅË°åÁöÑÂ§ÑÁêÜÂô®‰ºöÂØπ‰ª£Á†ÅËøõË°å‰ºòÂåñ‰π±Â∫èÂ§ÑÁêÜÔºåÂæàÂ§öÁºñÁ®ãËØ≠Ë®ÄÁöÑÁºñËØëÂô®‰πü‰ºöÊúâÁ±ª‰ººÁöÑ‰ºòÂåñÔºåÊØîÂ¶Ç Java ËôöÊãüÊú∫ÁöÑÂç≥Êó∂ÁºñËØëÂô®ÔºàJITÔºâ‰πü‰ºöÂÅöÊåá‰ª§ÈáçÊéí„ÄÇ ÂèØÊÉ≥ËÄåÁü•ÔºåÂ¶ÇÊûú‰ªªÁî±Â§ÑÁêÜÂô®‰ºòÂåñÂíåÁºñËØëÂô®ÂØπÊåá‰ª§ÈáçÊéíÁöÑËØùÔºåÂ∞±ÂèØËÉΩÂØºËá¥ÂêÑÁßçÂêÑÊ†∑ÁöÑÈóÆÈ¢ò„ÄÇ ÂÖ≥‰∫éÂëòÂ∑•ÁªÑÁªáË∞ÉÊï¥ÁöÑÊÉÖÂÜµÔºåÂ¶ÇÊûúÂÖÅËÆ∏‰∫∫‰∫ãÈÉ®Âú®Êé•Âà∞Â§ö‰∏™ÂëΩ‰ª§ÂêéËøõË°åÈöèÊÑèÊãÜÂàÜ‰π±Â∫èÊâßË°åÊàñËÄÖÈáçÊéíÁöÑËØùÔºåÈÇ£‰πàÂØπ‰∫éËøô‰∏™ÂëòÂ∑•‰ª•ÂèäËøôÂÆ∂ÂÖ¨Âè∏ÁöÑÂΩ±ÂìçÊòØÈùûÂ∏∏Â§ßÁöÑ„ÄÇ Âπ∂ÂèëÁºñÁ®ãÁöÑÈóÆÈ¢òÂâçÈù¢ËØ¥ÁöÑÂíåÁ°¨‰ª∂ÊúâÂÖ≥ÁöÑÊ¶ÇÂøµ‰Ω†ÂèØËÉΩÂê¨ÂæóÊúâÁÇπËíôÔºåËøò‰∏çÁü•ÈÅì‰ªñÂà∞Â∫ïÂíåËΩØ‰ª∂ÊúâÂï•ÂÖ≥Á≥ª„ÄÇ ‰ΩÜÊòØÂÖ≥‰∫éÂπ∂ÂèëÁºñÁ®ãÁöÑÈóÆÈ¢ò‰Ω†Â∫îËØ•ÊúâÊâÄ‰∫ÜËß£‰∫ÜÔºåÊØîÂ¶ÇÂéüÂ≠êÊÄßÈóÆÈ¢òÔºåÂèØËßÅÊÄßÈóÆÈ¢òÂíåÊúâÂ∫èÊÄßÈóÆÈ¢ò„ÄÇ ÂÖ∂ÂÆûÔºåÂéüÂ≠êÊÄßÈóÆÈ¢òÔºåÂèØËßÅÊÄßÈóÆÈ¢òÂíåÊúâÂ∫èÊÄßÈóÆÈ¢òÊòØ‰∫∫‰ª¨ÊäΩË±°ÂÆö‰πâÂá∫Êù•ÁöÑ„ÄÇËÄåËøô‰∏™ÊäΩË±°ÁöÑÂ∫ïÂ±ÇÈóÆÈ¢òÂ∞±ÊòØÂâçÈù¢ÊèêÂà∞ÁöÑÁºìÂ≠ò‰∏ÄËá¥ÊÄßÈóÆÈ¢ò„ÄÅÂ§ÑÁêÜÂô®‰ºòÂåñÈóÆÈ¢òÂíåÊåá‰ª§ÈáçÊéíÈóÆÈ¢òÁ≠â„ÄÇ ËøôÈáåÁÆÄÂçïÂõûÈ°æ‰∏ãËøô‰∏â‰∏™ÈóÆÈ¢òÔºåÊàë‰ª¨ËØ¥ÔºåÂπ∂ÂèëÁºñÁ®ãÔºå‰∏∫‰∫Ü‰øùËØÅÊï∞ÊçÆÁöÑÂÆâÂÖ®ÔºåÈúÄË¶ÅÊª°Ë∂≥‰ª•‰∏ã‰∏â‰∏™ÁâπÊÄßÔºö ÂéüÂ≠êÊÄßÔºåÊòØÊåáÂú®‰∏Ä‰∏™Êìç‰Ωú‰∏≠ÔºåCPU ‰∏çÂèØ‰ª•Âú®‰∏≠ÈÄîÊöÇÂÅúÁÑ∂ÂêéÂÜçË∞ÉÂ∫¶ÔºåÂç≥‰∏çË¢´‰∏≠Êñ≠Êìç‰ΩúÔºåË¶Å‰∏çÊâßË°åÂÆåÊàêÔºåË¶Å‰∏çÂ∞±‰∏çÊâßË°å„ÄÇ ÂèØËßÅÊÄßÔºåÊòØÊåáÂΩìÂ§ö‰∏™Á∫øÁ®ãËÆøÈóÆÂêå‰∏Ä‰∏™ÂèòÈáèÊó∂Ôºå‰∏Ä‰∏™Á∫øÁ®ã‰øÆÊîπ‰∫ÜËøô‰∏™ÂèòÈáèÁöÑÂÄºÔºåÂÖ∂‰ªñÁ∫øÁ®ãËÉΩÂ§üÁ´ãÂç≥ÁúãÂæóÂà∞‰øÆÊîπÁöÑÂÄº„ÄÇ ÊúâÂ∫èÊÄßÔºåÂç≥Á®ãÂ∫èÊâßË°åÁöÑÈ°∫Â∫èÊåâÁÖß‰ª£Á†ÅÁöÑÂÖàÂêéÈ°∫Â∫èÊâßË°å„ÄÇ ÊúâÊ≤°ÊúâÂèëÁé∞ÔºåÁºìÂ≠ò‰∏ÄËá¥ÊÄßÈóÆÈ¢òÂÖ∂ÂÆûÂ∞±ÊòØÂèØËßÅÊÄßÈóÆÈ¢ò„ÄÇËÄåÂ§ÑÁêÜÂô®‰ºòÂåñÊòØÂèØ‰ª•ÂØºËá¥ÂéüÂ≠êÊÄßÈóÆÈ¢òÁöÑ„ÄÇÊåá‰ª§ÈáçÊéíÂç≥‰ºöÂØºËá¥ÊúâÂ∫èÊÄßÈóÆÈ¢ò„ÄÇ ÊâÄ‰ª•ÔºåÂêéÊñáÂ∞Ü‰∏çÂÜçÊèêËµ∑Á°¨‰ª∂Â±ÇÈù¢ÁöÑÈÇ£‰∫õÊ¶ÇÂøµÔºåËÄåÊòØÁõ¥Êé•‰ΩøÁî®Â§ßÂÆ∂ÁÜüÊÇâÁöÑÂéüÂ≠êÊÄß„ÄÅÂèØËßÅÊÄßÂíåÊúâÂ∫èÊÄß„ÄÇ ‰ªÄ‰πàÊòØÂÜÖÂ≠òÊ®°ÂûãÂâçÈù¢ÊèêÂà∞ÁöÑÔºåÁºìÂ≠ò‰∏ÄËá¥ÊÄßÈóÆÈ¢ò„ÄÅÂ§ÑÁêÜÂô®‰ºòÂåñÁöÑÊåá‰ª§ÈáçÊéíÈóÆÈ¢òÊòØÁ°¨‰ª∂ÁöÑ‰∏çÊñ≠ÂçáÁ∫ßÂØºËá¥ÁöÑ„ÄÇÈÇ£‰πàÔºåÊúâÊ≤°Êúâ‰ªÄ‰πàÊú∫Âà∂ÂèØ‰ª•ÂæàÂ•ΩÁöÑËß£ÂÜ≥‰∏äÈù¢ÁöÑËøô‰∫õÈóÆÈ¢òÂë¢Ôºü ÊúÄÁÆÄÂçïÁõ¥Êé•ÁöÑÂÅöÊ≥ïÂ∞±ÊòØÂ∫üÈô§Â§ÑÁêÜÂô®ÂíåÂ§ÑÁêÜÂô®ÁöÑ‰ºòÂåñÊäÄÊúØ„ÄÅÂ∫üÈô§ CPU ÁºìÂ≠òÔºåËÆ© CPU Áõ¥Êé•Âíå‰∏ªÂ≠ò‰∫§‰∫í„ÄÇ ‰ΩÜÊòØÔºåËøô‰πàÂÅöËôΩÁÑ∂ÂèØ‰ª•‰øùËØÅÂ§öÁ∫øÁ®ã‰∏ãÁöÑÂπ∂ÂèëÈóÆÈ¢ò„ÄÇ‰ΩÜÊòØÔºåËøôÂ∞±ÊúâÁÇπÂõ†ÂôéÂ∫üÈ£ü‰∫Ü„ÄÇ ÊâÄ‰ª•Ôºå‰∏∫‰∫Ü‰øùËØÅÂπ∂ÂèëÁºñÁ®ã‰∏≠ÂèØ‰ª•Êª°Ë∂≥ÂéüÂ≠êÊÄß„ÄÅÂèØËßÅÊÄßÂèäÊúâÂ∫èÊÄß„ÄÇÊúâ‰∏Ä‰∏™ÈáçË¶ÅÁöÑÊ¶ÇÂøµÔºåÈÇ£Â∞±ÊòØ‚Äî‚ÄîÂÜÖÂ≠òÊ®°Âûã„ÄÇ ‰∏∫‰∫Ü‰øùËØÅÂÖ±‰∫´ÂÜÖÂ≠òÁöÑÊ≠£Á°ÆÊÄßÔºàÂèØËßÅÊÄß„ÄÅÊúâÂ∫èÊÄß„ÄÅÂéüÂ≠êÊÄßÔºâÔºåÂÜÖÂ≠òÊ®°ÂûãÂÆö‰πâ‰∫ÜÂÖ±‰∫´ÂÜÖÂ≠òÁ≥ªÁªü‰∏≠Â§öÁ∫øÁ®ãÁ®ãÂ∫èËØªÂÜôÊìç‰ΩúË°å‰∏∫ÁöÑËßÑËåÉ„ÄÇ ÈÄöËøáËøô‰∫õËßÑÂàôÊù•ËßÑËåÉÂØπÂÜÖÂ≠òÁöÑËØªÂÜôÊìç‰ΩúÔºå‰ªéËÄå‰øùËØÅÊåá‰ª§ÊâßË°åÁöÑÊ≠£Á°ÆÊÄß„ÄÇÂÆÉ‰∏éÂ§ÑÁêÜÂô®ÊúâÂÖ≥„ÄÅ‰∏éÁºìÂ≠òÊúâÂÖ≥„ÄÅ‰∏éÂπ∂ÂèëÊúâÂÖ≥„ÄÅ‰∏éÁºñËØëÂô®‰πüÊúâÂÖ≥„ÄÇ ÂÆÉËß£ÂÜ≥‰∫Ü CPU Â§öÁ∫ßÁºìÂ≠ò„ÄÅÂ§ÑÁêÜÂô®‰ºòÂåñ„ÄÅÊåá‰ª§ÈáçÊéíÁ≠âÂØºËá¥ÁöÑÂÜÖÂ≠òËÆøÈóÆÈóÆÈ¢òÔºå‰øùËØÅ‰∫ÜÂπ∂ÂèëÂú∫ÊôØ‰∏ãÁöÑ‰∏ÄËá¥ÊÄß„ÄÅÂéüÂ≠êÊÄßÂíåÊúâÂ∫èÊÄß„ÄÇ ÂÜÖÂ≠òÊ®°ÂûãËß£ÂÜ≥Âπ∂ÂèëÈóÆÈ¢ò‰∏ªË¶ÅÈááÁî®‰∏§ÁßçÊñπÂºèÔºö ÈôêÂà∂Â§ÑÁêÜÂô®‰ºòÂåñ ‰ΩøÁî®ÂÜÖÂ≠òÂ±èÈöú Êú¨ÊñáÂ∞±‰∏çÊ∑±ÂÖ•Â∫ïÂ±ÇÂéüÁêÜÊù•Â±ïÂºÄ‰ªãÁªç‰∫ÜÔºåÊÑüÂÖ¥Ë∂£ÁöÑÊúãÂèãÂèØ‰ª•Ëá™Ë°åÂ≠¶‰π†„ÄÇ ‰ªÄ‰πàÊòØ Java ÂÜÖÂ≠òÊ®°ÂûãÂâçÈù¢‰ªãÁªç‰∫ÜËÆ°ÁÆóÊú∫ÂÜÖÂ≠òÊ®°ÂûãÔºåËøôÊòØËß£ÂÜ≥Â§öÁ∫øÁ®ãÂú∫ÊôØ‰∏ãÂπ∂ÂèëÈóÆÈ¢òÁöÑ‰∏Ä‰∏™ÈáçË¶ÅËßÑËåÉ„ÄÇ ÈÇ£‰πàÂÖ∑‰ΩìÁöÑÂÆûÁé∞ÊòØÂ¶Ç‰ΩïÁöÑÂë¢Ôºü‰∏çÂêåÁöÑÁºñÁ®ãËØ≠Ë®ÄÔºåÂú®ÂÆûÁé∞‰∏äÂèØËÉΩÊúâÊâÄ‰∏çÂêå„ÄÇ Êàë‰ª¨Áü•ÈÅìÔºåJava Á®ãÂ∫èÊòØÈúÄË¶ÅËøêË°åÂú® Java ËôöÊãüÊú∫‰∏äÈù¢ÁöÑÔºåJava ÂÜÖÂ≠òÊ®°ÂûãÔºàJava Memory ModelÔºåJMMÔºâÂ∞±ÊòØ‰∏ÄÁßçÁ¨¶ÂêàÂÜÖÂ≠òÊ®°ÂûãËßÑËåÉÁöÑÔºåÂ±èËîΩ‰∫ÜÂêÑÁßçÁ°¨‰ª∂ÂíåÊìç‰ΩúÁ≥ªÁªüÁöÑËÆøÈóÆÂ∑ÆÂºÇÁöÑÔºå‰øùËØÅ‰∫Ü Java Á®ãÂ∫èÂú®ÂêÑÁßçÂπ≥Âè∞‰∏ãÂØπÂÜÖÂ≠òÁöÑËÆøÈóÆÈÉΩËÉΩ‰øùËØÅÊïàÊûú‰∏ÄËá¥ÁöÑÊú∫Âà∂ÂèäËßÑËåÉ„ÄÇ ÊèêÂà∞ Java ÂÜÖÂ≠òÊ®°ÂûãÔºå‰∏ÄËà¨ÊåáÁöÑÊòØ JDK 5 ÂºÄÂßã‰ΩøÁî®ÁöÑÊñ∞ÂÜÖÂ≠òÊ®°ÂûãÔºå‰∏ªË¶ÅÁî± JSR-133ÔºöJavaTM Memory Model and Thread Specification ÊèèËø∞„ÄÇ ÊÑüÂÖ¥Ë∂£ÁöÑÂèØ‰ª•ÂèÇÁúã‰∏ãËøô‰ªΩPDFÊñáÊ°£Ôºö http://www.cs.umd.edu/~pugh/java/memoryModel/jsr133.pdf Java ÂÜÖÂ≠òÊ®°ÂûãËßÑÂÆö‰∫ÜÊâÄÊúâÁöÑÂèòÈáèÈÉΩÂ≠òÂÇ®Âú®‰∏ªÂÜÖÂ≠ò‰∏≠ÔºåÊØèÊù°Á∫øÁ®ãËøòÊúâËá™Â∑±ÁöÑÂ∑•‰ΩúÂÜÖÂ≠ò„ÄÇ Á∫øÁ®ãÁöÑÂ∑•‰ΩúÂÜÖÂ≠ò‰∏≠‰øùÂ≠ò‰∫ÜËØ•Á∫øÁ®ã‰∏≠Áî®Âà∞ÁöÑÂèòÈáèÁöÑ‰∏ªÂÜÖÂ≠òÂâØÊú¨Êã∑Ë¥ùÔºåÁ∫øÁ®ãÂØπÂèòÈáèÁöÑÊâÄÊúâÊìç‰ΩúÈÉΩÂøÖÈ°ªÂú®Â∑•‰ΩúÂÜÖÂ≠ò‰∏≠ËøõË°åÔºåËÄå‰∏çËÉΩÁõ¥Êé•ËØªÂÜô‰∏ªÂÜÖÂ≠ò„ÄÇ ‰∏çÂêåÁöÑÁ∫øÁ®ã‰πãÈó¥‰πüÊó†Ê≥ïÁõ¥Êé•ËÆøÈóÆÂØπÊñπÂ∑•‰ΩúÂÜÖÂ≠ò‰∏≠ÁöÑÂèòÈáèÔºåÁ∫øÁ®ãÈó¥ÂèòÈáèÁöÑ‰º†ÈÄíÂùáÈúÄË¶ÅËá™Â∑±ÁöÑÂ∑•‰ΩúÂÜÖÂ≠òÂíå‰∏ªÂ≠ò‰πãÈó¥ËøõË°åÊï∞ÊçÆÂêåÊ≠•ËøõË°å„ÄÇ ËÄå JMM Â∞±‰ΩúÁî®‰∫éÂ∑•‰ΩúÂÜÖÂ≠òÂíå‰∏ªÂ≠ò‰πãÈó¥Êï∞ÊçÆÂêåÊ≠•ËøáÁ®ã„ÄÇÂÆÉËßÑÂÆö‰∫ÜÂ¶Ç‰ΩïÂÅöÊï∞ÊçÆÂêåÊ≠•‰ª•Âèä‰ªÄ‰πàÊó∂ÂÄôÂÅöÊï∞ÊçÆÂêåÊ≠•„ÄÇ ËøôÈáåÈù¢ÊèêÂà∞ÁöÑ‰∏ªÂÜÖÂ≠òÂíåÂ∑•‰ΩúÂÜÖÂ≠òÔºåËØªËÄÖÂèØ‰ª•ÁÆÄÂçïÁöÑÁ±ªÊØîÊàêËÆ°ÁÆóÊú∫ÂÜÖÂ≠òÊ®°Âûã‰∏≠ÁöÑ‰∏ªÂ≠òÂíåÁºìÂ≠òÁöÑÊ¶ÇÂøµ„ÄÇ ÁâπÂà´ÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÔºå‰∏ªÂÜÖÂ≠òÂíåÂ∑•‰ΩúÂÜÖÂ≠ò‰∏é JVM ÂÜÖÂ≠òÁªìÊûÑ‰∏≠ÁöÑ Java Â†Ü„ÄÅÊ†à„ÄÅÊñπÊ≥ïÂå∫Á≠âÂπ∂‰∏çÊòØÂêå‰∏Ä‰∏™Â±ÇÊ¨°ÁöÑÂÜÖÂ≠òÂàíÂàÜÔºåÊó†Ê≥ïÁõ¥Êé•Á±ªÊØî„ÄÇ „ÄäÊ∑±ÂÖ•ÁêÜËß£JavaËôöÊãüÊú∫„Äã‰∏≠ËÆ§‰∏∫ÔºöÂ¶ÇÊûú‰∏ÄÂÆöË¶ÅÂãâÂº∫ÂØπÂ∫îËµ∑Êù•ÁöÑËØùÔºå‰ªéÂèòÈáè„ÄÅ‰∏ªÂÜÖÂ≠ò„ÄÅÂ∑•‰ΩúÂÜÖÂ≠òÁöÑÂÆö‰πâÊù•ÁúãÔºå‰∏ªÂÜÖÂ≠ò‰∏ªË¶ÅÂØπÂ∫î‰∫é Java Â†Ü‰∏≠ÁöÑÂØπË±°ÂÆû‰æãÊï∞ÊçÆÈÉ®ÂàÜ„ÄÇËÄåÂ∑•‰ΩúÂÜÖÂ≠òÂàôÂØπÂ∫î‰∫éËôöÊãüÊú∫Ê†à‰∏≠ÁöÑÈÉ®ÂàÜÂå∫Âüü„ÄÇ ÊâÄ‰ª•ÔºåÂÜçÊù•ÊÄªÁªì‰∏ãÔºåJMM ÊòØ‰∏ÄÁßçËßÑËåÉÔºåÊòØËß£ÂÜ≥Áî±‰∫éÂ§öÁ∫øÁ®ãÈÄöËøáÂÖ±‰∫´ÂÜÖÂ≠òËøõË°åÈÄö‰ø°Êó∂ÔºåÂ≠òÂú®ÁöÑÊú¨Âú∞ÂÜÖÂ≠òÊï∞ÊçÆ‰∏ç‰∏ÄËá¥„ÄÅÁºñËØëÂô®‰ºöÂØπ‰ª£Á†ÅÊåá‰ª§ÈáçÊéíÂ∫è„ÄÅÂ§ÑÁêÜÂô®‰ºöÂØπ‰ª£Á†Å‰π±Â∫èÊâßË°åÁ≠âÂ∏¶Êù•ÁöÑÈóÆÈ¢ò„ÄÇ ÁõÆÁöÑÊòØ‰øùËØÅÂπ∂ÂèëÁºñÁ®ãÂú∫ÊôØ‰∏≠ÁöÑÂéüÂ≠êÊÄß„ÄÅÂèØËßÅÊÄßÂíåÊúâÂ∫èÊÄß„ÄÇ Java ÂÜÖÂ≠òÊ®°ÂûãÁöÑÂÆûÁé∞‰∫ÜËß£ Java Â§öÁ∫øÁ®ãÁöÑÊúãÂèãÈÉΩÁü•ÈÅìÔºåÂú® Java ‰∏≠Êèê‰æõ‰∫Ü‰∏ÄÁ≥ªÂàóÂíåÂπ∂ÂèëÂ§ÑÁêÜÁõ∏ÂÖ≥ÁöÑÂÖ≥ÈîÆÂ≠óÔºåÊØîÂ¶Ç Volatile„ÄÅSynchronized„ÄÅFinal„ÄÅConcurren ÂåÖÁ≠â„ÄÇ ÂÖ∂ÂÆûËøô‰∫õÂ∞±ÊòØ Java ÂÜÖÂ≠òÊ®°ÂûãÂ∞ÅË£Ö‰∫ÜÂ∫ïÂ±ÇÁöÑÂÆûÁé∞ÂêéÊèê‰æõÁªôÁ®ãÂ∫èÂëò‰ΩøÁî®ÁöÑ‰∏Ä‰∫õÂÖ≥ÈîÆÂ≠ó„ÄÇ Âú®ÂºÄÂèëÂ§öÁ∫øÁ®ãÁöÑ‰ª£Á†ÅÁöÑÊó∂ÂÄôÔºåÊàë‰ª¨ÂèØ‰ª•Áõ¥Êé•‰ΩøÁî® Synchronized Á≠âÂÖ≥ÈîÆÂ≠óÊù•ÊéßÂà∂Âπ∂ÂèëÔºåËøôÊ†∑Â∞±‰∏çÈúÄË¶ÅÂÖ≥ÂøÉÂ∫ïÂ±ÇÁöÑÁºñËØëÂô®‰ºòÂåñ„ÄÅÁºìÂ≠ò‰∏ÄËá¥ÊÄßÁ≠âÈóÆÈ¢ò„ÄÇ ÊâÄ‰ª•ÔºåJava ÂÜÖÂ≠òÊ®°ÂûãÔºåÈô§‰∫ÜÂÆö‰πâ‰∫Ü‰∏ÄÂ•óËßÑËåÉÔºåËøòÊèê‰æõ‰∫Ü‰∏ÄÁ≥ªÂàóÂéüËØ≠ÔºåÂ∞ÅË£Ö‰∫ÜÂ∫ïÂ±ÇÂÆûÁé∞ÂêéÔºå‰æõÂºÄÂèëËÄÖÁõ¥Êé•‰ΩøÁî®„ÄÇ Êàë‰ª¨ÂâçÈù¢ÊèêÂà∞ÔºåÂπ∂ÂèëÁºñÁ®ãË¶ÅËß£ÂÜ≥ÂéüÂ≠êÊÄß„ÄÅÊúâÂ∫èÊÄßÂíå‰∏ÄËá¥ÊÄßÁöÑÈóÆÈ¢ò„ÄÇ‰∏ãÈù¢Êàë‰ª¨Â∞±ÂÜçÊù•Áúã‰∏ãÔºåÂú® Java ‰∏≠ÔºåÂàÜÂà´‰ΩøÁî®‰ªÄ‰πàÊñπÂºèÊù•‰øùËØÅ„ÄÇ ÂéüÂ≠êÊÄßÂú® Java ‰∏≠Ôºå‰∏∫‰∫Ü‰øùËØÅÂéüÂ≠êÊÄßÔºåÊèê‰æõ‰∫Ü‰∏§‰∏™È´òÁ∫ßÁöÑÂ≠óËäÇÁ†ÅÊåá‰ª§ Monitorenter Âíå Monitorexit„ÄÇ Âú® Synchronized ÁöÑÂÆûÁé∞ÂéüÁêÜÊñáÁ´†‰∏≠Ôºå‰ªãÁªçËøáÔºåËøô‰∏§‰∏™Â≠óËäÇÁ†ÅÔºåÂú® Java ‰∏≠ÂØπÂ∫îÁöÑÂÖ≥ÈîÆÂ≠óÂ∞±ÊòØ Synchronized„ÄÇ Âõ†Ê≠§ÔºåÂú® Java ‰∏≠ÂèØ‰ª•‰ΩøÁî® Synchronized Êù•‰øùËØÅÊñπÊ≥ïÂíå‰ª£Á†ÅÂùóÂÜÖÁöÑÊìç‰ΩúÊòØÂéüÂ≠êÊÄßÁöÑ„ÄÇ ÂèØËßÅÊÄßJava ÂÜÖÂ≠òÊ®°ÂûãÊòØÈÄöËøáÂú®ÂèòÈáè‰øÆÊîπÂêéÂ∞ÜÊñ∞ÂÄºÂêåÊ≠•Âõû‰∏ªÂÜÖÂ≠òÔºåÂú®ÂèòÈáèËØªÂèñÂâç‰ªé‰∏ªÂÜÖÂ≠òÂà∑Êñ∞ÂèòÈáèÂÄºÁöÑËøôÁßç‰æùËµñ‰∏ªÂÜÖÂ≠ò‰Ωú‰∏∫‰º†ÈÄíÂ™í‰ªãÁöÑÊñπÂºèÊù•ÂÆûÁé∞ÁöÑ„ÄÇ Java ‰∏≠ÁöÑ Volatile ÂÖ≥ÈîÆÂ≠óÊèê‰æõ‰∫Ü‰∏Ä‰∏™ÂäüËÉΩÔºåÈÇ£Â∞±ÊòØË¢´ÂÖ∂‰øÆÈ•∞ÁöÑÂèòÈáèÂú®Ë¢´‰øÆÊîπÂêéÂèØ‰ª•Á´ãÂç≥ÂêåÊ≠•Âà∞‰∏ªÂÜÖÂ≠ò„ÄÇ Ë¢´ÂÖ∂‰øÆÈ•∞ÁöÑÂèòÈáèÂú®ÊØèÊ¨°‰ΩøÁî®‰πãÂâçÈÉΩ‰ªé‰∏ªÂÜÖÂ≠òÂà∑Êñ∞„ÄÇÂõ†Ê≠§ÔºåÂèØ‰ª•‰ΩøÁî® Volatile Êù•‰øùËØÅÂ§öÁ∫øÁ®ãÊìç‰ΩúÊó∂ÂèòÈáèÁöÑÂèØËßÅÊÄß„ÄÇ Èô§‰∫Ü VolatileÔºåJava ‰∏≠ÁöÑ Synchronized Âíå Final ‰∏§‰∏™ÂÖ≥ÈîÆÂ≠ó‰πüÂèØ‰ª•ÂÆûÁé∞ÂèØËßÅÊÄß„ÄÇÂè™‰∏çËøáÂÆûÁé∞ÊñπÂºè‰∏çÂêåÔºåËøôÈáå‰∏çÂÜçÂ±ïÂºÄ‰∫Ü„ÄÇ ÊúâÂ∫èÊÄßÂú® Java ‰∏≠ÔºåÂèØ‰ª•‰ΩøÁî® Synchronized Âíå Volatile Êù•‰øùËØÅÂ§öÁ∫øÁ®ã‰πãÈó¥Êìç‰ΩúÁöÑÊúâÂ∫èÊÄß„ÄÇ ÂÆûÁé∞ÊñπÂºèÊúâÊâÄÂå∫Âà´ÔºöVolatile ÂÖ≥ÈîÆÂ≠ó‰ºöÁ¶ÅÊ≠¢Êåá‰ª§ÈáçÊéí„ÄÇSynchronized ÂÖ≥ÈîÆÂ≠ó‰øùËØÅÂêå‰∏ÄÊó∂ÂàªÂè™ÂÖÅËÆ∏‰∏ÄÊù°Á∫øÁ®ãÊìç‰Ωú„ÄÇ Â•Ω‰∫ÜÔºåËøôÈáåÁÆÄÂçïÁöÑ‰ªãÁªçÂÆå‰∫Ü Java Âπ∂ÂèëÁºñÁ®ã‰∏≠Ëß£ÂÜ≥ÂéüÂ≠êÊÄß„ÄÅÂèØËßÅÊÄß‰ª•ÂèäÊúâÂ∫èÊÄßÂèØ‰ª•‰ΩøÁî®ÁöÑÂÖ≥ÈîÆÂ≠ó„ÄÇ ËØªËÄÖÂèØËÉΩÂèëÁé∞‰∫ÜÔºåÂ•ΩÂÉè Synchronized ÂÖ≥ÈîÆÂ≠óÊòØ‰∏áËÉΩÁöÑÔºåÂÆÉÂèØ‰ª•ÂêåÊó∂Êª°Ë∂≥‰ª•‰∏ä‰∏âÁßçÁâπÊÄßÔºåËøô‰πüÊòØÂæàÂ§ö‰∫∫Êª•Áî® Synchronized ÁöÑÂéüÂõ†„ÄÇ ‰ΩÜÊòØ Synchronized ÊòØÊØîËæÉÂΩ±ÂìçÊÄßËÉΩÁöÑÔºåËôΩÁÑ∂ÁºñËØëÂô®Êèê‰æõ‰∫ÜÂæàÂ§öÈîÅ‰ºòÂåñÊäÄÊúØÔºå‰ΩÜÊòØ‰πü‰∏çÂª∫ËÆÆËøáÂ∫¶‰ΩøÁî®„ÄÇ ÊÄªÁªìÂú®ËØªÂÆåÊú¨Êñá‰πãÂêéÔºåÁõ∏‰ø°‰Ω†Â∫îËØ•‰∫ÜËß£‰∫Ü‰ªÄ‰πàÊòØ Java ÂÜÖÂ≠òÊ®°Âûã„ÄÅJava ÂÜÖÂ≠òÊ®°ÂûãÁöÑ‰ΩúÁî®‰ª•Âèä Java ‰∏≠ÂÜÖÂ≠òÊ®°ÂûãÂÅö‰∫Ü‰ªÄ‰πà‰∫ãÊÉÖÁ≠â„ÄÇ]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Á∫øÁ®ã</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÊ≠ªÁ£ïJavaÂπ∂Âèë„Äë‚Äî‚ÄìJavaÂÜÖÂ≠òÊ®°Âûã‰πãÈáçÊéíÂ∫è]]></title>
    <url>%2F2018%2F08%2F13%2Fthread%2F%E6%AD%BB%E7%A3%95Java%E5%B9%B6%E5%8F%91%2FJava%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E4%B9%8B%E9%87%8D%E6%8E%92%E5%BA%8F%2F</url>
    <content type="text"><![CDATA[Âú®ÊâßË°åÁ®ãÂ∫èÊó∂Ôºå‰∏∫‰∫ÜÊèê‰æõÊÄßËÉΩÔºåÂ§ÑÁêÜÂô®ÂíåÁºñËØëÂô®Â∏∏Â∏∏‰ºöÂØπÊåá‰ª§ËøõË°åÈáçÊéíÂ∫èÔºå‰ΩÜÊòØ‰∏çËÉΩÈöèÊÑèÈáçÊéíÂ∫èÔºå‰∏çÊòØ‰Ω†ÊÉ≥ÊÄé‰πàÊéíÂ∫èÂ∞±ÊÄé‰πàÊéíÂ∫èÔºåÂÆÉÈúÄË¶ÅÊª°Ë∂≥‰ª•‰∏ã‰∏§‰∏™Êù°‰ª∂Ôºö Âú®ÂçïÁ∫øÁ®ãÁéØÂ¢É‰∏ã‰∏çËÉΩÊîπÂèòÁ®ãÂ∫èËøêË°åÁöÑÁªìÊûúÔºõ Â≠òÂú®Êï∞ÊçÆ‰æùËµñÂÖ≥Á≥ªÁöÑ‰∏çÂÖÅËÆ∏ÈáçÊéíÂ∫è Â¶ÇÊûúÁúãËøáLZ‰∏äÁØáÂçöÂÆ¢ÁöÑÂ∞±‰ºöÁü•ÈÅìÔºåÂÖ∂ÂÆûËøô‰∏§ÁÇπÂèØ‰ª•ÂΩíÁªì‰∫é‰∏ÄÁÇπÔºöÊó†Ê≥ïÈÄöËøáhappens-beforeÂéüÂàôÊé®ÂØºÂá∫Êù•ÁöÑÔºåJMMÂÖÅËÆ∏‰ªªÊÑèÁöÑÊéíÂ∫è„ÄÇ as-if-serialËØ≠‰πâas-if-serialËØ≠‰πâÁöÑÊÑèÊÄùÊòØÔºåÊâÄÊúâÁöÑÊìç‰ΩúÂùáÂèØ‰ª•‰∏∫‰∫Ü‰ºòÂåñËÄåË¢´ÈáçÊéíÂ∫èÔºå‰ΩÜÊòØ‰Ω†ÂøÖÈ°ªË¶Å‰øùËØÅÈáçÊéíÂ∫èÂêéÊâßË°åÁöÑÁªìÊûú‰∏çËÉΩË¢´ÊîπÂèòÔºåÁºñËØëÂô®„ÄÅruntime„ÄÅÂ§ÑÁêÜÂô®ÈÉΩÂøÖÈ°ªÈÅµÂÆàas-if-serialËØ≠‰πâ„ÄÇÊ≥®ÊÑèas-if-serialÂè™‰øùËØÅÂçïÁ∫øÁ®ãÁéØÂ¢ÉÔºåÂ§öÁ∫øÁ®ãÁéØÂ¢É‰∏ãÊó†Êïà„ÄÇ ‰∏ãÈù¢Êàë‰ª¨Áî®‰∏Ä‰∏™ÁÆÄÂçïÁöÑÁ§∫‰æãÊù•ËØ¥ÊòéÔºö 123int a = 1 ; //Aint b = 2 ; //Bint c = a + b; //C A„ÄÅB„ÄÅC‰∏â‰∏™Êìç‰ΩúÂ≠òÂú®Â¶Ç‰∏ãÂÖ≥Á≥ªÔºöA„ÄÅB‰∏çÂ≠òÂú®Êï∞ÊçÆ‰æùËµñÂÖ≥Á≥ªÔºåAÂíåC„ÄÅBÂíåCÂ≠òÂú®Êï∞ÊçÆ‰æùËµñÂÖ≥Á≥ªÔºåÂõ†Ê≠§Âú®ËøõË°åÈáçÊéíÂ∫èÁöÑÊó∂ÂÄôÔºåA„ÄÅBÂèØ‰ª•ÈöèÊÑèÊéíÂ∫èÔºå‰ΩÜÊòØÂøÖÈ°ª‰Ωç‰∫éCÁöÑÂâçÈù¢ÔºåÊâßË°åÈ°∫Â∫èÂèØ‰ª•ÊòØA ‚Äì&gt; B ‚Äì&gt; CÊàñËÄÖB ‚Äì&gt; A ‚Äì&gt; C„ÄÇ‰ΩÜÊòØÊó†ËÆ∫ÊòØ‰ΩïÁßçÊâßË°åÈ°∫Â∫èÊúÄÁªàÁöÑÁªìÊûúCÊÄªÊòØÁ≠â‰∫é3„ÄÇ as-if-serailËØ≠‰πâÊääÂçïÁ∫øÁ®ãÁ®ãÂ∫è‰øùÊä§Ëµ∑Êù•‰∫ÜÔºåÂÆÉÂèØ‰ª•‰øùËØÅÂú®ÈáçÊéíÂ∫èÁöÑÂâçÊèê‰∏ãÁ®ãÂ∫èÁöÑÊúÄÁªàÁªìÊûúÂßãÁªàÈÉΩÊòØ‰∏ÄËá¥ÁöÑ„ÄÇ ÂÖ∂ÂÆûÂØπ‰∫é‰∏äÊÆµ‰ª£Á†ÅÔºå‰ªñ‰ª¨Â≠òÂú®ËøôÊ†∑ÁöÑhappen-beforeÂÖ≥Á≥ªÔºö A happens-before B B happens-before C A happens-before C 1„ÄÅ2ÊòØÁ®ãÂ∫èÈ°∫Â∫èÊ¨°Â∫èËßÑÂàôÔºå3ÊòØ‰º†ÈÄíÊÄß„ÄÇ‰ΩÜÊòØÔºå‰∏çÊòØËØ¥ÈÄöËøáÈáçÊéíÂ∫èÔºåBÂèØËÉΩ‰ºöÊéíÂú®A‰πãÂâçÊâßË°å‰πàÔºå‰∏∫‰ΩïËøò‰ºöÂ≠òÂú®Â≠òÂú®A happens-beforeBÂë¢ÔºüËøôÈáåÂÜçÊ¨°Áî≥ÊòéA happens-before B‰∏çÊòØA‰∏ÄÂÆö‰ºöÂú®B‰πãÂâçÊâßË°åÔºåËÄåÊòØAÁöÑÂØπBÂèØËßÅÔºå‰ΩÜÊòØÁõ∏ÂØπ‰∫éËøô‰∏™Á®ãÂ∫èAÁöÑÊâßË°åÁªìÊûú‰∏çÈúÄË¶ÅÂØπBÂèØËßÅÔºå‰∏î‰ªñ‰ª¨ÈáçÊéíÂ∫èÂêé‰∏ç‰ºöÂΩ±ÂìçÁªìÊûúÔºåÊâÄ‰ª•JMM‰∏ç‰ºöËÆ§‰∏∫ËøôÁßçÈáçÊéíÂ∫èÈùûÊ≥ï„ÄÇ Êàë‰ª¨ÈúÄË¶ÅÊòéÁôΩËøôÁÇπÔºöÂú®‰∏çÊîπÂèòÁ®ãÂ∫èÊâßË°åÁªìÊûúÁöÑÂâçÊèê‰∏ãÔºåÂ∞ΩÂèØËÉΩÊèêÈ´òÁ®ãÂ∫èÁöÑËøêË°åÊïàÁéá„ÄÇ ‰∏ãÈù¢Êàë‰ª¨Âú®Áúã‰∏ÄÊÆµÊúâÊÑèÊÄùÁöÑ‰ª£Á†ÅÔºö 123456789101112131415public class RecordExample1 &#123; public static void main(String[] args)&#123; int a = 1; int b = 2; try &#123; a = 3; //A b = 1 / 0; //B &#125; catch (Exception e) &#123; // TODO &#125; finally &#123; System.out.println("a = " + a); &#125; &#125;&#125; ÊåâÁÖßÈáçÊéíÂ∫èÁöÑËßÑÂàôÔºåÊìç‰ΩúA‰∏éÊìç‰ΩúBÊúâÂèØËÉΩ‰ºöËøõË°åÈáçÊéíÂ∫èÔºåÂ¶ÇÊûúÈáçÊéíÂ∫è‰∫ÜÔºåB‰ºöÊäõÂá∫ÂºÇÂ∏∏Ôºà / by zeroÔºâÔºåÊ≠§Êó∂AËØ≠Âè•‰∏ÄÂÆö‰ºöÊâßË°å‰∏çÂà∞ÔºåÈÇ£‰πàaËøò‰ºöÁ≠â‰∫é3‰πàÔºüÂ¶ÇÊûúÊåâÁÖßas-if-serialÂéüÂàôÂÆÉÂ∞±ÊîπÂèò‰∫ÜÁ®ãÂ∫èÁöÑÁªìÊûú„ÄÇÂÖ∂ÂÆûJVMÂØπÂºÇÂ∏∏ÂÅö‰∫Ü‰∏ÄÁßçÁâπÊÆäÁöÑÂ§ÑÁêÜÔºå‰∏∫‰∫Ü‰øùËØÅas-if-serialËØ≠‰πâÔºåJavaÂºÇÂ∏∏Â§ÑÁêÜÊú∫Âà∂ÂØπÈáçÊéíÂ∫èÂÅö‰∫Ü‰∏ÄÁßçÁâπÊÆäÁöÑÂ§ÑÁêÜÔºöJITÂú®ÈáçÊéíÂ∫èÊó∂‰ºöÂú®catchËØ≠Âè•‰∏≠ÊèíÂÖ•ÈîôËØØ‰ª£ÂÅø‰ª£Á†ÅÔºàa = 3Ôºâ,ËøôÊ†∑ÂÅöËôΩÁÑ∂‰ºöÂØºËá¥cathcÈáåÈù¢ÁöÑÈÄªËæëÂèòÂæóÂ§çÊùÇÔºå‰ΩÜÊòØJIT‰ºòÂåñÂéüÂàôÊòØÔºöÂ∞ΩÂèØËÉΩÂú∞‰ºòÂåñÁ®ãÂ∫èÊ≠£Â∏∏ËøêË°å‰∏ãÁöÑÈÄªËæëÔºåÂì™ÊÄï‰ª•catchÂùóÈÄªËæëÂèòÂæóÂ§çÊùÇ‰∏∫‰ª£‰ª∑„ÄÇ ÈáçÊéíÂ∫èÂØπÂ§öÁ∫øÁ®ãÁöÑÂΩ±ÂìçÂú®ÂçïÁ∫øÁ®ãÁéØÂ¢É‰∏ãÁî±‰∫éas-if-serialËØ≠‰πâÔºåÈáçÊéíÂ∫èÊó†Ê≥ïÂΩ±ÂìçÊúÄÁªàÁöÑÁªìÊûúÔºå‰ΩÜÊòØÂØπ‰∫éÂ§öÁ∫øÁ®ãÁéØÂ¢ÉÂë¢Ôºü Â¶Ç‰∏ã‰ª£Á†ÅÔºàvolatileÁöÑÁªèÂÖ∏Áî®Ê≥ïÔºâÔºö 123456789101112131415161718192021public class RecordExample2 &#123; int a = 0; boolean flag = false; /** * AÁ∫øÁ®ãÊâßË°å */ public void writer()&#123; a = 1; // 1 flag = true; // 2 &#125; /** * BÁ∫øÁ®ãÊâßË°å */ public void read()&#123; if(flag)&#123; // 3 int i = a + a; // 4 &#125; &#125;&#125; AÁ∫øÁ®ãÊâßË°åwriter()ÔºåÁ∫øÁ®ãBÊâßË°åread()ÔºåÁ∫øÁ®ãBÂú®ÊâßË°åÊó∂ËÉΩÂê¶ËØªÂà∞ a = 1 Âë¢ÔºüÁ≠îÊ°àÊòØ‰∏ç‰∏ÄÂÆöÔºàÊ≥®ÔºöX86CPU‰∏çÊîØÊåÅÂÜôÂÜôÈáçÊéíÂ∫èÔºåÂ¶ÇÊûúÊòØÂú®x86‰∏äÈù¢Êìç‰ΩúÔºåËøô‰∏™‰∏ÄÂÆö‰ºöÊòØa=1,LZÊêû‰∫ÜÂ•Ω‰πÖÈÉΩÊ≤°ÊúâÊµãËØïÂá∫Êù•ÔºåÊúÄÂêéÊü•ËµÑÊñôÊâçÂèëÁé∞Ôºâ„ÄÇ Áî±‰∫éÊìç‰Ωú1 ÂíåÊìç‰Ωú2 ‰πãÈó¥Ê≤°ÊúâÊï∞ÊçÆ‰æùËµñÊÄßÔºåÊâÄ‰ª•ÂèØ‰ª•ËøõË°åÈáçÊéíÂ∫èÂ§ÑÁêÜÔºåÊìç‰Ωú3 ÂíåÊìç‰Ωú4 ‰πãÈó¥‰πüÊ≤°ÊúâÊï∞ÊçÆ‰æùËµñÊÄßÔºå‰ªñ‰ª¨‰∫¶ÂèØ‰ª•ËøõË°åÈáçÊéíÂ∫èÔºå‰ΩÜÊòØÊìç‰Ωú3 ÂíåÊìç‰Ωú4 ‰πãÈó¥Â≠òÂú®ÊéßÂà∂‰æùËµñÊÄß„ÄÇÂÅáÂ¶ÇÊìç‰Ωú1 ÂíåÊìç‰Ωú2 ‰πãÈó¥ÈáçÊéíÂ∫èÔºö ÊåâÁÖßËøôÁßçÊâßË°åÈ°∫Â∫èÁ∫øÁ®ãBËÇØÂÆöËØª‰∏çÂà∞Á∫øÁ®ãAËÆæÁΩÆÁöÑaÂÄºÔºåÂú®ËøôÈáåÂ§öÁ∫øÁ®ãÁöÑËØ≠‰πâÂ∞±Â∑≤ÁªèË¢´ÈáçÊéíÂ∫èÁ†¥Âùè‰∫Ü„ÄÇ Êìç‰Ωú3 ÂíåÊìç‰Ωú4 ‰πãÈó¥‰πüÂèØ‰ª•ÈáçÊéíÂ∫èÔºåËøôÈáåÂ∞±‰∏çÈòêËø∞‰∫Ü„ÄÇ‰ΩÜÊòØ‰ªñ‰ª¨‰πãÈó¥Â≠òÂú®‰∏Ä‰∏™ÊéßÂà∂‰æùËµñÁöÑÂÖ≥Á≥ªÔºåÂõ†‰∏∫Âè™ÊúâÊìç‰Ωú3 ÊàêÁ´ãÊìç‰Ωú4 Êâç‰ºöÊâßË°å„ÄÇÂΩì‰ª£Á†Å‰∏≠Â≠òÂú®ÊéßÂà∂‰æùËµñÊÄßÊó∂Ôºå‰ºöÂΩ±ÂìçÊåá‰ª§Â∫èÂàóÁöÑÊâßË°åÁöÑÂπ∂Ë°åÂ∫¶ÔºåÊâÄ‰ª•ÁºñËØëÂô®ÂíåÂ§ÑÁêÜÂô®‰ºöÈááÁî®ÁåúÊµãÊâßË°åÊù•ÂÖãÊúçÊéßÂà∂‰æùËµñÂØπÂπ∂Ë°åÂ∫¶ÁöÑÂΩ±Âìç„ÄÇÂÅáÂ¶ÇÊìç‰Ωú3 ÂíåÊìç‰Ωú4ÈáçÊéíÂ∫è‰∫ÜÔºåÊìç‰Ωú4 ÂÖàÊâßË°åÔºåÂàôÂÖà‰ºöÊääËÆ°ÁÆóÁªìÊûú‰∏¥Êó∂‰øùÂ≠òÂà∞ÈáçÊéíÂ∫èÁºìÂÜ≤‰∏≠ÔºåÂΩìÊìç‰Ωú3 ‰∏∫ÁúüÊó∂Êâç‰ºöÂ∞ÜËÆ°ÁÆóÁªìÊûúÂÜôÂÖ•ÂèòÈáèi‰∏≠ ÈÄöËøá‰∏äÈù¢ÁöÑÂàÜÊûêÔºåÈáçÊéíÂ∫è‰∏ç‰ºöÂΩ±ÂìçÂçïÁ∫øÁ®ãÁéØÂ¢ÉÁöÑÊâßË°åÁªìÊûúÔºå‰ΩÜÊòØ‰ºöÁ†¥ÂùèÂ§öÁ∫øÁ®ãÁöÑÊâßË°åËØ≠‰πâ„ÄÇ ÂèÇËÄÉËµÑÊñô Âë®ÂøóÊòé Ôºö„ÄäÊ∑±ÂÖ•ÁêÜËß£JavaËôöÊãüÊú∫„Äã ÊñπËÖæÈ£ûÔºö„ÄäJavaÂπ∂ÂèëÁºñÁ®ãÁöÑËâ∫ÊúØ„Äã ÂéüÊñáÂèëÂ∏É‰∫éÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ - chenssyÔºàchenssy89Ôºâ ÂéüÊñáÂèëË°®Êó∂Èó¥Ôºö2017-02-20 Êú¨ÊñáÂèÇ‰∏éËÖæËÆØ‰∫ëËá™Â™í‰ΩìÂàÜ‰∫´ËÆ°ÂàíÔºåÊ¨¢ËøéÊ≠£Âú®ÈòÖËØªÁöÑ‰Ω†‰πüÂä†ÂÖ•Ôºå‰∏ÄËµ∑ÂàÜ‰∫´„ÄÇ ÂèëË°®‰∫é 2018-04-26]]></content>
      <tags>
        <tag>Á∫øÁ®ã</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÊ≠ªÁ£ïJavaÂπ∂Âèë„Äë-----JavaÂÜÖÂ≠òÊ®°Âûã‰πãÂàÜÊûêvolatile]]></title>
    <url>%2F2018%2F08%2F13%2Fthread%2F%E6%AD%BB%E7%A3%95Java%E5%B9%B6%E5%8F%91%2FJava%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E4%B9%8B%E5%88%86%E6%9E%90volatile%2F</url>
    <content type="text"><![CDATA[ÂéüÊñáÂá∫Â§Ñhttp://cmsblogs.com/ „Äéchenssy„Äè ÂâçÁØáÂçöÂÆ¢„ÄêÊ≠ªÁ£ïJavaÂπ∂Âèë„Äë‚Äî‚ÄìÊ∑±ÂÖ•ÂàÜÊûêvolatileÁöÑÂÆûÁé∞ÂéüÁêÜ ‰∏≠Â∑≤ÁªèÈòêËø∞‰∫ÜvolatileÁöÑÁâπÊÄß‰∫ÜÔºö volatileÂèØËßÅÊÄßÔºõÂØπ‰∏Ä‰∏™volatileÁöÑËØªÔºåÊÄªÂèØ‰ª•ÁúãÂà∞ÂØπËøô‰∏™ÂèòÈáèÊúÄÁªàÁöÑÂÜôÔºõ volatileÂéüÂ≠êÊÄßÔºõvolatileÂØπÂçï‰∏™ËØª/ÂÜôÂÖ∑ÊúâÂéüÂ≠êÊÄßÔºà32‰ΩçLong„ÄÅDoubleÔºâÔºå‰ΩÜÊòØÂ§çÂêàÊìç‰ΩúÈô§Â§ñÔºå‰æãÂ¶Çi++; JVMÂ∫ïÂ±ÇÈááÁî®‚ÄúÂÜÖÂ≠òÂ±èÈöú‚ÄùÊù•ÂÆûÁé∞volatileËØ≠‰πâ ‰∏ãÈù¢LZÂ∞±ÈÄöËøáhappens-beforeÂéüÂàôÂíåvolatileÁöÑÂÜÖÂ≠òËØ≠‰πâ‰∏§‰∏™ÊñπÂêë‰ªãÁªçvolatile„ÄÇ volatile‰∏éhappens-beforeÂú®ËøôÁØáÂçöÂÆ¢„ÄêÊ≠ªÁ£ïJavaÂπ∂Âèë„Äë‚Äî‚ÄìJavaÂÜÖÂ≠òÊ®°Âûã‰πãhappend-before‰∏≠LZÈòêËø∞‰∫Ühappens-beforeÊòØÁî®Êù•Âà§Êñ≠ÊòØÂê¶Â≠òÊï∞ÊçÆÁ´û‰∫â„ÄÅÁ∫øÁ®ãÊòØÂê¶ÂÆâÂÖ®ÁöÑ‰∏ªË¶Å‰æùÊçÆÔºåÂÆÉ‰øùËØÅ‰∫ÜÂ§öÁ∫øÁ®ãÁéØÂ¢É‰∏ãÁöÑÂèØËßÅÊÄß„ÄÇ‰∏ãÈù¢Êàë‰ª¨Â∞±ÈÇ£‰∏™ÁªèÂÖ∏ÁöÑ‰æãÂ≠êÊù•ÂàÜÊûêvolatileÂèòÈáèÁöÑËØªÂÜôÂª∫Á´ãÁöÑhappens-beforeÂÖ≥Á≥ª„ÄÇ 12345678910111213141516171819public class VolatileTest &#123; int i = 0; volatile boolean flag = false; //Thread A public void write()&#123; i = 2; //1 flag = true; //2 &#125; //Thread B public void read()&#123; if(flag)&#123; //3 System.out.println("---i = " + i); //4 &#125; &#125; &#125; ‰æùÊçÆhappens-beforeÂéüÂàôÔºåÂ∞±‰∏äÈù¢Á®ãÂ∫èÂæóÂà∞Â¶Ç‰∏ãÂÖ≥Á≥ªÔºö ‰æùÊçÆhappens-beforeÁ®ãÂ∫èÈ°∫Â∫èÂéüÂàôÔºö1 happens-before 2„ÄÅ3 happens-before 4Ôºõ Ê†πÊçÆhappens-beforeÁöÑvolatileÂéüÂàôÔºö2 happens-before 3Ôºõ Ê†πÊçÆhappens-beforeÁöÑ‰º†ÈÄíÊÄßÔºö1 happens-before 4 Êìç‰Ωú1„ÄÅÊìç‰Ωú4Â≠òÂú®happens-beforeÂÖ≥Á≥ªÔºåÈÇ£‰πà1‰∏ÄÂÆöÊòØÂØπ4ÂèØËßÅÁöÑ„ÄÇÂèØËÉΩÊúâÂêåÂ≠¶Â∞±‰ºöÈóÆÔºåÊìç‰Ωú1„ÄÅÊìç‰Ωú2ÂèØËÉΩ‰ºöÂèëÁîüÈáçÊéíÂ∫èÂïäÔºå‰ºöÂêóÔºüÂ¶ÇÊûúÁúãËøáLZÁöÑÂçöÂÆ¢Â∞±‰ºöÊòéÁôΩÔºå==volatileÈô§‰∫Ü‰øùËØÅÂèØËßÅÊÄßÂ§ñÔºåËøòÊúâÂ∞±ÊòØÁ¶ÅÊ≠¢ÈáçÊéíÂ∫è==„ÄÇÊâÄ‰ª•AÁ∫øÁ®ãÂú®ÂÜôvolatileÂèòÈáè‰πãÂâçÊâÄÊúâÂèØËßÅÁöÑÂÖ±‰∫´ÂèòÈáèÔºåÂú®Á∫øÁ®ãBËØªÂêå‰∏Ä‰∏™volatileÂèòÈáèÂêéÔºåÂ∞ÜÁ´ãÂç≥ÂèòÂæóÂØπÁ∫øÁ®ãBÂèØËßÅ„ÄÇ volataileÁöÑÂÜÖÂ≠òËØ≠‰πâÂèäÂÖ∂ÂÆûÁé∞Âú®JMM‰∏≠ÔºåÁ∫øÁ®ã‰πãÈó¥ÁöÑÈÄö‰ø°ÈááÁî®ÂÖ±‰∫´ÂÜÖÂ≠òÊù•ÂÆûÁé∞ÁöÑ„ÄÇvolatileÁöÑÂÜÖÂ≠òËØ≠‰πâÊòØÔºö ÂΩìÂÜô‰∏Ä‰∏™volatileÂèòÈáèÊó∂ÔºåJMM‰ºöÊääËØ•Á∫øÁ®ãÂØπÂ∫îÁöÑÊú¨Âú∞ÂÜÖÂ≠ò‰∏≠ÁöÑÂÖ±‰∫´ÂèòÈáèÂÄºÁ´ãÂç≥Âà∑Êñ∞Âà∞‰∏ªÂÜÖÂ≠ò‰∏≠„ÄÇ ÂΩìËØª‰∏Ä‰∏™volatileÂèòÈáèÊó∂ÔºåJMM‰ºöÊääËØ•Á∫øÁ®ãÂØπÂ∫îÁöÑÊú¨Âú∞ÂÜÖÂ≠òËÆæÁΩÆ‰∏∫Êó†ÊïàÔºåÁõ¥Êé•‰ªé‰∏ªÂÜÖÂ≠ò‰∏≠ËØªÂèñÂÖ±‰∫´ÂèòÈáè ÊâÄ‰ª•==volatileÁöÑÂÜôÂÜÖÂ≠òËØ≠‰πâÊòØÁõ¥Êé•Âà∑Êñ∞Âà∞‰∏ªÂÜÖÂ≠ò‰∏≠ÔºåËØªÁöÑÂÜÖÂ≠òËØ≠‰πâÊòØÁõ¥Êé•‰ªé‰∏ªÂÜÖÂ≠ò‰∏≠ËØªÂèñ==„ÄÇ ÈÇ£‰πàvolatileÁöÑÂÜÖÂ≠òËØ≠‰πâÊòØÂ¶Ç‰ΩïÂÆûÁé∞ÁöÑÂë¢ÔºüÂØπ‰∫é‰∏ÄËà¨ÁöÑÂèòÈáèÂàô‰ºöË¢´ÈáçÊéíÂ∫èÔºåËÄåÂØπ‰∫évolatileÂàô‰∏çËÉΩÔºåËøôÊ†∑‰ºöÂΩ±ÂìçÂÖ∂ÂÜÖÂ≠òËØ≠‰πâÔºåÊâÄ‰ª•‰∏∫‰∫ÜÂÆûÁé∞volatileÁöÑÂÜÖÂ≠òËØ≠‰πâJMM‰ºöÈôêÂà∂ÈáçÊéíÂ∫è„ÄÇÂÖ∂ÈáçÊéíÂ∫èËßÑÂàôÂ¶Ç‰∏ãÔºö ÁøªËØëÂ¶Ç‰∏ãÔºö Â¶ÇÊûúÁ¨¨‰∏Ä‰∏™Êìç‰Ωú‰∏∫volatileËØªÔºåÂàô‰∏çÁÆ°Á¨¨‰∫å‰∏™Êìç‰ΩúÊòØÂï•ÔºåÈÉΩ‰∏çËÉΩÈáçÊéíÂ∫è„ÄÇËøô‰∏™Êìç‰ΩúÁ°Æ‰øùvolatileËØª‰πãÂêéÁöÑÊìç‰Ωú‰∏ç‰ºöË¢´ÁºñËØëÂô®ÈáçÊéíÂ∫èÂà∞volatileËØª‰πãÂâçÔºõ ÂΩìÁ¨¨‰∫å‰∏™Êìç‰Ωú‰∏∫volatileÂÜôÊòØÔºåÂàô‰∏çÁÆ°Á¨¨‰∏Ä‰∏™Êìç‰ΩúÊòØÂï•ÔºåÈÉΩ‰∏çËÉΩÈáçÊéíÂ∫è„ÄÇËøô‰∏™Êìç‰ΩúÁ°Æ‰øùvolatileÂÜô‰πãÂâçÁöÑÊìç‰Ωú‰∏ç‰ºöË¢´ÁºñËØëÂô®ÈáçÊéíÂ∫èÂà∞volatileÂÜô‰πãÂêéÔºõ ÂΩìÁ¨¨‰∏Ä‰∏™Êìç‰ΩúvolatileÂÜôÔºåÁ¨¨‰∫åÊìç‰Ωú‰∏∫volatileËØªÊó∂Ôºå‰∏çËÉΩÈáçÊéíÂ∫è„ÄÇ volatileÁöÑÂ∫ïÂ±ÇÂÆûÁé∞ÊòØÈÄöËøáÊèíÂÖ•ÂÜÖÂ≠òÂ±èÈöúÔºå‰ΩÜÊòØÂØπ‰∫éÁºñËØëÂô®Êù•ËØ¥ÔºåÂèëÁé∞‰∏Ä‰∏™ÊúÄ‰ºòÂ∏ÉÁΩÆÊù•ÊúÄÂ∞èÂåñÊèíÂÖ•ÂÜÖÂ≠òÂ±èÈöúÁöÑÊÄªÊï∞Âá†‰πéÊòØ‰∏çÂèØËÉΩÁöÑÔºåÊâÄ‰ª•ÔºåJMMÈááÁî®‰∫Ü‰øùÂÆàÁ≠ñÁï•„ÄÇÂ¶Ç‰∏ãÔºö Âú®ÊØè‰∏Ä‰∏™volatileÂÜôÊìç‰ΩúÂâçÈù¢ÊèíÂÖ•‰∏Ä‰∏™StoreStoreÂ±èÈöú Âú®ÊØè‰∏Ä‰∏™volatileÂÜôÊìç‰ΩúÂêéÈù¢ÊèíÂÖ•‰∏Ä‰∏™StoreLoadÂ±èÈöú Âú®ÊØè‰∏Ä‰∏™volatileËØªÊìç‰ΩúÂâçÈù¢ÊèíÂÖ•‰∏Ä‰∏™LoadLoadÂ±èÈöú Âú®ÊØè‰∏Ä‰∏™volatileËØªÊìç‰ΩúÂêéÈù¢ÊèíÂÖ•‰∏Ä‰∏™LoadStoreÂ±èÈöú StoreStoreÂ±èÈöúÂèØ‰ª•‰øùËØÅÂú®volatileÂÜô‰πãÂâçÔºåÂÖ∂ÂâçÈù¢ÁöÑÊâÄÊúâÊôÆÈÄöÂÜôÊìç‰ΩúÈÉΩÂ∑≤ÁªèÂà∑Êñ∞Âà∞‰∏ªÂÜÖÂ≠ò‰∏≠„ÄÇ StoreLoadÂ±èÈöúÁöÑ‰ΩúÁî®ÊòØÈÅøÂÖçvolatileÂÜô‰∏éÂêéÈù¢ÂèØËÉΩÊúâÁöÑvolatileËØª/ÂÜôÊìç‰ΩúÈáçÊéíÂ∫è„ÄÇ LoadLoadÂ±èÈöúÁî®Êù•Á¶ÅÊ≠¢Â§ÑÁêÜÂô®Êää‰∏äÈù¢ÁöÑvolatileËØª‰∏é‰∏ãÈù¢ÁöÑÊôÆÈÄöËØªÈáçÊéíÂ∫è„ÄÇ LoadStoreÂ±èÈöúÁî®Êù•Á¶ÅÊ≠¢Â§ÑÁêÜÂô®Êää‰∏äÈù¢ÁöÑvolatileËØª‰∏é‰∏ãÈù¢ÁöÑÊôÆÈÄöÂÜôÈáçÊéíÂ∫è„ÄÇ ‰∏ãÈù¢Êàë‰ª¨Â∞±‰∏äÈù¢ÈÇ£‰∏™VolatileTest‰æãÂ≠êÂàÜÊûê‰∏ãÔºö 1234567891011121314151617public class VolatileTest &#123; int i = 0; volatile boolean flag = false; public void write()&#123; i = 2; flag = true; &#125; public void read()&#123; if(flag)&#123; System.out.println("---i = " + i); &#125; &#125; &#125; ‰∏äÈù¢ÈÄöËøá‰∏Ä‰∏™‰æãÂ≠êÁ®çÂæÆÊºîÁ§∫‰∫ÜvolatileÊåá‰ª§ÁöÑÂÜÖÂ≠òÂ±èÈöúÂõæ‰æã„ÄÇ volatileÁöÑÂÜÖÂ≠òÂ±èÈöúÊèíÂÖ•Á≠ñÁï•ÈùûÂ∏∏‰øùÂÆàÔºåÂÖ∂ÂÆûÂú®ÂÆûÈôÖ‰∏≠ÔºåÂè™Ë¶Å‰∏çÊîπÂèòvolatileÂÜô-ËØªÂæóÂÜÖÂ≠òËØ≠‰πâÔºåÁºñËØëÂô®ÂèØ‰ª•Ê†πÊçÆÂÖ∑‰ΩìÊÉÖÂÜµ‰ºòÂåñÔºåÁúÅÁï•‰∏çÂøÖË¶ÅÁöÑÂ±èÈöú„ÄÇÂ¶Ç‰∏ãÔºàÊëòËá™ÊñπËÖæÈ£û „ÄäJavaÂπ∂ÂèëÁºñÁ®ãÁöÑËâ∫ÊúØ„ÄãÔºâÔºö 123456789101112131415public class VolatileBarrierExample &#123; int a = 0; volatile int v1 = 1; volatile int v2 = 2; void readAndWrite()&#123; int i = v1; //volatileËØª int j = v2; //volatileËØª a = i + j; //ÊôÆÈÄöËØª v1 = i + 1; //volatileÂÜô v2 = j * 2; //volatileÂÜô &#125; &#125; Ê≤°Êúâ‰ºòÂåñÁöÑÁ§∫‰æãÂõæÂ¶Ç‰∏ãÔºö Êàë‰ª¨Êù•ÂàÜÊûê‰∏äÂõæÊúâÂì™‰∫õÂÜÖÂ≠òÂ±èÈöúÊåá‰ª§ÊòØÂ§ö‰ΩôÁöÑ 1ÔºöËøô‰∏™ËÇØÂÆöË¶Å‰øùÁïô‰∫Ü 2ÔºöÁ¶ÅÊ≠¢‰∏ãÈù¢ÊâÄÊúâÁöÑÊôÆÈÄöÂÜô‰∏é‰∏äÈù¢ÁöÑvolatileËØªÈáçÊéíÂ∫èÔºå‰ΩÜÊòØÁî±‰∫éÂ≠òÂú®Á¨¨‰∫å‰∏™volatileËØªÔºåÈÇ£‰∏™ÊôÆÈÄöÁöÑËØªÊ†πÊú¨Êó†Ê≥ïË∂äËøáÁ¨¨‰∫å‰∏™volatileËØª„ÄÇÊâÄ‰ª•ÂèØ‰ª•ÁúÅÁï•„ÄÇ 3Ôºö‰∏ãÈù¢Â∑≤Áªè‰∏çÂ≠òÂú®ÊôÆÈÄöËØª‰∫ÜÔºåÂèØ‰ª•ÁúÅÁï•„ÄÇ 4Ôºö‰øùÁïô 5Ôºö‰øùÁïô 6Ôºö‰∏ãÈù¢Ë∑üÁùÄ‰∏Ä‰∏™volatileÂÜôÔºåÊâÄ‰ª•ÂèØ‰ª•ÁúÅÁï• 7Ôºö‰øùÁïô 8Ôºö‰øùÁïô ÊâÄ‰ª•2„ÄÅ3„ÄÅ6ÂèØ‰ª•ÁúÅÁï•ÔºåÂÖ∂Á§∫ÊÑèÂõæÂ¶Ç‰∏ãÔºö ÂèÇËÄÉËµÑÊñô ÊñπËÖæÈ£ûÔºö„ÄäJavaÂπ∂ÂèëÁºñÁ®ãÁöÑËâ∫ÊúØ„Äã END ÂéüÊñáÂèëÂ∏É‰∫éÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ - JavaÊäÄÊúØÈ©øÁ´ôÔºàchenssy89Ôºâ ÂéüÊñáÂèëË°®Êó∂Èó¥Ôºö2018-05-05 Êú¨ÊñáÂèÇ‰∏éËÖæËÆØ‰∫ëËá™Â™í‰ΩìÂàÜ‰∫´ËÆ°ÂàíÔºåÊ¨¢ËøéÊ≠£Âú®ÈòÖËØªÁöÑ‰Ω†‰πüÂä†ÂÖ•Ôºå‰∏ÄËµ∑ÂàÜ‰∫´„ÄÇ]]></content>
      <tags>
        <tag>Á∫øÁ®ã</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÊ≠ªÁ£ïJavaÂπ∂Âèë„Äë‚Äî‚ÄìJavaÂÜÖÂ≠òÊ®°Âûã‰πãhappens-before]]></title>
    <url>%2F2018%2F08%2F13%2Fthread%2F%E6%AD%BB%E7%A3%95Java%E5%B9%B6%E5%8F%91%2FJava%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E4%B9%8Bhappens-before%2F</url>
    <content type="text"><![CDATA[Âú®‰∏äÁØáÂçöÂÆ¢Ôºà„ÄêÊ≠ªÁ£ïJavaÂπ∂Âèë„Äë‚Äî‚ÄìÊ∑±ÂÖ•ÂàÜÊûêvolatileÁöÑÂÆûÁé∞ÂéüÁêÜÔºâLZÊèêÂà∞ËøáÁî±‰∫éÂ≠òÂú®Á∫øÁ®ãÊú¨Âú∞ÂÜÖÂ≠òÂíå‰∏ªÂÜÖÂ≠òÁöÑÂéüÂõ†ÔºåÂÜçÂä†‰∏äÈáçÊéíÂ∫èÔºå‰ºöÂØºËá¥Â§öÁ∫øÁ®ãÁéØÂ¢É‰∏ãÂ≠òÂú®ÂèØËßÅÊÄßÁöÑÈóÆÈ¢ò„ÄÇÈÇ£‰πàÊàë‰ª¨Ê≠£Á°Æ‰ΩøÁî®ÂêåÊ≠•„ÄÅÈîÅÁöÑÊÉÖÂÜµ‰∏ãÔºåÁ∫øÁ®ãA‰øÆÊîπ‰∫ÜÂèòÈáèa‰ΩïÊó∂ÂØπÁ∫øÁ®ãBÂèØËßÅÔºü Êàë‰ª¨Êó†Ê≥ïÂ∞±ÊâÄÊúâÂú∫ÊôØÊù•ËßÑÂÆöÊüê‰∏™Á∫øÁ®ã‰øÆÊîπÁöÑÂèòÈáè‰ΩïÊó∂ÂØπÂÖ∂‰ªñÁ∫øÁ®ãÂèØËßÅÔºå‰ΩÜÊòØÊàë‰ª¨ÂèØ‰ª•ÊåáÂÆöÊüê‰∫õËßÑÂàôÔºåËøôËßÑÂàôÂ∞±ÊòØhappens-beforeÔºå‰ªéJDK 5 ÂºÄÂßãÔºåJMMÂ∞±‰ΩøÁî®happens-beforeÁöÑÊ¶ÇÂøµÊù•ÈòêËø∞Â§öÁ∫øÁ®ã‰πãÈó¥ÁöÑÂÜÖÂ≠òÂèØËßÅÊÄß„ÄÇ Âú®JMM‰∏≠ÔºåÂ¶ÇÊûú‰∏Ä‰∏™Êìç‰ΩúÊâßË°åÁöÑÁªìÊûúÈúÄË¶ÅÂØπÂè¶‰∏Ä‰∏™Êìç‰ΩúÂèØËßÅÔºåÈÇ£‰πàËøô‰∏§‰∏™Êìç‰Ωú‰πãÈó¥ÂøÖÈ°ªÂ≠òÂú®happens-beforeÂÖ≥Á≥ª„ÄÇ happens-beforeÂéüÂàôÈùûÂ∏∏ÈáçË¶ÅÔºåÂÆÉÊòØÂà§Êñ≠Êï∞ÊçÆÊòØÂê¶Â≠òÂú®Á´û‰∫â„ÄÅÁ∫øÁ®ãÊòØÂê¶ÂÆâÂÖ®ÁöÑ‰∏ªË¶Å‰æùÊçÆÔºå‰æùÈù†Ëøô‰∏™ÂéüÂàôÔºåÊàë‰ª¨Ëß£ÂÜ≥Âú®Âπ∂ÂèëÁéØÂ¢É‰∏ã‰∏§Êìç‰Ωú‰πãÈó¥ÊòØÂê¶ÂèØËÉΩÂ≠òÂú®ÂÜ≤Á™ÅÁöÑÊâÄÊúâÈóÆÈ¢ò„ÄÇ‰∏ãÈù¢Êàë‰ª¨Â∞±‰∏Ä‰∏™ÁÆÄÂçïÁöÑ‰æãÂ≠êÁ®çÂæÆ‰∫ÜËß£‰∏ãhappens-before Ôºõ 12i = 1; //Á∫øÁ®ãAÊâßË°åj = i ; //Á∫øÁ®ãBÊâßË°å j ÊòØÂê¶Á≠â‰∫é1Âë¢ÔºüÂÅáÂÆöÁ∫øÁ®ãAÁöÑÊìç‰ΩúÔºài = 1Ôºâhappens-beforeÁ∫øÁ®ãBÁöÑÊìç‰ΩúÔºàj = iÔºâ,ÈÇ£‰πàÂèØ‰ª•Á°ÆÂÆöÁ∫øÁ®ãBÊâßË°åÂêéj = 1 ‰∏ÄÂÆöÊàêÁ´ãÔºåÂ¶ÇÊûú‰ªñ‰ª¨‰∏çÂ≠òÂú®happens-beforeÂéüÂàôÔºåÈÇ£‰πàj = 1 ‰∏ç‰∏ÄÂÆöÊàêÁ´ã„ÄÇËøôÂ∞±ÊòØhappens-beforeÂéüÂàôÁöÑÂ®ÅÂäõ„ÄÇ happens-beforeÂéüÂàôÂÆö‰πâÂ¶Ç‰∏ãÔºö \1.Â¶ÇÊûú‰∏Ä‰∏™Êìç‰Ωúhappens-beforeÂè¶‰∏Ä‰∏™Êìç‰ΩúÔºåÈÇ£‰πàÁ¨¨‰∏Ä‰∏™Êìç‰ΩúÁöÑÊâßË°åÁªìÊûúÂ∞ÜÂØπÁ¨¨‰∫å‰∏™Êìç‰ΩúÂèØËßÅÔºåËÄå‰∏îÁ¨¨‰∏Ä‰∏™Êìç‰ΩúÁöÑÊâßË°åÈ°∫Â∫èÊéíÂú®Á¨¨‰∫å‰∏™Êìç‰Ωú‰πãÂâç„ÄÇ 2. ‰∏§‰∏™Êìç‰Ωú‰πãÈó¥Â≠òÂú®happens-beforeÂÖ≥Á≥ªÔºåÂπ∂‰∏çÊÑèÂë≥ÁùÄ‰∏ÄÂÆöË¶ÅÊåâÁÖßhappens-beforeÂéüÂàôÂà∂ÂÆöÁöÑÈ°∫Â∫èÊù•ÊâßË°å„ÄÇÂ¶ÇÊûúÈáçÊéíÂ∫è‰πãÂêéÁöÑÊâßË°åÁªìÊûú‰∏éÊåâÁÖßhappens-beforeÂÖ≥Á≥ªÊù•ÊâßË°åÁöÑÁªìÊûú‰∏ÄËá¥ÔºåÈÇ£‰πàËøôÁßçÈáçÊéíÂ∫èÂπ∂‰∏çÈùûÊ≥ï„ÄÇ ‰∏ãÈù¢ÊòØhappens-beforeÂéüÂàôËßÑÂàôÔºö Á®ãÂ∫èÊ¨°Â∫èËßÑÂàôÔºö‰∏Ä‰∏™Á∫øÁ®ãÂÜÖÔºåÊåâÁÖß‰ª£Á†ÅÈ°∫Â∫èÔºå‰π¶ÂÜôÂú®ÂâçÈù¢ÁöÑÊìç‰ΩúÂÖàË°åÂèëÁîü‰∫é‰π¶ÂÜôÂú®ÂêéÈù¢ÁöÑÊìç‰ΩúÔºõ ÈîÅÂÆöËßÑÂàôÔºö‰∏Ä‰∏™unLockÊìç‰ΩúÂÖàË°åÂèëÁîü‰∫éÂêéÈù¢ÂØπÂêå‰∏Ä‰∏™ÈîÅÈ¢ùlockÊìç‰ΩúÔºõ volatileÂèòÈáèËßÑÂàôÔºöÂØπ‰∏Ä‰∏™ÂèòÈáèÁöÑÂÜôÊìç‰ΩúÂÖàË°åÂèëÁîü‰∫éÂêéÈù¢ÂØπËøô‰∏™ÂèòÈáèÁöÑËØªÊìç‰ΩúÔºõ ‰º†ÈÄíËßÑÂàôÔºöÂ¶ÇÊûúÊìç‰ΩúAÂÖàË°åÂèëÁîü‰∫éÊìç‰ΩúBÔºåËÄåÊìç‰ΩúBÂèàÂÖàË°åÂèëÁîü‰∫éÊìç‰ΩúCÔºåÂàôÂèØ‰ª•ÂæóÂá∫Êìç‰ΩúAÂÖàË°åÂèëÁîü‰∫éÊìç‰ΩúCÔºõ Á∫øÁ®ãÂêØÂä®ËßÑÂàôÔºöThreadÂØπË±°ÁöÑstart()ÊñπÊ≥ïÂÖàË°åÂèëÁîü‰∫éÊ≠§Á∫øÁ®ãÁöÑÊØè‰∏™‰∏Ä‰∏™Âä®‰ΩúÔºõ Á∫øÁ®ã‰∏≠Êñ≠ËßÑÂàôÔºöÂØπÁ∫øÁ®ãinterrupt()ÊñπÊ≥ïÁöÑË∞ÉÁî®ÂÖàË°åÂèëÁîü‰∫éË¢´‰∏≠Êñ≠Á∫øÁ®ãÁöÑ‰ª£Á†ÅÊ£ÄÊµãÂà∞‰∏≠Êñ≠‰∫ã‰ª∂ÁöÑÂèëÁîüÔºõ Á∫øÁ®ãÁªàÁªìËßÑÂàôÔºöÁ∫øÁ®ã‰∏≠ÊâÄÊúâÁöÑÊìç‰ΩúÈÉΩÂÖàË°åÂèëÁîü‰∫éÁ∫øÁ®ãÁöÑÁªàÊ≠¢Ê£ÄÊµãÔºåÊàë‰ª¨ÂèØ‰ª•ÈÄöËøáThread.join()ÊñπÊ≥ïÁªìÊùü„ÄÅThread.isAlive()ÁöÑËøîÂõûÂÄºÊâãÊÆµÊ£ÄÊµãÂà∞Á∫øÁ®ãÂ∑≤ÁªèÁªàÊ≠¢ÊâßË°åÔºõ ÂØπË±°ÁªàÁªìËßÑÂàôÔºö‰∏Ä‰∏™ÂØπË±°ÁöÑÂàùÂßãÂåñÂÆåÊàêÂÖàË°åÂèëÁîü‰∫é‰ªñÁöÑfinalize()ÊñπÊ≥ïÁöÑÂºÄÂßãÔºõ Êàë‰ª¨Êù•ËØ¶ÁªÜÁúãÁúã‰∏äÈù¢ÊØèÊù°ËßÑÂàôÔºàÊëòËá™„ÄäÊ∑±ÂÖ•ÁêÜËß£JavaËôöÊãüÊú∫Á¨¨12Á´†„ÄãÔºâÔºö Á®ãÂ∫èÊ¨°Â∫èËßÑÂàôÔºö‰∏ÄÊÆµ‰ª£Á†ÅÂú®ÂçïÁ∫øÁ®ã‰∏≠ÊâßË°åÁöÑÁªìÊûúÊòØÊúâÂ∫èÁöÑ„ÄÇÊ≥®ÊÑèÊòØÊâßË°åÁªìÊûúÔºåÂõ†‰∏∫ËôöÊãüÊú∫„ÄÅÂ§ÑÁêÜÂô®‰ºöÂØπÊåá‰ª§ËøõË°åÈáçÊéíÂ∫èÔºàÈáçÊéíÂ∫èÂêéÈù¢‰ºöËØ¶ÁªÜ‰ªãÁªçÔºâ„ÄÇËôΩÁÑ∂ÈáçÊéíÂ∫è‰∫ÜÔºå‰ΩÜÊòØÂπ∂‰∏ç‰ºöÂΩ±ÂìçÁ®ãÂ∫èÁöÑÊâßË°åÁªìÊûúÔºåÊâÄ‰ª•Á®ãÂ∫èÊúÄÁªàÊâßË°åÁöÑÁªìÊûú‰∏éÈ°∫Â∫èÊâßË°åÁöÑÁªìÊûúÊòØ‰∏ÄËá¥ÁöÑ„ÄÇÊïÖËÄåËøô‰∏™ËßÑÂàôÂè™ÂØπÂçïÁ∫øÁ®ãÊúâÊïàÔºåÂú®Â§öÁ∫øÁ®ãÁéØÂ¢É‰∏ãÊó†Ê≥ï‰øùËØÅÊ≠£Á°ÆÊÄß„ÄÇ ÈîÅÂÆöËßÑÂàôÔºöËøô‰∏™ËßÑÂàôÊØîËæÉÂ•ΩÁêÜËß£ÔºåÊó†ËÆ∫ÊòØÂú®ÂçïÁ∫øÁ®ãÁéØÂ¢ÉËøòÊòØÂ§öÁ∫øÁ®ãÁéØÂ¢ÉÔºå‰∏Ä‰∏™ÈîÅÂ§Ñ‰∫éË¢´ÈîÅÂÆöÁä∂ÊÄÅÔºåÈÇ£‰πàÂøÖÈ°ªÂÖàÊâßË°åunlockÊìç‰ΩúÂêéÈù¢ÊâçËÉΩËøõË°ålockÊìç‰Ωú„ÄÇ volatileÂèòÈáèËßÑÂàôÔºöËøôÊòØ‰∏ÄÊù°ÊØîËæÉÈáçË¶ÅÁöÑËßÑÂàôÔºåÂÆÉÊ†áÂøóÁùÄvolatile‰øùËØÅ‰∫ÜÁ∫øÁ®ãÂèØËßÅÊÄß„ÄÇÈÄö‰øóÁÇπËÆ≤Â∞±ÊòØÂ¶ÇÊûú‰∏Ä‰∏™Á∫øÁ®ãÂÖàÂéªÂÜô‰∏Ä‰∏™volatileÂèòÈáèÔºåÁÑ∂Âêé‰∏Ä‰∏™Á∫øÁ®ãÂéªËØªËøô‰∏™ÂèòÈáèÔºåÈÇ£‰πàËøô‰∏™ÂÜôÊìç‰Ωú‰∏ÄÂÆöÊòØhappens-beforeËØªÊìç‰ΩúÁöÑ„ÄÇ ‰º†ÈÄíËßÑÂàôÔºö‰ΩìÁé∞‰∫Ühappens-beforeÂéüÂàôÂÖ∑Êúâ‰º†ÈÄíÊÄßÔºåÂç≥A happens-before B , B happens-before CÔºåÈÇ£‰πàA happens-before C Á∫øÁ®ãÂêØÂä®ËßÑÂàôÔºöÂÅáÂÆöÁ∫øÁ®ãAÂú®ÊâßË°åËøáÁ®ã‰∏≠ÔºåÈÄöËøáÊâßË°åThreadB.start()Êù•ÂêØÂä®Á∫øÁ®ãBÔºåÈÇ£‰πàÁ∫øÁ®ãAÂØπÂÖ±‰∫´ÂèòÈáèÁöÑ‰øÆÊîπÂú®Êé•‰∏ãÊù•Á∫øÁ®ãBÂºÄÂßãÊâßË°åÂêéÁ°Æ‰øùÂØπÁ∫øÁ®ãBÂèØËßÅ„ÄÇ Á∫øÁ®ãÁªàÁªìËßÑÂàôÔºöÂÅáÂÆöÁ∫øÁ®ãAÂú®ÊâßË°åÁöÑËøáÁ®ã‰∏≠ÔºåÈÄöËøáÂà∂ÂÆöThreadB.join()Á≠âÂæÖÁ∫øÁ®ãBÁªàÊ≠¢ÔºåÈÇ£‰πàÁ∫øÁ®ãBÂú®ÁªàÊ≠¢‰πãÂâçÂØπÂÖ±‰∫´ÂèòÈáèÁöÑ‰øÆÊîπÂú®Á∫øÁ®ãAÁ≠âÂæÖËøîÂõûÂêéÂèØËßÅ„ÄÇ ‰∏äÈù¢ÂÖ´Êù°ÊòØÂéüÁîüJavaÊª°Ë∂≥Happens-beforeÂÖ≥Á≥ªÁöÑËßÑÂàôÔºå‰ΩÜÊòØÊàë‰ª¨ÂèØ‰ª•ÂØπ‰ªñ‰ª¨ËøõË°åÊé®ÂØºÂá∫ÂÖ∂‰ªñÊª°Ë∂≥happens-beforeÁöÑËßÑÂàôÔºö Â∞Ü‰∏Ä‰∏™ÂÖÉÁ¥†ÊîæÂÖ•‰∏Ä‰∏™Á∫øÁ®ãÂÆâÂÖ®ÁöÑÈòüÂàóÁöÑÊìç‰ΩúHappens-Before‰ªéÈòüÂàó‰∏≠ÂèñÂá∫Ëøô‰∏™ÂÖÉÁ¥†ÁöÑÊìç‰Ωú Â∞Ü‰∏Ä‰∏™ÂÖÉÁ¥†ÊîæÂÖ•‰∏Ä‰∏™Á∫øÁ®ãÂÆâÂÖ®ÂÆπÂô®ÁöÑÊìç‰ΩúHappens-Before‰ªéÂÆπÂô®‰∏≠ÂèñÂá∫Ëøô‰∏™ÂÖÉÁ¥†ÁöÑÊìç‰Ωú Âú®CountDownLatch‰∏äÁöÑÂÄíÊï∞Êìç‰ΩúHappens-Before CountDownLatch#await()Êìç‰Ωú ÈáäÊîæSemaphoreËÆ∏ÂèØÁöÑÊìç‰ΩúHappens-BeforeËé∑ÂæóËÆ∏ÂèØÊìç‰Ωú FutureË°®Á§∫ÁöÑ‰ªªÂä°ÁöÑÊâÄÊúâÊìç‰ΩúHappens-Before Future#get()Êìç‰Ωú ÂêëExecutorÊèê‰∫§‰∏Ä‰∏™RunnableÊàñCallableÁöÑÊìç‰ΩúHappens-Before‰ªªÂä°ÂºÄÂßãÊâßË°åÊìç‰Ωú ËøôÈáåÂÜçËØ¥‰∏ÄÈÅçhappens-beforeÁöÑÊ¶ÇÂøµÔºöÂ¶ÇÊûú‰∏§‰∏™Êìç‰Ωú‰∏çÂ≠òÂú®‰∏äËø∞ÔºàÂâçÈù¢8Êù° + ÂêéÈù¢6Êù°Ôºâ‰ªª‰∏Ä‰∏Ä‰∏™happens-beforeËßÑÂàôÔºåÈÇ£‰πàËøô‰∏§‰∏™Êìç‰ΩúÂ∞±Ê≤°ÊúâÈ°∫Â∫èÁöÑ‰øùÈöúÔºåJVMÂèØ‰ª•ÂØπËøô‰∏§‰∏™Êìç‰ΩúËøõË°åÈáçÊéíÂ∫è„ÄÇÂ¶ÇÊûúÊìç‰ΩúA happens-beforeÊìç‰ΩúBÔºåÈÇ£‰πàÊìç‰ΩúAÂú®ÂÜÖÂ≠ò‰∏äÊâÄÂÅöÁöÑÊìç‰ΩúÂØπÊìç‰ΩúBÈÉΩÊòØÂèØËßÅÁöÑ„ÄÇ ‰∏ãÈù¢Â∞±Áî®‰∏Ä‰∏™ÁÆÄÂçïÁöÑ‰æãÂ≠êÊù•ÊèèËø∞‰∏ãhappens-beforeÂéüÂàôÔºö 123456789private int i = 0;public void write(int j )&#123; i = j;&#125;public int read()&#123; return i;&#125; Êàë‰ª¨Á∫¶ÂÆöÁ∫øÁ®ãAÊâßË°åwrite()ÔºåÁ∫øÁ®ãBÊâßË°åread()Ôºå‰∏îÁ∫øÁ®ãA‰ºòÂÖà‰∫éÁ∫øÁ®ãBÊâßË°åÔºåÈÇ£‰πàÁ∫øÁ®ãBËé∑ÂæóÁªìÊûúÊòØ‰ªÄ‰πàÔºüÔºõÊàë‰ª¨Â∞±ËøôÊÆµÁÆÄÂçïÁöÑ‰ª£Á†Å‰∏ÄÊ¨°ÂàÜÊûêhappens-beforeÁöÑËßÑÂàôÔºàËßÑÂàô5„ÄÅ6„ÄÅ7„ÄÅ8 + Êé®ÂØºÁöÑ6Êù°ÂèØ‰ª•ÂøΩÁï•ÔºåÂõ†‰∏∫‰ªñ‰ª¨ÂíåËøôÊÆµ‰ª£Á†ÅÊØ´Êó†ÂÖ≥Á≥ªÔºâÔºö Áî±‰∫é‰∏§‰∏™ÊñπÊ≥ïÊòØÁî±‰∏çÂêåÁöÑÁ∫øÁ®ãË∞ÉÁî®ÔºåÊâÄ‰ª•ËÇØÂÆö‰∏çÊª°Ë∂≥Á®ãÂ∫èÊ¨°Â∫èËßÑÂàôÔºõ ‰∏§‰∏™ÊñπÊ≥ïÈÉΩÊ≤°Êúâ‰ΩøÁî®ÈîÅÔºåÊâÄ‰ª•‰∏çÊª°Ë∂≥ÈîÅÂÆöËßÑÂàôÔºõ ÂèòÈáèi‰∏çÊòØÁî®volatile‰øÆÈ•∞ÁöÑÔºåÊâÄ‰ª•volatileÂèòÈáèËßÑÂàô‰∏çÊª°Ë∂≥Ôºõ ‰º†ÈÄíËßÑÂàôËÇØÂÆö‰∏çÊª°Ë∂≥Ôºõ ÊâÄ‰ª•Êàë‰ª¨Êó†Ê≥ïÈÄöËøáhappens-beforeÂéüÂàôÊé®ÂØºÂá∫Á∫øÁ®ãA happens-beforeÁ∫øÁ®ãBÔºåËôΩÁÑ∂ÂèØ‰ª•Á°ÆËÆ§Âú®Êó∂Èó¥‰∏äÁ∫øÁ®ãA‰ºòÂÖà‰∫éÁ∫øÁ®ãBÊåáÂÆöÔºå‰ΩÜÊòØÂ∞±ÊòØÊó†Ê≥ïÁ°ÆËÆ§Á∫øÁ®ãBËé∑ÂæóÁöÑÁªìÊûúÊòØ‰ªÄ‰πàÔºåÊâÄ‰ª•ËøôÊÆµ‰ª£Á†Å‰∏çÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ„ÄÇÈÇ£‰πàÊÄé‰πà‰øÆÂ§çËøôÊÆµ‰ª£Á†ÅÂë¢ÔºüÊª°Ë∂≥ËßÑÂàô2„ÄÅ3‰ªª‰∏ÄÂç≥ÂèØ„ÄÇ happen-beforeÂéüÂàôÊòØJMM‰∏≠ÈùûÂ∏∏ÈáçË¶ÅÁöÑÂéüÂàôÔºåÂÆÉÊòØÂà§Êñ≠Êï∞ÊçÆÊòØÂê¶Â≠òÂú®Á´û‰∫â„ÄÅÁ∫øÁ®ãÊòØÂê¶ÂÆâÂÖ®ÁöÑ‰∏ªË¶Å‰æùÊçÆÔºå‰øùËØÅ‰∫ÜÂ§öÁ∫øÁ®ãÁéØÂ¢É‰∏ãÁöÑÂèØËßÅÊÄß„ÄÇ ‰∏ãÂõæÊòØhappens-before‰∏éJMMÁöÑÂÖ≥Á≥ªÂõæÔºàÊëòËá™„ÄäJavaÂπ∂ÂèëÁºñÁ®ãÁöÑËâ∫ÊúØ„ÄãÔºâ ÂèÇËÄÉËµÑÊñô Âë®ÂøóÊòéÔºö„ÄäÊ∑±ÂÖ•ÁêÜËß£JavaËôöÊãüÊú∫„Äã ÊñπËÖæÈ£ûÔºö„ÄäJavaÂπ∂ÂèëÁºñÁ®ãÁöÑËâ∫ÊúØ„Äã ÂéüÊñáÂèëÂ∏É‰∫éÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ - chenssyÔºàchenssy89Ôºâ ÂéüÊñáÂèëË°®Êó∂Èó¥Ôºö2017-02-22 Êú¨ÊñáÂèÇ‰∏éËÖæËÆØ‰∫ëËá™Â™í‰ΩìÂàÜ‰∫´ËÆ°ÂàíÔºåÊ¨¢ËøéÊ≠£Âú®ÈòÖËØªÁöÑ‰Ω†‰πüÂä†ÂÖ•Ôºå‰∏ÄËµ∑ÂàÜ‰∫´„ÄÇ ÂèëË°®‰∫é 2018-04-26]]></content>
      <tags>
        <tag>Á∫øÁ®ã</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêJavaÂπ∂ÂèëÂü∫Á°Ä„Äë‚Äî‚ÄîÁ∫øÁ®ãÂÆâÂÖ®ÊÄß]]></title>
    <url>%2F2018%2F08%2F13%2Fthread%2F%E3%80%90Java%E5%B9%B6%E5%8F%91%E5%9F%BA%E7%A1%80%E3%80%91%E2%80%94%E2%80%94%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E6%80%A7%2F</url>
    <content type="text"><![CDATA[Ë¶ÅÁºñÂÜôÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ‰ª£Á†ÅÔºåÂÖ∂Ê†∏ÂøÉÂú®‰∫éË¶ÅÂØπÁä∂ÊÄÅËÆøÈóÆÊìç‰ΩúËøõË°åÁÆ°ÁêÜÔºåÁâπÂà´ÊòØÂØπÂÖ±‰∫´ÁöÑÂíåÂèØÂèòÁöÑÁä∂ÊÄÅÁöÑËÆøÈóÆ„ÄÇ ‰∏Ä‰∏™ÂØπË±°ÊòØÂê¶ÈúÄË¶ÅÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÔºåÂèñÂÜ≥‰∫éÂÆÉÊòØÂê¶Ë¢´Â§ö‰∏™Á∫øÁ®ãËÆøÈóÆ„ÄÇË¶Å‰ΩøÂæóÂØπË±°ÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÔºåÈúÄË¶ÅÈááÁî®ÂêåÊ≠•Êú∫Âà∂Êù•ÂçèÂêåÂØπÂØπË±°ÂèØÂèòÁä∂ÊÄÅÁöÑËÆøÈóÆ„ÄÇ Â¶ÇÊûúÂΩìÂ§ö‰∏™Á∫øÁ®ãËÆøÈóÆÂêå‰∏Ä‰∏™ÂèØÂèòÁöÑÁä∂ÊÄÅÂèòÈáèÊó∂Ê≤°Êúâ‰ΩøÁî®ÂêàÈÄÇÁöÑÂêåÊ≠•ÔºåÈÇ£‰πàÁ®ãÂ∫èÂ∞±‰ºöÂá∫Áé∞ÈîôËØØ„ÄÇÊúâ‰∏âÁßçÊñπÂºèÂèØ‰ª•‰øÆÂ§çËøô‰∏™ÈóÆÈ¢òÔºö ‰∏çÂú®Á∫øÁ®ã‰πãÈó¥ÂÖ±‰∫´ËØ•Áä∂ÊÄÅÂèòÈáè Â∞ÜÁä∂ÊÄÅÂèòÈáè‰øÆÊîπ‰∏∫‰∏çÂèØÂèòÁöÑÂèòÈáè Âú®ËÆøÈóÆÁä∂ÊÄÅÂèòÈáèÊó∂‰ΩøÁî®ÂêåÊ≠• Âú®Á∫øÁ®ãÂÆâÂÖ®ÊÄßÁöÑÂÆö‰πâ‰∏≠ÔºåÊúÄÊ†∏ÂøÉÁöÑÊ¶ÇÂøµÂ∞±ÊòØÊ≠£Á°ÆÊÄß„ÄÇÂ¶ÇÊûúÂØπÁ∫øÁ®ãÂÆâÂÖ®ÊÄßÁöÑÂÆö‰πâÊòØÊ®°Á≥äÁöÑÔºåÈÇ£‰πàÂ∞±ÊòØÂõ†‰∏∫Áº∫‰πèÂØπÂáÜÁ°ÆÊÄßÁöÑÊ∏ÖÊô∞ÂÆö‰πâ„ÄÇ Ê≠£Á°ÆÊÄßÁöÑÂê´‰πâÊòØÔºåÊüê‰∏™Á±ªÁöÑË°å‰∏∫‰∏éÂÖ∂ËßÑËåÉÂÆåÂÖ®‰∏ÄËá¥„ÄÇÂú®ËâØÂ•ΩÁöÑËßÑËåÉ‰∏≠ÈÄöÂ∏∏‰ºöÂÆö‰πâÂêÑÁßç‰∏çÂèòÊÄßÊù°‰ª∂Êù•Á∫¶ÊùüÂØπË±°ÁöÑÁä∂ÊÄÅÔºå‰ª•ÂèäÂÆö‰πâÂêÑÁßçÂêéÈ™åÊù°‰ª∂Êù•ÊèèËø∞ÂØπË±°Êìç‰ΩúÁöÑÁªìÊûú„ÄÇ Á∫øÁ®ãÂÆâÂÖ®Á±ªÔºöÂΩìÂ§ö‰∏™Á∫øÁ®ãËÆøÈóÆÊüê‰∏™Á±ªÊó∂Ôºå‰∏çÁÆ°ËøêË°åÊó∂ÁéØÂ¢ÉÈááÁî®‰ΩïÁßçË∞ÉÂ∫¶ÊñπÂºèÊàñËÄÖËøô‰∫õÁ∫øÁ®ãÂ∞ÜÂ¶Ç‰Ωï‰∫§ÊõøÊâßË°åÔºåÂπ∂‰∏îÂú®‰∏ªË∞É‰ª£Á†Å‰∏≠‰∏çÈúÄË¶Å‰ªª‰ΩïÈ¢ùÂ§ñÁöÑÂêåÊ≠•ÊàñÂçèÂêåÔºåËøô‰∏™Á±ªÈÉΩËÉΩË°®Áé∞Âá∫Ê≠£Á°ÆÁöÑË°å‰∏∫ÔºåÈÇ£‰πàÂ∞±Áß∞Ëøô‰∏™Á±ªÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ„ÄÇ ÂÜÖÂ≠òÊ®°ÂûãÂ§öÁ∫øÁ®ãÈÄö‰ø°ÁöÑ‰∏ªË¶ÅÊñπÂºèÂ∞±ÊòØÂÖ±‰∫´ÂÜÖÂ≠òÁöÑÊñπÂºèÔºåÂÖ±‰∫´ÂÜÖÂ≠ò‰∏ªË¶ÅÁöÑÂÖ≥Ê≥®ÁÇπÊúâ‰∏§‰∏™ÔºöÂèØËßÅÊÄßÂíåÊúâÂ∫èÊÄß„ÄÇÂä†‰∏äÂ§çÂêàÊìç‰ΩúÁöÑÂéüÂ≠êÊÄßÔºåÊàë‰ª¨ÂèØ‰ª•ËÆ§‰∏∫JavaÁöÑÁ∫øÁ®ãÂÆâÂÖ®ÈóÆÈ¢ò‰∏ªË¶ÅÂÖ≥Ê≥®ÁÇπÊúâ3‰∏™Ôºö ÂèØËßÅÊÄß ÊúâÂ∫èÊÄß ÂéüÂ≠êÊÄß Âú®ÁêÜËß£Ëøô‰∏âÂ§ßÁâπÊÄß‰πãÂâçÔºåÊúâÂøÖË¶ÅÂÖà‰∫ÜËß£‚ÄúÂÜÖÂ≠òÊ®°Âûã‚ÄùÁöÑÁõ∏ÂÖ≥Ê¶ÇÂøµ„ÄÇ ËÆ°ÁÆóÊú∫Âú®ÊâßË°åÁ®ãÂ∫èÊó∂ÔºåÊØèÊù°Êåá‰ª§ÈÉΩÊòØÂú®CPU‰∏≠ÊâßË°åÁöÑÔºåËÄåÊâßË°åÊåá‰ª§ËøáÁ®ã‰∏≠ÔºåÂäøÂøÖÊ∂âÂèäÂà∞Êï∞ÊçÆÁöÑËØªÂèñÂíåÂÜôÂÖ•„ÄÇÁî±‰∫éÁ®ãÂ∫èËøêË°åËøáÁ®ã‰∏≠ÁöÑ‰∏¥Êó∂Êï∞ÊçÆÊòØÂ≠òÊîæÂú®‰∏ªÂ≠òÔºàÁâ©ÁêÜÂÜÖÂ≠òÔºâÂΩì‰∏≠ÁöÑÔºåËøôÊó∂Â∞±Â≠òÂú®‰∏Ä‰∏™ÈóÆÈ¢òÔºåÁî±‰∫éCPUÊâßË°åÈÄüÂ∫¶ÂæàÂø´ÔºåËÄå‰ªéÂÜÖÂ≠òËØªÂèñÊï∞ÊçÆÂíåÂêëÂÜÖÂ≠òÂÜôÂÖ•Êï∞ÊçÆÁöÑËøáÁ®ãË∑üCPUÊâßË°åÊåá‰ª§ÁöÑÈÄüÂ∫¶ÊØîËµ∑Êù•Ë¶ÅÊÖ¢ÁöÑÂ§öÔºåÂõ†Ê≠§Â¶ÇÊûú‰ªª‰ΩïÊó∂ÂÄôÂØπÊï∞ÊçÆÁöÑÊìç‰ΩúÈÉΩË¶ÅÈÄöËøáÂíåÂÜÖÂ≠òÁöÑ‰∫§‰∫íÊù•ËøõË°åÔºå‰ºöÂ§ßÂ§ßÈôç‰ΩéÊåá‰ª§ÊâßË°åÁöÑÈÄüÂ∫¶„ÄÇÂõ†Ê≠§Âú®CPUÈáåÈù¢Â∞±Êúâ‰∫ÜÈ´òÈÄüÁºìÂ≠ò„ÄÇ ‰πüÂ∞±ÊòØÔºåÂΩìÁ®ãÂ∫èÂú®ËøêË°åËøáÁ®ã‰∏≠Ôºå‰ºöÂ∞ÜËøêÁÆóÈúÄË¶ÅÁöÑÊï∞ÊçÆ‰ªé‰∏ªÂ≠òÂ§çÂà∂‰∏Ä‰ªΩÂà∞CPUÁöÑÈ´òÈÄüÁºìÂ≠òÂΩì‰∏≠ÔºåÈÇ£‰πàCPUËøõË°åËÆ°ÁÆóÊó∂Â∞±ÂèØ‰ª•Áõ¥Êé•‰ªéÂÆÉÁöÑÈ´òÈÄüÁºìÂ≠òËØªÂèñÊï∞ÊçÆÂíåÂêëÂÖ∂‰∏≠ÂÜôÂÖ•Êï∞ÊçÆÔºåÂΩìËøêÁÆóÁªìÊùü‰πãÂêéÔºåÂÜçÂ∞ÜÈ´òÈÄüÁºìÂ≠ò‰∏≠ÁöÑÊï∞ÊçÆÂà∑Êñ∞Âà∞‰∏ªÂ≠òÂΩì‰∏≠„ÄÇ‰∏æ‰∏™ÁÆÄÂçïÁöÑ‰æãÂ≠êÔºåÊØîÂ¶Ç‰∏ãÈù¢ÁöÑËøôÊÆµ‰ª£Á†ÅÔºö 1i = i + 1; ÂΩìÁ∫øÁ®ãÊâßË°åËøô‰∏™ËØ≠Âè•Êó∂Ôºå‰ºöÂÖà‰ªé‰∏ªÂ≠òÂΩì‰∏≠ËØªÂèñiÁöÑÂÄºÔºåÁÑ∂ÂêéÂ§çÂà∂‰∏Ä‰ªΩÂà∞È´òÈÄüÁºìÂ≠òÂΩì‰∏≠ÔºåÁÑ∂ÂêéCPUÊâßË°åÊåá‰ª§ÂØπiËøõË°åÂä†1Êìç‰ΩúÔºåÁÑ∂ÂêéÂ∞ÜÊï∞ÊçÆÂÜôÂÖ•È´òÈÄüÁºìÂ≠òÔºåÊúÄÂêéÂ∞ÜÈ´òÈÄüÁºìÂ≠ò‰∏≠iÊúÄÊñ∞ÁöÑÂÄºÂà∑Êñ∞Âà∞‰∏ªÂ≠òÂΩì‰∏≠„ÄÇ Ëøô‰∏™‰ª£Á†ÅÂú®ÂçïÁ∫øÁ®ã‰∏≠ËøêË°åÊòØÊ≤°Êúâ‰ªª‰ΩïÈóÆÈ¢òÁöÑÔºå‰ΩÜÊòØÂú®Â§öÁ∫øÁ®ã‰∏≠ËøêË°åÂ∞±‰ºöÊúâÈóÆÈ¢ò‰∫Ü„ÄÇÂú®Â§öÊ†∏CPU‰∏≠ÔºåÊØèÊù°Á∫øÁ®ãÂèØËÉΩËøêË°å‰∫é‰∏çÂêåÁöÑCPU‰∏≠ÔºåÂõ†Ê≠§ÊØè‰∏™Á∫øÁ®ãËøêË°åÊó∂ÊúâËá™Â∑±ÁöÑÈ´òÈÄüÁºìÂ≠òÔºàÂØπÂçïÊ†∏CPUÊù•ËØ¥ÔºåÂÖ∂ÂÆû‰πü‰ºöÂá∫Áé∞ËøôÁßçÈóÆÈ¢òÔºåÂè™‰∏çËøáÊòØ‰ª•Á∫øÁ®ãË∞ÉÂ∫¶ÁöÑÂΩ¢ÂºèÊù•ÂàÜÂà´ÊâßË°åÁöÑÔºâ„ÄÇÊú¨ÊñáÊàë‰ª¨‰ª•Â§öÊ†∏CPU‰∏∫‰æã„ÄÇ ÊØîÂ¶ÇÂêåÊó∂Êúâ2‰∏™Á∫øÁ®ãÊâßË°åËøôÊÆµ‰ª£Á†ÅÔºåÂÅáÂ¶ÇÂàùÂßãÊó∂iÁöÑÂÄº‰∏∫0ÔºåÈÇ£‰πàÊàë‰ª¨Â∏åÊúõ‰∏§‰∏™Á∫øÁ®ãÊâßË°åÂÆå‰πãÂêéiÁöÑÂÄºÂèò‰∏∫2„ÄÇ‰ΩÜÊòØ‰∫ãÂÆû‰ºöÊòØËøôÊ†∑ÂêóÔºü ÂèØËÉΩÂ≠òÂú®‰∏ãÈù¢‰∏ÄÁßçÊÉÖÂÜµÔºöÂàùÂßãÊó∂Ôºå‰∏§‰∏™Á∫øÁ®ãÂàÜÂà´ËØªÂèñiÁöÑÂÄºÂ≠òÂÖ•ÂêÑËá™ÊâÄÂú®ÁöÑCPUÁöÑÈ´òÈÄüÁºìÂ≠òÂΩì‰∏≠ÔºåÁÑ∂ÂêéÁ∫øÁ®ã1ËøõË°åÂä†1Êìç‰ΩúÔºåÁÑ∂ÂêéÊääiÁöÑÊúÄÊñ∞ÂÄº1ÂÜôÂÖ•Âà∞ÂÜÖÂ≠ò„ÄÇÊ≠§Êó∂Á∫øÁ®ã2ÁöÑÈ´òÈÄüÁºìÂ≠òÂΩì‰∏≠iÁöÑÂÄºËøòÊòØ0ÔºåËøõË°åÂä†1Êìç‰Ωú‰πãÂêéÔºåiÁöÑÂÄº‰∏∫1ÔºåÁÑ∂ÂêéÁ∫øÁ®ã2ÊääiÁöÑÂÄºÂÜôÂÖ•ÂÜÖÂ≠ò„ÄÇ ÊúÄÁªàÁªìÊûúiÁöÑÂÄºÊòØ1ÔºåËÄå‰∏çÊòØ2„ÄÇËøôÂ∞±ÊòØËëóÂêçÁöÑÁºìÂ≠ò‰∏ÄËá¥ÊÄßÈóÆÈ¢ò„ÄÇÈÄöÂ∏∏Áß∞ËøôÁßçË¢´Â§ö‰∏™Á∫øÁ®ãËÆøÈóÆÁöÑÂèòÈáè‰∏∫ÂÖ±‰∫´ÂèòÈáè„ÄÇ ‰πüÂ∞±ÊòØËØ¥ÔºåÂ¶ÇÊûú‰∏Ä‰∏™ÂèòÈáèÂú®Â§ö‰∏™CPU‰∏≠ÈÉΩÂ≠òÂú®ÁºìÂ≠òÔºà‰∏ÄËà¨Âú®Â§öÁ∫øÁ®ãÁºñÁ®ãÊó∂Êâç‰ºöÂá∫Áé∞ÔºâÔºåÈÇ£‰πàÂ∞±ÂèØËÉΩÂ≠òÂú®ÁºìÂ≠ò‰∏ç‰∏ÄËá¥ÁöÑÈóÆÈ¢ò„ÄÇ ÂèØËßÅÊÄß‰ªé‰∏äÈù¢ÁöÑÊèèËø∞ÂèØÁü•ÔºåÂú®Â§öÁ∫øÁ®ãÁéØÂ¢É‰∏ã‰ºöÂ≠òÂú®ÂèØËßÅÊÄßÁöÑÈóÆÈ¢ò„ÄÇJavaÂÜÖÂ≠òÊ®°ÂûãÔºàJMMÔºâÊèê‰æõ‰∫Ü‰∏Ä‰∫õÊú∫Âà∂Êù•Ëß£ÂÜ≥Ëøô‰∫õÈóÆÈ¢ò„ÄÇ‰æãÂ¶ÇVolatileÂÖ≥ÈîÆÂ≠ó„ÄÇ ÂèØËßÅÊÄßÊåáÁöÑÊòØ‰∏Ä‰∏™Á∫øÁ®ãÂØπÂèòÈáèÁöÑÂÜôÊìç‰ΩúÂØπÂÖ∂ÂÆÉÁ∫øÁ®ãÂêéÁª≠ÁöÑËØªÊìç‰ΩúÂèØËßÅ„ÄÇ ÂéüÂ≠êÊÄß Â§öÁ∫øÁ®ã‰∏≠ÂÖ≥‰∫é‚ÄúÂéüÂ≠êÊÄß‚ÄùÁöÑÂÆö‰πâÔºö Â¶ÇÊûúËøô‰∏™Êìç‰ΩúÊâÄÂ§ÑÁöÑÂ±Ç(layer)ÁöÑÊõ¥È´òÂ±Ç‰∏çËÉΩÂèëÁé∞ÂÖ∂ÂÜÖÈÉ®ÂÆûÁé∞‰∏éÁªìÊûÑÔºåÈÇ£‰πàËøô‰∏™Êìç‰ΩúÊòØ‰∏Ä‰∏™ÂéüÂ≠ê(atomic)Êìç‰Ωú„ÄÇ Â∞ÜÊï¥‰∏™Êìç‰ΩúËßÜ‰Ωú‰∏Ä‰∏™Êï¥‰ΩìÊòØÂéüÂ≠êÊÄßÁöÑÊ†∏ÂøÉÁâπÂæÅ„ÄÇ ÂéüÂ≠êÊìç‰ΩúÂèØ‰ª•ÊòØ‰∏Ä‰∏™Ê≠•È™§Ôºå‰πüÂèØ‰ª•ÊòØÂ§ö‰∏™Êìç‰ΩúÊ≠•È™§Ôºå‰ΩÜÊòØÂÖ∂È°∫Â∫è‰∏çÂèØ‰ª•Ë¢´Êâì‰π±Ôºå‰πü‰∏çÂèØ‰ª•Ë¢´ÂàáÂâ≤ËÄåÂè™ÊâßË°åÂÖ∂‰∏≠ÁöÑ‰∏ÄÈÉ®ÂàÜ„ÄÇ ÂéüÂ≠êÊìç‰ΩúÊòØÊåáÔºåÂØπ‰∫éËÆøÈóÆÂêå‰∏Ä‰∏™Áä∂ÊÄÅÁöÑÊâÄÊúâÊìç‰ΩúÔºàÂåÖÊã¨ËØ•Êìç‰ΩúÊú¨Ë∫´ÔºâÊù•ËØ¥ÔºåËøô‰∏™Êìç‰ΩúÊòØ‰∏Ä‰∏™‰ª•ÂéüÂ≠êÊñπÂºèÊâßË°åÁöÑÊìç‰Ωú„ÄÇ ÊúâÊó∂ÂÄôÊàë‰ª¨Â∏åÊúõÊüê‰∏™Êìç‰Ωú‰ª•ÂéüÂ≠êÁöÑÊñπÂºèÊâßË°åÔºåÂê¶ÂàôÂú®Â§öÁ∫øÁ®ãÁéØÂ¢É‰∏ã‰ºöÂá∫Áé∞ÈóÆÈ¢òÂ¶ÇÁ®ãÂ∫èÊ∏ÖÂçï2-2‰∏≠ÁöÑUnSafeCountingFactorizerÊâÄÁ§∫ÔºåÊàë‰ª¨Â∏åÊúõÂ¢ûÂä†‰∏Ä‰∏™‚ÄúÂëΩ‰∏≠ËÆ°Êï∞Âô®‚ÄùÊù•ÁªüËÆ°ÊâÄÂ§ÑÁêÜÁöÑËØ∑Ê±ÇÊï∞Èáè„ÄÇËôΩÁÑ∂ÈÄíÂ¢ûÊìç‰Ωú++countÊòØ‰∏ÄÁßçÁ¥ßÂáëÁöÑËØ≠Ê≥ïÔºå‰ΩøÂÖ∂Áúã‰∏äÂéªÂè™ÊòØ‰∏Ä‰∏™Êìç‰ΩúÔºå‰ΩÜËøô‰∏™Êìç‰ΩúÂπ∂ÈùûÂéüÂ≠êÁöÑÔºåÂõ†ËÄåÂÆÉÂπ∂‰∏ç‰ºö‰Ωú‰∏∫‰∏Ä‰∏™‰∏çÂèØÂàÜÂâ≤ÁöÑÊìç‰ΩúÊù•ÊâßË°å„ÄÇËøôÊòØ‰∏Ä‰∏™‚ÄúËØªÂèñ-‰øÆÊîπ-ÂÜôÂÖ•‚ÄùÁöÑÊìç‰ΩúÂ∫èÂàóÔºåÂπ∂‰∏îÂÖ∂ÁªìÊûúÁä∂ÊÄÅ‰æùËµñ‰∫é‰πãÂâçÁöÑÁä∂ÊÄÅ„ÄÇ Á®ãÂ∫èÊ∏ÖÂçï2-2 Âú®Ê≤°ÊúâÂêåÊ≠•ÁöÑÊÉÖÂÜµ‰∏ãÁªüËÆ°Â∑≤Â§ÑÁêÜËØ∑Ê±ÇÊï∞ÈáèÁöÑServletÔºà‰∏çË¶ÅËøô‰πàÂÅöÔºâ1234567891011121314151617@NotThreadSafepublic class UnSafeCountingFactorizer implements Servlet &#123; private long count = 0; public long getCount() &#123; return count; &#125; public void service(ServletRequest req, ServletResponse resp) &#123; BigInteger i = extractFromRequest(req); BigInteger[] factors = factor(i); ++count; //ËøôÈáåÂåÖÂê´‰∫Ü3‰∏™Áã¨Á´ãÁöÑÊìç‰ΩúÔºöËØªÂèñcountÁöÑÂÄºÔºåÂ∞ÜÂÄºÂä†1ÔºåÂ∞ÜËÆ°ÁÆóÁªìÊûúÂÜôÂÖ•count encodeIntoResponse(resp, factors); &#125; &#125; ÈÄöÂ∏∏‰ª•‰∏ãÊÉÖÂÜµÈúÄË¶Å‰øùËØÅÂéüÂ≠êÊÄßÔºöÁªìÊûúÁä∂ÊÄÅ‰æùËµñ‰πãÂâçÁöÑÁä∂ÊÄÅ„ÄÅ‰∏çÂèòÊÄßÊù°‰ª∂ÂåÖÂê´Â§ö‰∏™ÂèòÈáè„ÄÅÂ≠òÂú®Á´ûÊÄÅÊù°‰ª∂„ÄÇ Ë¶Å‰øùÊåÅÁä∂ÊÄÅÁöÑ‰∏ÄËá¥ÊÄßÔºåÂ∞±ÈúÄË¶ÅÂú®Âçï‰∏™ÂéüÂ≠êÊìç‰Ωú‰∏≠Êõ¥Êñ∞ÊâÄÊúâÁõ∏ÂÖ≥ÁöÑÁä∂ÊÄÅÂèòÈáè„ÄÇ Á´ûÊÄÅÊù°‰ª∂ÂΩìÊüê‰∏™ËÆ°ÁÆóÁöÑÊ≠£Á°ÆÊÄßÂèñÂÜ≥‰∫éÂ§ö‰∏™Á∫øÁ®ãÁöÑ‰∫§ÊõøÊâßË°åÊó∂Â∫èÔºåÈÇ£‰πàÂ∞±‰ºöÂèëÁîüÁ´ûÊÄÅÊù°‰ª∂„ÄÇ ÊúÄÂ∏∏ËßÅÁöÑÁ´ûÊÄÅÊù°‰ª∂Á±ªÂûãÂ∞±ÊòØ‚ÄúÂÖàÊ£ÄÊü•ÂêéÊâßË°å‚ÄùÊìç‰ΩúÔºåÂç≥ÈÄöËøá‰∏Ä‰∏™ÂèØËÉΩÂ§±ÊïàÁöÑËßÇÊµãÁªìÊûúÊù•ÂÜ≥ÂÆö‰∏ã‰∏ÄÊ≠•ÁöÑÂä®‰ΩúÔºöÈ¶ñÂÖàËßÇÂØüÂà∞Êüê‰∏™Êù°‰ª∂‰∏∫ÁúüÔºà‰æãÂ¶ÇÊñá‰ª∂X‰∏çÂ≠òÂú®ÔºâÔºåÁÑ∂ÂêéÊ†πÊçÆËøô‰∏™ËßÇÂØüÁªìÊûúÈááÁî®Áõ∏Â∫îÁöÑÂä®‰ΩúÔºàÂàõÂª∫Êñá‰ª∂XÔºâÔºå‰ΩÜ‰∫ãÂÆû‰∏äÔºåÂú®‰Ω†ËßÇÂØüÂà∞Ëøô‰∏™ÁªìÊûú‰ª•ÂèäÂºÄÂßãÂàõÂª∫Êñá‰ª∂‰πãÈó¥ÔºåËßÇÂØüÁªìÊûúÂèØËÉΩÂèòÂæóÊó†ÊïàÔºàÂè¶‰∏Ä‰∏™Á∫øÁ®ãÂú®ËøôÊúüÈó¥ÂàõÂª∫‰∫ÜÊñá‰ª∂XÔºâÔºå‰ªéËÄåÂØºËá¥ÂêÑÁßçÈóÆÈ¢òÔºàÊú™È¢ÑÊúüÁöÑÂºÇÂ∏∏„ÄÅÊï∞ÊçÆË¢´Ë¶ÜÁõñ„ÄÅÊñá‰ª∂Ë¢´Á†¥ÂùèÁ≠âÔºâ„ÄÇ Â§çÂêàÊìç‰ΩúÊàë‰ª¨Â∞Ü‚ÄúÂÖàÊ£ÄÊü•ÂêéÊâßË°å‚Äù‰ª•Âèä‚ÄúËØªÂèñ-‰øÆÊîπ-ÂÜôÂÖ•‚ÄùÁ≠âÊìç‰ΩúÁªü‰∏ÄÁß∞‰∏∫Â§çÂêàÊìç‰ΩúÔºöÂåÖÂê´‰∫Ü‰∏ÄÁªÑÂøÖÈ°ª‰ª•ÂéüÂ≠êÊñπÂºèÊâßË°åÁöÑÊìç‰Ωú‰ª•Á°Æ‰øùÁ∫øÁ®ãÂÆâÂÖ®ÊÄß„ÄÇ]]></content>
      <categories>
        <category>Java - Â§öÁ∫øÁ®ã - Âπ∂ÂèëÂü∫Á°Ä</category>
      </categories>
      <tags>
        <tag>Â§öÁ∫øÁ®ã</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>%2F2018%2F08%2F13%2Fthread%2F%E8%B0%88%E8%B0%88%E9%AB%98%E5%B9%B6%E5%8F%91%E4%B8%8B%E7%9A%84%E5%B9%82%E7%AD%89%E6%80%A7%E5%A4%84%E7%90%86%2F</url>
    <content type="text"><![CDATA[Ë∞àË∞àÈ´òÂπ∂Âèë‰∏ãÁöÑÂπÇÁ≠âÊÄßÂ§ÑÁêÜ ËΩ¨ËΩΩÂú∞ÂùÄÔºöhttps://blog.csdn.net/aly1989/article/details/52352726 ‰ªÄ‰πàÊòØÂπÇÁ≠âÊÄßHTTP/1.1‰∏≠ÂØπÂπÇÁ≠âÊÄßÁöÑÂÆö‰πâÊòØÔºö Methods can also have the property of ‚Äúidempotence‚Äù in that (aside from error or expiration issues) the side-effects of N &gt; 0 identical requests is the same as for a single request. ËøôÈáå‰∏çËÆ®ËÆ∫Â≠¶ÊúØ‰∏äÂ¶Ç‰ΩïÂÆö‰πâÂπÇÁ≠âÊÄßÔºåËÄåÊòØÈáçÁÇπÂú®‰∫éÂ¶Ç‰ΩïÂú®ÂàÜÂ∏ÉÂºèÁéØÂ¢É‰∏≠Êèê‰æõÂØπÂ§ñÂπÇÁ≠âÊÄßÁöÑÊé•Âè£„ÄÇÂØπÂ§ñÊèê‰æõÁöÑÊé•Âè£ÊâøËØ∫ÂπÇÁ≠âÊÄßÔºåÂÖ∂Ë¶ÅË°®ËææÁöÑÂê´‰πâÊòØÔºöÂè™Ë¶ÅË∞ÉÁî®Êé•Âè£ÊàêÂäüÔºåÂ§ñÈÉ®ÂØπÊé•Âè£ÁöÑÂ§öÊ¨°Ë∞ÉÁî®ÂæóÂà∞ÁöÑÁªìÊûúÊòØÁõ∏ÂêåÁöÑ„ÄÇÂç≥ÊâßË°åÂ§öÊ¨°Âíå‰∏ÄÊ¨°ÁöÑÊïàÊûúÊòØ‰∏ÄÊ†∑ÁöÑ„ÄÇ ‰∏∫‰ªÄ‰πàÈúÄË¶ÅÂπÇÁ≠â‰∏äÈù¢Â∞èÊòéÈÅáÂà∞ÁöÑÈóÆÈ¢òÔºåÂ∞±ÊòØÂú®Èò≤Ê≠¢ÈáçÂ§çÊèê‰∫§ÁöÑÊÉÖÂÜµ‰∏äÊ≤°ÊúâÂÅöÂ•ΩÊéßÂà∂„ÄÇ‰∏öÂä°ÂºÄÂèë‰∏≠ÔºåÁªèÂ∏∏‰ºöÈÅáÂà∞ÈáçÂ§çÊèê‰∫§ÁöÑÊÉÖÂÜµÔºåÊó†ËÆ∫ÊòØÁî±‰∫éÁΩëÁªúÈóÆÈ¢òÊó†Ê≥ïÊî∂Âà∞ËØ∑Ê±ÇÁªìÊûúËÄåÈáçÊñ∞ÂèëËµ∑ËØ∑Ê±ÇÔºåÊàñÊòØÂâçÁ´ØÁöÑÊìç‰ΩúÊäñÂä®ËÄåÈÄ†ÊàêÈáçÂ§çÊèê‰∫§ÊÉÖÂÜµ„ÄÇ Âú®‰∫§ÊòìÁ≥ªÁªüÔºåÊîØ‰ªòÁ≥ªÁªüËøôÁßçÈáçÂ§çÊèê‰∫§ÈÄ†ÊàêÁöÑÈóÆÈ¢òÊúâÂ∞§ÂÖ∂ÊòéÊòæÔºåÊØîÂ¶ÇÔºö Áî®Êà∑Âú®APP‰∏äËøûÁª≠ÁÇπÂáª‰∫ÜÂ§öÊ¨°Êèê‰∫§ËÆ¢ÂçïÔºåÂêéÂè∞Â∫îËØ•Âè™‰∫ßÁîü‰∏Ä‰∏™ËÆ¢Âçï„ÄÇÔºà‰∏ãÂ§ö‰∏™Áõ∏ÂêåÁöÑÂçïÔºåÊàëÊúâÁóÖÂïäÔºâ ÂêëÊîØ‰ªòÂÆùÂèëËµ∑ÊîØ‰ªòËØ∑Ê±ÇÔºåÁî±‰∫éÁΩëÁªúÈóÆÈ¢òÊàñÁ≥ªÁªüBUGÈáçÂèëÔºåÊîØ‰ªòÂÆùÂ∫îËØ•Âè™Êâ£‰∏ÄÊ¨°Èí±„ÄÇÔºàÂ§ö‰ªòNÁ¨îÈí±ÔºåÊàëÁúüÊúâÈí±ÂïäÔºâ ÂæàÊòæÁÑ∂ÔºåÂπÇÁ≠âÊé•Âè£ËÆ§‰∏∫ÔºåÂ§ñÈÉ®Ë∞ÉÁî®ËÄÖ‰ºöÂ≠òÂú®Â§öÊ¨°Ë∞ÉÁî®ÁöÑÂú∫ÊôØÔºå‰∏∫‰∫ÜÈò≤Ê≠¢ÈáçËØïÂØπÊï∞ÊçÆÁä∂ÊÄÅÁöÑÊîπÂèòÔºåÈúÄË¶ÅÂ∞ÜÊé•Âè£ÁöÑËÆæËÆ°‰∏∫ÂπÇÁ≠âÁöÑ„ÄÇ ‰ªÄ‰πàÊÉÖÂÜµ‰∏ãÈúÄË¶Å‰øùËØÅÂπÇÁ≠âÊÄß‰ª•SQL‰∏∫‰æãÔºåÊúâ‰∏ãÈù¢‰∏âÁßçÂú∫ÊôØÔºåÂè™ÊúâÁ¨¨‰∏âÁßçÂú∫ÊôØÈúÄË¶ÅÂºÄÂèë‰∫∫Âëò‰ΩøÁî®ÂÖ∂‰ªñÁ≠ñÁï•‰øùËØÅÂπÇÁ≠âÊÄßÔºö SELECT col1 FROM tab1 WHER col2=2ÔºåÊó†ËÆ∫ÊâßË°åÂ§öÂ∞ëÊ¨°ÈÉΩ‰∏ç‰ºöÊîπÂèòÁä∂ÊÄÅÔºåÊòØÂ§©ÁÑ∂ÁöÑÂπÇÁ≠â„ÄÇ UPDATE tab1 SET col1=1 WHERE col2=2ÔºåÊó†ËÆ∫ÊâßË°åÊàêÂäüÂ§öÂ∞ëÊ¨°Áä∂ÊÄÅÈÉΩÊòØ‰∏ÄËá¥ÁöÑÔºåÂõ†Ê≠§‰πüÊòØÂπÇÁ≠âÊìç‰Ωú„ÄÇ UPDATE tab1 SET col1=col1+1 WHERE col2=2ÔºåÊØèÊ¨°ÊâßË°åÁöÑÁªìÊûúÈÉΩ‰ºöÂèëÁîüÂèòÂåñÔºåËøôÁßç‰∏çÊòØÂπÇÁ≠âÁöÑ„ÄÇ ‰øùËØÅÂπÇÁ≠âÁ≠ñÁï•ÂπÇÁ≠âÈúÄË¶ÅÈÄöËøáÂîØ‰∏ÄÁöÑ‰∏öÂä°ÂçïÂè∑Êù•‰øùËØÅ„ÄÇ‰πüÂ∞±ÊòØËØ¥Áõ∏ÂêåÁöÑ‰∏öÂä°ÂçïÂè∑ÔºåËÆ§‰∏∫ÊòØÂêå‰∏ÄÁ¨î‰∏öÂä°„ÄÇ‰ΩøÁî®Ëøô‰∏™ÂîØ‰∏ÄÁöÑ‰∏öÂä°ÂçïÂè∑Êù•Á°Æ‰øùÔºåÂêéÈù¢Â§öÊ¨°ÁöÑÁõ∏ÂêåÁöÑ‰∏öÂä°ÂçïÂè∑ÁöÑÂ§ÑÁêÜÈÄªËæëÂíåÊâßË°åÊïàÊûúÊòØ‰∏ÄËá¥ÁöÑ„ÄÇ ‰∏ãÈù¢‰ª•ÊîØ‰ªò‰∏∫‰æãÔºåÂú®‰∏çËÄÉËôëÂπ∂ÂèëÁöÑÊÉÖÂÜµ‰∏ãÔºåÂÆûÁé∞ÂπÇÁ≠âÂæàÁÆÄÂçïÔºö‚ë†ÂÖàÊü•ËØ¢‰∏Ä‰∏ãËÆ¢ÂçïÊòØÂê¶Â∑≤ÁªèÊîØ‰ªòËøáÔºå‚ë°Â¶ÇÊûúÂ∑≤ÁªèÊîØ‰ªòËøáÔºåÂàôËøîÂõûÊîØ‰ªòÊàêÂäüÔºõÂ¶ÇÊûúÊ≤°ÊúâÊîØ‰ªòÔºåËøõË°åÊîØ‰ªòÊµÅÁ®ãÔºå‰øÆÊîπËÆ¢ÂçïÁä∂ÊÄÅ‰∏∫‚ÄòÂ∑≤ÊîØ‰ªò‚Äô„ÄÇ Èò≤ÈáçÂ§çÊèê‰∫§Á≠ñÁï•‰∏äËø∞ÁöÑ‰øùËØÅÂπÇÁ≠âÊñπÊ°àÊòØÂàÜÊàê‰∏§Ê≠•ÁöÑÔºåÁ¨¨‚ë°Ê≠•‰æùËµñÁ¨¨‚ë†Ê≠•ÁöÑÊü•ËØ¢ÁªìÊûúÔºåÊó†Ê≥ï‰øùËØÅÂéüÂ≠êÊÄßÁöÑ„ÄÇÂú®È´òÂπ∂Âèë‰∏ãÂ∞±‰ºöÂá∫Áé∞‰∏ãÈù¢ÁöÑÊÉÖÂÜµÔºöÁ¨¨‰∫åÊ¨°ËØ∑Ê±ÇÂú®Á¨¨‰∏ÄÊ¨°ËØ∑Ê±ÇÁ¨¨‚ë°Ê≠•ËÆ¢ÂçïÁä∂ÊÄÅËøòÊ≤°Êúâ‰øÆÊîπ‰∏∫‚ÄòÂ∑≤ÊîØ‰ªòÁä∂ÊÄÅ‚ÄôÁöÑÊÉÖÂÜµ‰∏ãÂà∞Êù•„ÄÇÊó¢ÁÑ∂ÂæóÂá∫‰∫ÜËøô‰∏™ÁªìËÆ∫Ôºå‰Ωô‰∏ãÁöÑÈóÆÈ¢ò‰πüÂ∞±ÂèòÂæóÁÆÄÂçïÔºöÊääÊü•ËØ¢ÂíåÂèòÊõ¥Áä∂ÊÄÅÊìç‰ΩúÂä†ÈîÅÔºåÂ∞ÜÂπ∂Ë°åÊìç‰ΩúÊîπ‰∏∫‰∏≤Ë°åÊìç‰Ωú„ÄÇ ‰πêËßÇÈîÅÂ¶ÇÊûúÂè™ÊòØÊõ¥Êñ∞Â∑≤ÊúâÁöÑÊï∞ÊçÆÔºåÊ≤°ÊúâÂøÖË¶ÅÂØπ‰∏öÂä°ËøõË°åÂä†ÈîÅÔºåËÆæËÆ°Ë°®ÁªìÊûÑÊó∂‰ΩøÁî®‰πêËßÇÈîÅÔºå‰∏ÄËà¨ÈÄöËøáversionÊù•ÂÅö‰πêËßÇÈîÅÔºåËøôÊ†∑Êó¢ËÉΩ‰øùËØÅÊâßË°åÊïàÁéáÔºåÂèàËÉΩ‰øùËØÅÂπÇÁ≠â„ÄÇ‰æãÂ¶ÇÔºö UPDATE tab1 SET col1=1,version=version+1 WHERE version=#version# ‰∏çËøáÔºå‰πêËßÇÈîÅÂ≠òÂú®Â§±ÊïàÁöÑÊÉÖÂÜµÔºåÂ∞±ÊòØÂ∏∏ËØ¥ÁöÑABAÈóÆÈ¢òÔºå‰∏çËøáÂ¶ÇÊûúversionÁâàÊú¨‰∏ÄÁõ¥ÊòØËá™Â¢ûÁöÑÂ∞±‰∏ç‰ºöÂá∫Áé∞ABAÁöÑÊÉÖÂÜµ„ÄÇ Èò≤ÈáçË°®‰ΩøÁî®ËÆ¢ÂçïÂè∑orderNoÂÅö‰∏∫ÂéªÈáçË°®ÁöÑÂîØ‰∏ÄÁ¥¢ÂºïÔºåÊØèÊ¨°ËØ∑Ê±ÇÈÉΩÊ†πÊçÆËÆ¢ÂçïÂè∑ÂêëÂéªÈáçË°®‰∏≠ÊèíÂÖ•‰∏ÄÊù°Êï∞ÊçÆ„ÄÇÁ¨¨‰∏ÄÊ¨°ËØ∑Ê±ÇÊü•ËØ¢ËÆ¢ÂçïÊîØ‰ªòÁä∂ÊÄÅÔºåÂΩìÁÑ∂ËÆ¢ÂçïÊ≤°ÊúâÊîØ‰ªòÔºåËøõË°åÊîØ‰ªòÊìç‰ΩúÔºåÊó†ËÆ∫ÊàêÂäü‰∏éÂê¶ÔºåÊâßË°åÂÆåÂêéÊõ¥Êñ∞ËÆ¢ÂçïÁä∂ÊÄÅ‰∏∫ÊàêÂäüÊàñÂ§±Ë¥•ÔºåÂà†Èô§ÂéªÈáçË°®‰∏≠ÁöÑÊï∞ÊçÆ„ÄÇÂêéÁª≠ÁöÑËÆ¢ÂçïÂõ†‰∏∫Ë°®‰∏≠ÂîØ‰∏ÄÁ¥¢ÂºïËÄåÊèíÂÖ•Â§±Ë¥•ÔºåÂàôËøîÂõûÊìç‰ΩúÂ§±Ë¥•ÔºåÁõ¥Âà∞Á¨¨‰∏ÄÊ¨°ÁöÑËØ∑Ê±ÇÂÆåÊàêÔºàÊàêÂäüÊàñÂ§±Ë¥•Ôºâ„ÄÇÂèØ‰ª•ÁúãÂá∫Èò≤ÈáçË°®‰ΩúÁî®ÊòØÂä†ÈîÅÁöÑÂäüËÉΩ„ÄÇ ÂàÜÂ∏ÉÂºèÈîÅËøôÈáå‰ΩøÁî®ÁöÑÈò≤ÈáçË°®ÂèØ‰ª•‰ΩøÁî®ÂàÜÂ∏ÉÂºèÈîÅ‰ª£ÊõøÔºåÊØîÂ¶ÇRedis„ÄÇËÆ¢ÂçïÂèëËµ∑ÊîØ‰ªòËØ∑Ê±ÇÔºåÊîØ‰ªòÁ≥ªÁªü‰ºöÂéªRedisÁºìÂ≠ò‰∏≠Êü•ËØ¢ÊòØÂê¶Â≠òÂú®ËØ•ËÆ¢ÂçïÂè∑ÁöÑKeyÔºåÂ¶ÇÊûú‰∏çÂ≠òÂú®ÔºåÂàôÂêëRedisÂ¢ûÂä†Key‰∏∫ËÆ¢ÂçïÂè∑„ÄÇÊü•ËØ¢ËÆ¢ÂçïÊîØ‰ªòÂ∑≤ÁªèÊîØ‰ªòÔºåÂ¶ÇÊûúÊ≤°ÊúâÂàôËøõË°åÊîØ‰ªòÔºåÊîØ‰ªòÂÆåÊàêÂêéÂà†Èô§ËØ•ËÆ¢ÂçïÂè∑ÁöÑKey„ÄÇÈÄöËøáRedisÂÅöÂà∞‰∫ÜÂàÜÂ∏ÉÂºèÈîÅÔºåÂè™ÊúâËøôÊ¨°ËÆ¢ÂçïËÆ¢ÂçïÊîØ‰ªòËØ∑Ê±ÇÂÆåÊàêÔºå‰∏ãÊ¨°ËØ∑Ê±ÇÊâçËÉΩËøõÊù•„ÄÇÁõ∏ÊØîÂéªÈáçË°®ÔºåÂ∞ÜÊîæÂπ∂ÂèëÂÅöÂà∞‰∫ÜÁºìÂ≠ò‰∏≠ÔºåËæÉ‰∏∫È´òÊïà„ÄÇÊÄùË∑ØÁõ∏ÂêåÔºåÂêå‰∏ÄÊó∂Èó¥Âè™ËÉΩÂÆåÊàê‰∏ÄÊ¨°ÊîØ‰ªòËØ∑Ê±Ç„ÄÇ token‰ª§ÁâåËøôÁßçÊñπÂºèÂàÜÊàê‰∏§‰∏™Èò∂ÊÆµÔºöÁî≥ËØ∑tokenÈò∂ÊÆµÂíåÊîØ‰ªòÈò∂ÊÆµ„ÄÇ Á¨¨‰∏ÄÈò∂ÊÆµÔºåÂú®ËøõÂÖ•Âà∞Êèê‰∫§ËÆ¢ÂçïÈ°µÈù¢‰πãÂâçÔºåÈúÄË¶ÅËÆ¢ÂçïÁ≥ªÁªüÊ†πÊçÆÁî®Êà∑‰ø°ÊÅØÂêëÊîØ‰ªòÁ≥ªÁªüÂèëËµ∑‰∏ÄÊ¨°Áî≥ËØ∑tokenÁöÑËØ∑Ê±ÇÔºåÊîØ‰ªòÁ≥ªÁªüÂ∞Ütoken‰øùÂ≠òÂà∞RedisÁºìÂ≠ò‰∏≠Ôºå‰∏∫Á¨¨‰∫åÈò∂ÊÆµÊîØ‰ªò‰ΩøÁî®„ÄÇ Á¨¨‰∫åÈò∂ÊÆµÔºåËÆ¢ÂçïÁ≥ªÁªüÊãøÁùÄÁî≥ËØ∑Âà∞ÁöÑtokenÂèëËµ∑ÊîØ‰ªòËØ∑Ê±ÇÔºåÊîØ‰ªòÁ≥ªÁªü‰ºöÊ£ÄÊü•Redis‰∏≠ÊòØÂê¶Â≠òÂú®ËØ•tokenÔºåÂ¶ÇÊûúÂ≠òÂú®ÔºåË°®Á§∫Á¨¨‰∏ÄÊ¨°ÂèëËµ∑ÊîØ‰ªòËØ∑Ê±ÇÔºåÂà†Èô§ÁºìÂ≠ò‰∏≠tokenÂêéÂºÄÂßãÊîØ‰ªòÈÄªËæëÂ§ÑÁêÜÔºõÂ¶ÇÊûúÁºìÂ≠ò‰∏≠‰∏çÂ≠òÂú®ÔºåË°®Á§∫ÈùûÊ≥ïËØ∑Ê±Ç„ÄÇ ÂÆûÈôÖ‰∏äËøôÈáåÁöÑtokenÊòØ‰∏Ä‰∏™‰ø°Áâ©ÔºåÊîØ‰ªòÁ≥ªÁªüÊ†πÊçÆtokenÁ°ÆËÆ§Ôºå‰Ω†ÊòØ‰Ω†Â¶àÁöÑÂ≠©Â≠ê„ÄÇ‰∏çË∂≥ÊòØÈúÄË¶ÅÁ≥ªÁªüÈó¥‰∫§‰∫í‰∏§Ê¨°ÔºåÊµÅÁ®ãËæÉ‰∏äËø∞ÊñπÊ≥ïÂ§çÊùÇ„ÄÇ ÊîØ‰ªòÁºìÂÜ≤Âå∫ÊääËÆ¢ÂçïÁöÑÊîØ‰ªòËØ∑Ê±ÇÈÉΩÂø´ÈÄüÂú∞Êé•‰∏ãÊù•Ôºå‰∏Ä‰∏™Âø´ÈÄüÊé•ÂçïÁöÑÁºìÂÜ≤ÁÆ°ÈÅì„ÄÇÂêéÁª≠‰ΩøÁî®ÂºÇÊ≠•‰ªªÂä°Â§ÑÁêÜÁÆ°ÈÅì‰∏≠ÁöÑÊï∞ÊçÆÔºåËøáÊª§ÊéâÈáçÂ§çÁöÑÂæÖÊîØ‰ªòËÆ¢Âçï„ÄÇ ‰ºòÁÇπÊòØÂêåÊ≠•ËΩ¨ÂºÇÊ≠•ÔºåÈ´òÂêûÂêê„ÄÇ‰∏çË∂≥ÊòØ‰∏çËÉΩÂèäÊó∂Âú∞ËøîÂõûÊîØ‰ªòÁªìÊûúÔºåÈúÄË¶ÅÂêéÁª≠ÁõëÂê¨ÊîØ‰ªòÁªìÊûúÁöÑÂºÇÊ≠•ËøîÂõû„ÄÇ ÂπÇÁ≠âÊÄßÊé•Âè£ÁöÑ‰∏çË∂≥ Â¢ûÂä†‰∫ÜÈ¢ùÂ§ñÊéßÂà∂ÂπÇÁ≠âÁöÑ‰∏öÂä°ÈÄªËæëÔºåÂ§çÊùÇÂåñ‰∫Ü‰∏öÂä°ÂäüËÉΩÔºõ ÊääÂπ∂Ë°åÊâßË°åÁöÑÂäüËÉΩÊîπ‰∏∫‰∏≤Ë°åÊâßË°åÔºåÈôç‰Ωé‰∫ÜÊâßË°åÊïàÁéá„ÄÇ Âõ†Ê≠§Èô§‰∫Ü‰∏öÂä°‰∏äÁöÑÁâπÊÆäË¶ÅÊ±ÇÂ§ñÔºåÂ∞ΩÈáè‰∏çÊèê‰æõÂπÇÁ≠âÁöÑÊé•Âè£„ÄÇ]]></content>
  </entry>
  <entry>
    <title><![CDATA[„ÄêÊ≠ªÁ£ïJavaÂπ∂Âèë„Äë-----Ê∑±ÂÖ•ÂàÜÊûêvolatileÁöÑÂÆûÁé∞ÂéüÁêÜ]]></title>
    <url>%2F2018%2F08%2F13%2Fthread%2F%E6%AD%BB%E7%A3%95Java%E5%B9%B6%E5%8F%91%2F%E6%B7%B1%E5%85%A5%E5%88%86%E6%9E%90volatile%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%2F</url>
    <content type="text"><![CDATA[ÂéüÊñáÂá∫Â§Ñhttp://cmsblogs.com/ „Äéchenssy„Äè ÈÄöËøáÂâçÈù¢‰∏ÄÁ´†Êàë‰ª¨‰∫ÜËß£‰∫ÜsynchronizedÊòØ‰∏Ä‰∏™ÈáçÈáèÁ∫ßÁöÑÈîÅÔºåËôΩÁÑ∂JVMÂØπÂÆÉÂÅö‰∫ÜÂæàÂ§ö‰ºòÂåñÔºåËÄå‰∏ãÈù¢‰ªãÁªçÁöÑvolatileÂàôÊòØËΩªÈáèÁ∫ßÁöÑsynchronized„ÄÇÂ¶ÇÊûú‰∏Ä‰∏™ÂèòÈáè‰ΩøÁî®volatileÔºåÂàôÂÆÉÊØî‰ΩøÁî®synchronizedÁöÑÊàêÊú¨Êõ¥Âä†‰ΩéÔºåÂõ†‰∏∫ÂÆÉ‰∏ç‰ºöÂºïËµ∑Á∫øÁ®ã‰∏ä‰∏ãÊñáÁöÑÂàáÊç¢ÂíåË∞ÉÂ∫¶„ÄÇJavaËØ≠Ë®ÄËßÑËåÉÂØπvolatileÁöÑÂÆö‰πâÂ¶Ç‰∏ãÔºö JavaÁºñÁ®ãËØ≠Ë®ÄÂÖÅËÆ∏Á∫øÁ®ãËÆøÈóÆÂÖ±‰∫´ÂèòÈáèÔºå‰∏∫‰∫ÜÁ°Æ‰øùÂÖ±‰∫´ÂèòÈáèËÉΩË¢´ÂáÜÁ°ÆÂíå‰∏ÄËá¥Âú∞Êõ¥Êñ∞ÔºåÁ∫øÁ®ãÂ∫îËØ•Á°Æ‰øùÈÄöËøáÊéí‰ªñÈîÅÂçïÁã¨Ëé∑ÂæóËøô‰∏™ÂèòÈáè„ÄÇ ‰∏äÈù¢ÊØîËæÉÁªïÂè£ÔºåÈÄö‰øóÁÇπËÆ≤Â∞±ÊòØËØ¥‰∏Ä‰∏™ÂèòÈáèÂ¶ÇÊûúÁî®volatile‰øÆÈ•∞‰∫ÜÔºåÂàôJavaÂèØ‰ª•Á°Æ‰øùÊâÄÊúâÁ∫øÁ®ãÁúãÂà∞Ëøô‰∏™ÂèòÈáèÁöÑÂÄºÊòØ‰∏ÄËá¥ÁöÑÔºåÂ¶ÇÊûúÊüê‰∏™Á∫øÁ®ãÂØπvolatile‰øÆÈ•∞ÁöÑÂÖ±‰∫´ÂèòÈáèËøõË°åÊõ¥Êñ∞ÔºåÈÇ£‰πàÂÖ∂‰ªñÁ∫øÁ®ãÂèØ‰ª•Á´ãÈ©¨ÁúãÂà∞Ëøô‰∏™Êõ¥Êñ∞ÔºåËøôÂ∞±ÊòØÊâÄË∞ìÁöÑÁ∫øÁ®ãÂèØËßÅÊÄß„ÄÇ volatileËôΩÁÑ∂ÁúãËµ∑Êù•ÊØîËæÉÁÆÄÂçïÔºå‰ΩøÁî®Ëµ∑Êù•Êó†ÈùûÂ∞±ÊòØÂú®‰∏Ä‰∏™ÂèòÈáèÂâçÈù¢Âä†‰∏ävolatileÂç≥ÂèØÔºå‰ΩÜÊòØË¶ÅÁî®Â•ΩÂπ∂‰∏çÂÆπÊòìÔºàLZÊâøËÆ§ÊàëËá≥‰ªä‰ªçÁÑ∂‰ΩøÁî®‰∏çÂ•ΩÔºåÂú®‰ΩøÁî®Êó∂‰ªçÁÑ∂ÊòØÊ®°Ê£±‰∏§ÂèØÔºâ„ÄÇ ÂÜÖÂ≠òÊ®°ÂûãÁõ∏ÂÖ≥Ê¶ÇÂøµÁêÜËß£volatileÂÖ∂ÂÆûËøòÊòØÊúâÁÇπÂÑøÈöæÂ∫¶ÁöÑÔºåÂÆÉ‰∏éJavaÁöÑÂÜÖÂ≠òÊ®°ÂûãÊúâÂÖ≥ÔºåÊâÄ‰ª•Âú®ÁêÜËß£volatile‰πãÂâçÊàë‰ª¨ÈúÄË¶ÅÂÖà‰∫ÜËß£ÊúâÂÖ≥JavaÂÜÖÂ≠òÊ®°ÂûãÁöÑÊ¶ÇÂøµÔºåËøôÈáåÂè™ÂÅöÂàùÊ≠•ÁöÑ‰ªãÁªçÔºåÂêéÁª≠LZ‰ºöËØ¶ÁªÜ‰ªãÁªçJavaÂÜÖÂ≠òÊ®°Âûã„ÄÇ Êìç‰ΩúÁ≥ªÁªüËØ≠‰πâËÆ°ÁÆóÊú∫Âú®ËøêË°åÁ®ãÂ∫èÊó∂ÔºåÊØèÊù°Êåá‰ª§ÈÉΩÊòØÂú®CPU‰∏≠ÊâßË°åÁöÑÔºåÂú®ÊâßË°åËøáÁ®ã‰∏≠ÂäøÂøÖ‰ºöÊ∂âÂèäÂà∞Êï∞ÊçÆÁöÑËØªÂÜô„ÄÇÊàë‰ª¨Áü•ÈÅìÁ®ãÂ∫èËøêË°åÁöÑÊï∞ÊçÆÊòØÂ≠òÂÇ®Âú®‰∏ªÂ≠ò‰∏≠ÔºåËøôÊó∂Â∞±‰ºöÊúâ‰∏Ä‰∏™ÈóÆÈ¢òÔºåËØªÂÜô‰∏ªÂ≠ò‰∏≠ÁöÑÊï∞ÊçÆÊ≤°ÊúâCPU‰∏≠ÊâßË°åÊåá‰ª§ÁöÑÈÄüÂ∫¶Âø´ÔºåÂ¶ÇÊûú‰ªª‰ΩïÁöÑ‰∫§‰∫íÈÉΩÈúÄË¶Å‰∏é‰∏ªÂ≠òÊâì‰∫§ÈÅìÂàô‰ºöÂ§ßÂ§ßÂΩ±ÂìçÊïàÁéáÔºåÊâÄ‰ª•Â∞±Êúâ‰∫ÜCPUÈ´òÈÄüÁºìÂ≠ò„ÄÇCPUÈ´òÈÄüÁºìÂ≠ò‰∏∫Êüê‰∏™CPUÁã¨ÊúâÔºåÂè™‰∏éÂú®ËØ•CPUËøêË°åÁöÑÁ∫øÁ®ãÊúâÂÖ≥„ÄÇ Êúâ‰∫ÜCPUÈ´òÈÄüÁºìÂ≠òËôΩÁÑ∂Ëß£ÂÜ≥‰∫ÜÊïàÁéáÈóÆÈ¢òÔºå‰ΩÜÊòØÂÆÉ‰ºöÂ∏¶Êù•‰∏Ä‰∏™Êñ∞ÁöÑÈóÆÈ¢òÔºöÊï∞ÊçÆ‰∏ÄËá¥ÊÄß„ÄÇÂú®Á®ãÂ∫èËøêË°å‰∏≠Ôºå‰ºöÂ∞ÜËøêË°åÊâÄÈúÄË¶ÅÁöÑÊï∞ÊçÆÂ§çÂà∂‰∏Ä‰ªΩÂà∞CPUÈ´òÈÄüÁºìÂ≠ò‰∏≠ÔºåÂú®ËøõË°åËøêÁÆóÊó∂CPU‰∏çÂÜç‰πü‰∏ªÂ≠òÊâì‰∫§ÈÅìÔºåËÄåÊòØÁõ¥Êé•‰ªéÈ´òÈÄüÁºìÂ≠ò‰∏≠ËØªÂÜôÊï∞ÊçÆÔºåÂè™ÊúâÂΩìËøêË°åÁªìÊùüÂêéÊâç‰ºöÂ∞ÜÊï∞ÊçÆÂà∑Êñ∞Âà∞‰∏ªÂ≠ò‰∏≠„ÄÇ‰∏æ‰∏Ä‰∏™ÁÆÄÂçïÁöÑ‰æãÂ≠êÔºö 1i++ ÂΩìÁ∫øÁ®ãËøêË°åËøôÊÆµ‰ª£Á†ÅÊó∂ÔºåÈ¶ñÂÖà‰ºö‰ªé‰∏ªÂ≠ò‰∏≠ËØªÂèñi( i = 1)ÔºåÁÑ∂ÂêéÂ§çÂà∂‰∏Ä‰ªΩÂà∞CPUÈ´òÈÄüÁºìÂ≠ò‰∏≠ÔºåÁÑ∂ÂêéCPUÊâßË°å + 1 Ôºà2ÔºâÁöÑÊìç‰ΩúÔºåÁÑ∂ÂêéÂ∞ÜÊï∞ÊçÆÔºà2ÔºâÂÜôÂÖ•Âà∞ÂëäËØâÁºìÂ≠ò‰∏≠ÔºåÊúÄÂêéÂà∑Êñ∞Âà∞‰∏ªÂ≠ò‰∏≠„ÄÇÂÖ∂ÂÆûËøôÊ†∑ÂÅöÂú®ÂçïÁ∫øÁ®ã‰∏≠ÊòØÊ≤°ÊúâÈóÆÈ¢òÁöÑÔºåÊúâÈóÆÈ¢òÁöÑÊòØÂú®Â§öÁ∫øÁ®ã‰∏≠„ÄÇÂ¶Ç‰∏ãÔºö ÂÅáÂ¶ÇÊúâ‰∏§‰∏™Á∫øÁ®ãA„ÄÅBÈÉΩÊâßË°åËøô‰∏™Êìç‰ΩúÔºài++ÔºâÔºåÊåâÁÖßÊàë‰ª¨Ê≠£Â∏∏ÁöÑÈÄªËæëÊÄùÁª¥‰∏ªÂ≠ò‰∏≠ÁöÑiÂÄºÂ∫îËØ•=3Ôºå‰ΩÜ‰∫ãÂÆûÊòØËøôÊ†∑‰πàÔºüÂàÜÊûêÂ¶Ç‰∏ãÔºö ‰∏§‰∏™Á∫øÁ®ã‰ªé‰∏ªÂ≠ò‰∏≠ËØªÂèñiÁöÑÂÄºÔºà1ÔºâÂà∞ÂêÑËá™ÁöÑÈ´òÈÄüÁºìÂ≠ò‰∏≠ÔºåÁÑ∂ÂêéÁ∫øÁ®ãAÊâßË°å+1Êìç‰ΩúÂπ∂Â∞ÜÁªìÊûúÂÜôÂÖ•È´òÈÄüÁºìÂ≠ò‰∏≠ÔºåÊúÄÂêéÂÜôÂÖ•‰∏ªÂ≠ò‰∏≠ÔºåÊ≠§Êó∂‰∏ªÂ≠òi==2,Á∫øÁ®ãBÂÅöÂêåÊ†∑ÁöÑÊìç‰ΩúÔºå‰∏ªÂ≠ò‰∏≠ÁöÑi‰ªçÁÑ∂=2„ÄÇÊâÄ‰ª•ÊúÄÁªàÁªìÊûú‰∏∫2Âπ∂‰∏çÊòØ3„ÄÇËøôÁßçÁé∞Ë±°Â∞±ÊòØÁºìÂ≠ò‰∏ÄËá¥ÊÄßÈóÆÈ¢ò„ÄÇ Ëß£ÂÜ≥ÁºìÂ≠ò‰∏ÄËá¥ÊÄßÊñπÊ°àÊúâ‰∏§ÁßçÔºö ÈÄöËøáÂú®ÊÄªÁ∫øÂä†LOCK#ÈîÅÁöÑÊñπÂºè ÈÄöËøáÁºìÂ≠ò‰∏ÄËá¥ÊÄßÂçèËÆÆ ‰ΩÜÊòØÊñπÊ°à1Â≠òÂú®‰∏Ä‰∏™ÈóÆÈ¢òÔºåÂÆÉÊòØÈááÁî®‰∏ÄÁßçÁã¨Âç†ÁöÑÊñπÂºèÊù•ÂÆûÁé∞ÁöÑÔºåÂç≥ÊÄªÁ∫øÂä†LOCK#ÈîÅÁöÑËØùÔºåÂè™ËÉΩÊúâ‰∏Ä‰∏™CPUËÉΩÂ§üËøêË°åÔºåÂÖ∂‰ªñCPUÈÉΩÂæóÈòªÂ°ûÔºåÊïàÁéáËæÉ‰∏∫‰Ωé‰∏ã„ÄÇ Á¨¨‰∫åÁßçÊñπÊ°àÔºåÁºìÂ≠ò‰∏ÄËá¥ÊÄßÂçèËÆÆÔºàMESIÂçèËÆÆÔºâÂÆÉÁ°Æ‰øùÊØè‰∏™ÁºìÂ≠ò‰∏≠‰ΩøÁî®ÁöÑÂÖ±‰∫´ÂèòÈáèÁöÑÂâØÊú¨ÊòØ‰∏ÄËá¥ÁöÑ„ÄÇÂÖ∂Ê†∏ÂøÉÊÄùÊÉ≥Â¶Ç‰∏ãÔºöÂΩìÊüê‰∏™CPUÂú®ÂÜôÊï∞ÊçÆÊó∂ÔºåÂ¶ÇÊûúÂèëÁé∞Êìç‰ΩúÁöÑÂèòÈáèÊòØÂÖ±‰∫´ÂèòÈáèÔºåÂàô‰ºöÈÄöÁü•ÂÖ∂‰ªñCPUÂëäÁü•ËØ•ÂèòÈáèÁöÑÁºìÂ≠òË°åÊòØÊó†ÊïàÁöÑÔºåÂõ†Ê≠§ÂÖ∂‰ªñCPUÂú®ËØªÂèñËØ•ÂèòÈáèÊó∂ÔºåÂèëÁé∞ÂÖ∂Êó†Êïà‰ºöÈáçÊñ∞‰ªé‰∏ªÂ≠ò‰∏≠Âä†ËΩΩÊï∞ÊçÆ„ÄÇ JavaÂÜÖÂ≠òÊ®°Âûã‰∏äÈù¢‰ªéÊìç‰ΩúÁ≥ªÁªüÂ±ÇÊ¨°ÈòêËø∞‰∫ÜÂ¶Ç‰Ωï‰øùËØÅÊï∞ÊçÆ‰∏ÄËá¥ÊÄßÔºå‰∏ãÈù¢Êàë‰ª¨Êù•Áúã‰∏Ä‰∏ãJavaÂÜÖÂ≠òÊ®°ÂûãÔºåÁ®çÂæÆÁ†îÁ©∂‰∏Ä‰∏ãJavaÂÜÖÂ≠òÊ®°Âûã‰∏∫Êàë‰ª¨Êèê‰æõ‰∫ÜÂì™‰∫õ‰øùËØÅ‰ª•ÂèäÂú®Java‰∏≠Êèê‰æõ‰∫ÜÂì™‰∫õÊñπÊ≥ïÂíåÊú∫Âà∂Êù•ËÆ©Êàë‰ª¨Âú®ËøõË°åÂ§öÁ∫øÁ®ãÁºñÁ®ãÊó∂ËÉΩÂ§ü‰øùËØÅÁ®ãÂ∫èÊâßË°åÁöÑÊ≠£Á°ÆÊÄß„ÄÇ Âú®Âπ∂ÂèëÁºñÁ®ã‰∏≠Êàë‰ª¨‰∏ÄËà¨ÈÉΩ‰ºöÈÅáÂà∞Ëøô‰∏â‰∏™Âü∫Êú¨Ê¶ÇÂøµÔºöÂéüÂ≠êÊÄß„ÄÅÂèØËßÅÊÄß„ÄÅÊúâÂ∫èÊÄß„ÄÇÊàë‰ª¨Á®çÂæÆÁúã‰∏ãvolatile ÂéüÂ≠êÊÄß ÂéüÂ≠êÊÄßÔºöÂç≥‰∏Ä‰∏™Êìç‰ΩúÊàñËÄÖÂ§ö‰∏™Êìç‰Ωú Ë¶Å‰πàÂÖ®ÈÉ®ÊâßË°åÂπ∂‰∏îÊâßË°åÁöÑËøáÁ®ã‰∏ç‰ºöË¢´‰ªª‰ΩïÂõ†Á¥†ÊâìÊñ≠ÔºåË¶Å‰πàÂ∞±ÈÉΩ‰∏çÊâßË°å„ÄÇ ÂéüÂ≠êÊÄßÂ∞±ÂÉèÊï∞ÊçÆÂ∫ìÈáåÈù¢ÁöÑ‰∫ãÂä°‰∏ÄÊ†∑Ôºå‰ªñ‰ª¨ÊòØ‰∏Ä‰∏™Âõ¢ÈòüÔºåÂêåÁîüÂÖ±Ê≠ª„ÄÇÂÖ∂ÂÆûÁêÜËß£ÂéüÂ≠êÊÄßÈùûÂ∏∏ÁÆÄÂçïÔºåÊàë‰ª¨Áúã‰∏ãÈù¢‰∏Ä‰∏™ÁÆÄÂçïÁöÑ‰æãÂ≠êÂç≥ÂèØÔºö 1234i = 0; //---1j = i ; //---2i++; //---3i = j + 1; //---4 ‰∏äÈù¢Âõõ‰∏™Êìç‰ΩúÔºåÊúâÂì™‰∏™Âá†‰∏™ÊòØÂéüÂ≠êÊìç‰ΩúÔºåÈÇ£Âá†‰∏™‰∏çÊòØÔºüÂ¶ÇÊûú‰∏çÊòØÂæàÁêÜËß£ÔºåÂèØËÉΩ‰ºöËÆ§‰∏∫ÈÉΩÊòØÂéüÂ≠êÊÄßÊìç‰ΩúÔºåÂÖ∂ÂÆûÂè™Êúâ1ÊâçÊòØÂéüÂ≠êÊìç‰ΩúÔºåÂÖ∂‰ΩôÂùá‰∏çÊòØ„ÄÇ 1‚ÄîÂú®Java‰∏≠ÔºåÂØπÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÁöÑÂèòÈáèÂíåËµãÂÄºÊìç‰ΩúÈÉΩÊòØÂéüÂ≠êÊÄßÊìç‰ΩúÔºõ 2‚ÄîÂåÖÂê´‰∫Ü‰∏§‰∏™Êìç‰ΩúÔºöËØªÂèñiÔºåÂ∞ÜiÂÄºËµãÂÄºÁªôj 3‚ÄîÂåÖÂê´‰∫Ü‰∏â‰∏™Êìç‰ΩúÔºöËØªÂèñiÂÄº„ÄÅi + 1 „ÄÅÂ∞Ü+1ÁªìÊûúËµãÂÄºÁªôiÔºõ 4‚ÄîÂêå‰∏â‰∏ÄÊ†∑ Âú®ÂçïÁ∫øÁ®ãÁéØÂ¢É‰∏ãÊàë‰ª¨ÂèØ‰ª•ËÆ§‰∏∫Êï¥‰∏™Ê≠•È™§ÈÉΩÊòØÂéüÂ≠êÊÄßÊìç‰ΩúÔºå‰ΩÜÊòØÂú®Â§öÁ∫øÁ®ãÁéØÂ¢É‰∏ãÂàô‰∏çÂêåÔºåJavaÂè™‰øùËØÅ‰∫ÜÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÁöÑÂèòÈáèÂíåËµãÂÄºÊìç‰ΩúÊâçÊòØÂéüÂ≠êÊÄßÁöÑÔºàÊ≥®ÔºöÂú®32‰ΩçÁöÑJDKÁéØÂ¢É‰∏ãÔºåÂØπ64‰ΩçÊï∞ÊçÆÁöÑËØªÂèñ‰∏çÊòØÂéüÂ≠êÊÄßÊìç‰Ωú*ÔºåÂ¶Çlong„ÄÅdoubleÔºâ„ÄÇË¶ÅÊÉ≥Âú®Â§öÁ∫øÁ®ãÁéØÂ¢É‰∏ã‰øùËØÅÂéüÂ≠êÊÄßÔºåÂàôÂèØ‰ª•ÈÄöËøáÈîÅ„ÄÅsynchronizedÊù•Á°Æ‰øù„ÄÇ volatileÊòØÊó†Ê≥ï‰øùËØÅÂ§çÂêàÊìç‰ΩúÁöÑÂéüÂ≠êÊÄß ÂèØËßÅÊÄß ÂèØËßÅÊÄßÊòØÊåáÂΩìÂ§ö‰∏™Á∫øÁ®ãËÆøÈóÆÂêå‰∏Ä‰∏™ÂèòÈáèÊó∂Ôºå‰∏Ä‰∏™Á∫øÁ®ã‰øÆÊîπ‰∫ÜËøô‰∏™ÂèòÈáèÁöÑÂÄºÔºåÂÖ∂‰ªñÁ∫øÁ®ãËÉΩÂ§üÁ´ãÂç≥ÁúãÂæóÂà∞‰øÆÊîπÁöÑÂÄº„ÄÇ Âú®‰∏äÈù¢Â∑≤ÁªèÂàÜÊûê‰∫ÜÔºåÂú®Â§öÁ∫øÁ®ãÁéØÂ¢É‰∏ãÔºå‰∏Ä‰∏™Á∫øÁ®ãÂØπÂÖ±‰∫´ÂèòÈáèÁöÑÊìç‰ΩúÂØπÂÖ∂‰ªñÁ∫øÁ®ãÊòØ‰∏çÂèØËßÅÁöÑ„ÄÇ JavaÊèê‰æõ‰∫ÜvolatileÊù•‰øùËØÅÂèØËßÅÊÄß„ÄÇ ÂΩì‰∏Ä‰∏™ÂèòÈáèË¢´volatile‰øÆÈ•∞ÂêéÔºåË°®Á§∫ÁùÄÁ∫øÁ®ãÊú¨Âú∞ÂÜÖÂ≠òÊó†ÊïàÔºåÂΩì‰∏Ä‰∏™Á∫øÁ®ã‰øÆÊîπÂÖ±‰∫´ÂèòÈáèÂêé‰ªñ‰ºöÁ´ãÂç≥Ë¢´Êõ¥Êñ∞Âà∞‰∏ªÂÜÖÂ≠ò‰∏≠ÔºåÂΩìÂÖ∂‰ªñÁ∫øÁ®ãËØªÂèñÂÖ±‰∫´ÂèòÈáèÊó∂ÔºåÂÆÉ‰ºöÁõ¥Êé•‰ªé‰∏ªÂÜÖÂ≠ò‰∏≠ËØªÂèñ„ÄÇ ÂΩìÁÑ∂ÔºåsynchronizeÂíåÈîÅÈÉΩÂèØ‰ª•‰øùËØÅÂèØËßÅÊÄß„ÄÇ ÊúâÂ∫èÊÄß ÊúâÂ∫èÊÄßÔºöÂç≥Á®ãÂ∫èÊâßË°åÁöÑÈ°∫Â∫èÊåâÁÖß‰ª£Á†ÅÁöÑÂÖàÂêéÈ°∫Â∫èÊâßË°å„ÄÇ Âú®JavaÂÜÖÂ≠òÊ®°Âûã‰∏≠Ôºå‰∏∫‰∫ÜÊïàÁéáÊòØÂÖÅËÆ∏ÁºñËØëÂô®ÂíåÂ§ÑÁêÜÂô®ÂØπÊåá‰ª§ËøõË°åÈáçÊéíÂ∫èÔºåÂΩìÁÑ∂ÈáçÊéíÂ∫èÂÆÉ‰∏ç‰ºöÂΩ±ÂìçÂçïÁ∫øÁ®ãÁöÑËøêË°åÁªìÊûúÔºå‰ΩÜÊòØÂØπÂ§öÁ∫øÁ®ã‰ºöÊúâÂΩ±Âìç„ÄÇ JavaÊèê‰æõvolatileÊù•‰øùËØÅ‰∏ÄÂÆöÁöÑÊúâÂ∫èÊÄß„ÄÇÊúÄËëóÂêçÁöÑ‰æãÂ≠êÂ∞±ÊòØÂçï‰æãÊ®°ÂºèÈáåÈù¢ÁöÑDCLÔºàÂèåÈáçÊ£ÄÊü•ÈîÅÔºâ„ÄÇËøôÈáåLZÂ∞±‰∏çÂÜçÈòêËø∞‰∫Ü„ÄÇ ÂâñÊûêvolatileÂéüÁêÜJMMÊØîËæÉÂ∫ûÂ§ßÔºå‰∏çÊòØ‰∏äÈù¢‰∏ÄÁÇπÁÇπÂ∞±ËÉΩÂ§üÈòêËø∞ÁöÑ„ÄÇ‰∏äÈù¢ÁÆÄÂçïÂú∞‰ªãÁªçÈÉΩÊòØ‰∏∫‰∫ÜvolatileÂÅöÈì∫Âû´ÁöÑ„ÄÇ volatileÂèØ‰ª•‰øùËØÅÁ∫øÁ®ãÂèØËßÅÊÄß‰∏îÊèê‰æõ‰∫Ü‰∏ÄÂÆöÁöÑÊúâÂ∫èÊÄßÔºå‰ΩÜÊòØÊó†Ê≥ï‰øùËØÅÂéüÂ≠êÊÄß„ÄÇÂú®JVMÂ∫ïÂ±ÇvolatileÊòØÈááÁî®‚ÄúÂÜÖÂ≠òÂ±èÈöú‚ÄùÊù•ÂÆûÁé∞ÁöÑ„ÄÇ ‰∏äÈù¢ÈÇ£ÊÆµËØùÔºåÊúâ‰∏§Â±ÇËØ≠‰πâ ‰øùËØÅÂèØËßÅÊÄß„ÄÅ‰∏ç‰øùËØÅÂéüÂ≠êÊÄß Á¶ÅÊ≠¢Êåá‰ª§ÈáçÊéíÂ∫è Á¨¨‰∏ÄÂ±ÇËØ≠‰πâÂ∞±‰∏çÂÅö‰ªãÁªç‰∫ÜÔºå‰∏ãÈù¢ÈáçÁÇπ‰ªãÁªçÊåá‰ª§ÈáçÊéíÂ∫è„ÄÇ Âú®ÊâßË°åÁ®ãÂ∫èÊó∂‰∏∫‰∫ÜÊèêÈ´òÊÄßËÉΩÔºåÁºñËØëÂô®ÂíåÂ§ÑÁêÜÂô®ÈÄöÂ∏∏‰ºöÂØπÊåá‰ª§ÂÅöÈáçÊéíÂ∫èÔºö ÁºñËØëÂô®ÈáçÊéíÂ∫è„ÄÇÁºñËØëÂô®Âú®‰∏çÊîπÂèòÂçïÁ∫øÁ®ãÁ®ãÂ∫èËØ≠‰πâÁöÑÂâçÊèê‰∏ãÔºåÂèØ‰ª•ÈáçÊñ∞ÂÆâÊéíËØ≠Âè•ÁöÑÊâßË°åÈ°∫Â∫èÔºõ Â§ÑÁêÜÂô®ÈáçÊéíÂ∫è„ÄÇÂ¶ÇÊûú‰∏çÂ≠òÂú®Êï∞ÊçÆ‰æùËµñÊÄßÔºåÂ§ÑÁêÜÂô®ÂèØ‰ª•ÊîπÂèòËØ≠Âè•ÂØπÂ∫îÊú∫Âô®Êåá‰ª§ÁöÑÊâßË°åÈ°∫Â∫èÔºõ Êåá‰ª§ÈáçÊéíÂ∫èÂØπÂçïÁ∫øÁ®ãÊ≤°Êúâ‰ªÄ‰πàÂΩ±ÂìçÔºå‰ªñ‰∏ç‰ºöÂΩ±ÂìçÁ®ãÂ∫èÁöÑËøêË°åÁªìÊûúÔºå‰ΩÜÊòØ‰ºöÂΩ±ÂìçÂ§öÁ∫øÁ®ãÁöÑÊ≠£Á°ÆÊÄß„ÄÇÊó¢ÁÑ∂Êåá‰ª§ÈáçÊéíÂ∫è‰ºöÂΩ±ÂìçÂà∞Â§öÁ∫øÁ®ãÊâßË°åÁöÑÊ≠£Á°ÆÊÄßÔºåÈÇ£‰πàÊàë‰ª¨Â∞±ÈúÄË¶ÅÁ¶ÅÊ≠¢ÈáçÊéíÂ∫è„ÄÇÈÇ£‰πàJVMÊòØÂ¶Ç‰ΩïÁ¶ÅÊ≠¢ÈáçÊéíÂ∫èÁöÑÂë¢ÔºüËøô‰∏™ÈóÆÈ¢òÁ®çÂêéÂõûÁ≠îÔºåÊàë‰ª¨ÂÖàÁúãÂè¶‰∏Ä‰∏™ÂéüÂàôhappens-beforeÔºåhappen-beforeÂéüÂàô‰øùËØÅ‰∫ÜÁ®ãÂ∫èÁöÑ‚ÄúÊúâÂ∫èÊÄß‚ÄùÔºåÂÆÉËßÑÂÆöÂ¶ÇÊûú‰∏§‰∏™Êìç‰ΩúÁöÑÊâßË°åÈ°∫Â∫èÊó†Ê≥ï‰ªéhappens-beforeÂéüÂàô‰∏≠Êé®Âà∞Âá∫Êù•ÔºåÈÇ£‰πà‰ªñ‰ª¨Â∞±‰∏çËÉΩ‰øùËØÅÊúâÂ∫èÊÄßÔºåÂèØ‰ª•ÈöèÊÑèËøõË°åÈáçÊéíÂ∫è„ÄÇÂÖ∂ÂÆö‰πâÂ¶Ç‰∏ãÔºö Âêå‰∏Ä‰∏™Á∫øÁ®ã‰∏≠ÁöÑÔºåÂâçÈù¢ÁöÑÊìç‰Ωú happen-before ÂêéÁª≠ÁöÑÊìç‰Ωú„ÄÇÔºàÂç≥ÂçïÁ∫øÁ®ãÂÜÖÊåâ‰ª£Á†ÅÈ°∫Â∫èÊâßË°å„ÄÇ‰ΩÜÊòØÔºåÂú®‰∏çÂΩ±ÂìçÂú®ÂçïÁ∫øÁ®ãÁéØÂ¢ÉÊâßË°åÁªìÊûúÁöÑÂâçÊèê‰∏ãÔºåÁºñËØëÂô®ÂíåÂ§ÑÁêÜÂô®ÂèØ‰ª•ËøõË°åÈáçÊéíÂ∫èÔºåËøôÊòØÂêàÊ≥ïÁöÑ„ÄÇÊç¢Âè•ËØùËØ¥ÔºåËøô‰∏ÄÊòØËßÑÂàôÊó†Ê≥ï‰øùËØÅÁºñËØëÈáçÊéíÂíåÊåá‰ª§ÈáçÊéíÔºâ„ÄÇ ÁõëËßÜÂô®‰∏äÁöÑËß£ÈîÅÊìç‰Ωú happen-before ÂÖ∂ÂêéÁª≠ÁöÑÂä†ÈîÅÊìç‰Ωú„ÄÇÔºàSynchronized ËßÑÂàôÔºâ ÂØπvolatileÂèòÈáèÁöÑÂÜôÊìç‰Ωú happen-before ÂêéÁª≠ÁöÑËØªÊìç‰Ωú„ÄÇÔºàvolatile ËßÑÂàôÔºâ Á∫øÁ®ãÁöÑstart() ÊñπÊ≥ï happen-before ËØ•Á∫øÁ®ãÊâÄÊúâÁöÑÂêéÁª≠Êìç‰Ωú„ÄÇÔºàÁ∫øÁ®ãÂêØÂä®ËßÑÂàôÔºâ Á∫øÁ®ãÊâÄÊúâÁöÑÊìç‰Ωú happen-before ÂÖ∂‰ªñÁ∫øÁ®ãÂú®ËØ•Á∫øÁ®ã‰∏äË∞ÉÁî® join ËøîÂõûÊàêÂäüÂêéÁöÑÊìç‰Ωú„ÄÇ Â¶ÇÊûú a happen-before bÔºåb happen-before cÔºåÂàôa happen-before cÔºà‰º†ÈÄíÊÄßÔºâ„ÄÇ Êàë‰ª¨ÁùÄÈáçÁúãÁ¨¨‰∏âÁÇπvolatileËßÑÂàôÔºöÂØπvolatileÂèòÈáèÁöÑÂÜôÊìç‰Ωú happen-before ÂêéÁª≠ÁöÑËØªÊìç‰Ωú„ÄÇ‰∏∫‰∫ÜÂÆûÁé∞volatileÂÜÖÂ≠òËØ≠‰πâÔºåJMM‰ºöÈáçÊéíÂ∫èÔºåÂÖ∂ËßÑÂàôÂ¶Ç‰∏ãÔºö ÂØπhappen-beforeÂéüÂàôÊúâ‰∫ÜÁ®çÂæÆÁöÑ‰∫ÜËß£ÔºåÊàë‰ª¨ÂÜçÊù•ÂõûÁ≠îËøô‰∏™ÈóÆÈ¢òJVMÊòØÂ¶Ç‰ΩïÁ¶ÅÊ≠¢ÈáçÊéíÂ∫èÁöÑÔºü ËßÇÂØüÂä†ÂÖ•volatileÂÖ≥ÈîÆÂ≠óÂíåÊ≤°ÊúâÂä†ÂÖ•volatileÂÖ≥ÈîÆÂ≠óÊó∂ÊâÄÁîüÊàêÁöÑÊ±áÁºñ‰ª£Á†ÅÂèëÁé∞ÔºåÂä†ÂÖ•volatileÂÖ≥ÈîÆÂ≠óÊó∂Ôºå‰ºöÂ§öÂá∫‰∏Ä‰∏™lockÂâçÁºÄÊåá‰ª§„ÄÇlockÂâçÁºÄÊåá‰ª§ÂÖ∂ÂÆûÂ∞±Áõ∏ÂΩì‰∫é‰∏Ä‰∏™ÂÜÖÂ≠òÂ±èÈöú„ÄÇÂÜÖÂ≠òÂ±èÈöúÊòØ‰∏ÄÁªÑÂ§ÑÁêÜÊåá‰ª§ÔºåÁî®Êù•ÂÆûÁé∞ÂØπÂÜÖÂ≠òÊìç‰ΩúÁöÑÈ°∫Â∫èÈôêÂà∂„ÄÇvolatileÁöÑÂ∫ïÂ±ÇÂ∞±ÊòØÈÄöËøáÂÜÖÂ≠òÂ±èÈöúÊù•ÂÆûÁé∞ÁöÑ„ÄÇ‰∏ãÂõæÊòØÂÆåÊàê‰∏äËø∞ËßÑÂàôÊâÄÈúÄË¶ÅÁöÑÂÜÖÂ≠òÂ±èÈöúÔºö volatileÊöÇ‰∏î‰∏ãÂàÜÊûêÂà∞ËøôÈáåÔºåJMM‰ΩìÁ≥ªËæÉ‰∏∫Â∫ûÂ§ßÔºå‰∏çÊòØ‰∏âË®Ä‰∏§ËØ≠ËÉΩÂ§üËØ¥Ê∏ÖÊ•öÁöÑÔºåÂêéÈù¢‰ºöÁªìÂêàJMMÂÜç‰∏ÄÊ¨°ÂØπvolatileÊ∑±ÂÖ•ÂàÜÊûê„ÄÇ ÊÄªÁªìvolatileÁúãËµ∑Êù•ÁÆÄÂçïÔºå‰ΩÜÊòØË¶ÅÊÉ≥ÁêÜËß£ÂÆÉËøòÊòØÊØîËæÉÈöæÁöÑÔºåËøôÈáåÂè™ÊòØÂØπÂÖ∂ËøõË°åÂü∫Êú¨ÁöÑ‰∫ÜËß£„ÄÇvolatileÁõ∏ÂØπ‰∫ésynchronizedÁ®çÂæÆËΩªÈáè‰∫õÔºåÂú®Êüê‰∫õÂú∫ÂêàÂÆÉÂèØ‰ª•Êõø‰ª£synchronizedÔºå‰ΩÜÊòØÂèà‰∏çËÉΩÂÆåÂÖ®Âèñ‰ª£synchronizedÔºåÂè™ÊúâÂú®Êüê‰∫õÂú∫ÂêàÊâçËÉΩÂ§ü‰ΩøÁî®volatile„ÄÇ‰ΩøÁî®ÂÆÉÂøÖÈ°ªÊª°Ë∂≥Â¶Ç‰∏ã‰∏§‰∏™Êù°‰ª∂Ôºö ÂØπÂèòÈáèÁöÑÂÜôÊìç‰Ωú‰∏ç‰æùËµñÂΩìÂâçÂÄºÔºõ ËØ•ÂèòÈáèÊ≤°ÊúâÂåÖÂê´Âú®ÂÖ∑ÊúâÂÖ∂‰ªñÂèòÈáèÁöÑ‰∏çÂèòÂºè‰∏≠„ÄÇ volatileÁªèÂ∏∏Áî®‰∫é‰∏§‰∏™‰∏§‰∏™Âú∫ÊôØÔºöÁä∂ÊÄÅÊ†áËÆ∞‰∏§„ÄÅdouble check ÂèÇËÄÉËµÑÊñô Âë®ÂøóÊòéÔºö„ÄäÊ∑±ÂÖ•ÁêÜËß£JavaËôöÊãüÊú∫„Äã ÊñπËÖæÈ£ûÔºö„ÄäJavaÂπ∂ÂèëÁºñÁ®ãÁöÑËâ∫ÊúØ„Äã JavaÂπ∂ÂèëÁºñÁ®ãÔºövolatileÂÖ≥ÈîÆÂ≠óËß£Êûê Java Âπ∂ÂèëÁºñÁ®ãÔºövolatileÁöÑ‰ΩøÁî®ÂèäÂÖ∂ÂéüÁêÜ END ÂéüÊñáÂèëÂ∏É‰∫éÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ - JavaÊäÄÊúØÈ©øÁ´ôÔºàchenssy89Ôºâ ÂéüÊñáÂèëË°®Êó∂Èó¥Ôºö2018-05-05 Êú¨ÊñáÂèÇ‰∏éËÖæËÆØ‰∫ëËá™Â™í‰ΩìÂàÜ‰∫´ËÆ°ÂàíÔºåÊ¨¢ËøéÊ≠£Âú®ÈòÖËØªÁöÑ‰Ω†‰πüÂä†ÂÖ•Ôºå‰∏ÄËµ∑ÂàÜ‰∫´„ÄÇ]]></content>
      <tags>
        <tag>Á∫øÁ®ã</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>%2F2018%2F08%2F13%2Fthread%2F%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E9%80%89%E6%8B%A9RabbitMQ%20%EF%BC%8CRabbitMQ%E7%AE%80%E4%BB%8B%EF%BC%8C%E5%90%84%E7%A7%8DMQ%E9%80%89%E5%9E%8B%E5%AF%B9%E6%AF%94%2F</url>
    <content type="text"><![CDATA[Êàë‰∏∫‰ªÄ‰πàË¶ÅÈÄâÊã©RabbitMQ ÔºåRabbitMQÁÆÄ‰ªãÔºåÂêÑÁßçMQÈÄâÂûãÂØπÊØîÂâçË®ÄÔºö ‚Äã MQ ÊòØ‰ªÄ‰πàÔºüÈòüÂàóÊòØ‰ªÄ‰πàÔºåMQ Êàë‰ª¨ÂèØ‰ª•ÁêÜËß£‰∏∫Ê∂àÊÅØÈòüÂàóÔºåÈòüÂàóÊàë‰ª¨ÂèØ‰ª•ÁêÜËß£‰∏∫ÁÆ°ÈÅì„ÄÇ‰ª•ÁÆ°ÈÅìÁöÑÊñπÂºèÂÅöÊ∂àÊÅØ‰º†ÈÄí„ÄÇ Âú∫ÊôØÔºö ‚Äã 1.ÂÖ∂ÂÆûÊàë‰ª¨Âú®Âèå11ÁöÑÊó∂ÂÄôÔºåÂΩìÊàë‰ª¨ÂáåÊô®Â§ßÈáèÁöÑÁßíÊùÄÂíåÊä¢Ë¥≠ÂïÜÂìÅÔºåÁÑ∂ÂêéÂéªÁªìÁÆóÁöÑÊó∂ÂÄôÔºåÂ∞±‰ºöÂèëÁé∞ÔºåÁïåÈù¢‰ºöÊèêÈÜíÊàë‰ª¨ÔºåËÆ©Êàë‰ª¨Á®çÁ≠âÔºå‰ª•Âèä‰∏Ä‰∫õÂèãÂ•ΩÁöÑÂõæÁâáÊñáÂ≠óÊèêÈÜí„ÄÇËÄå‰∏çÊòØÂÉèÂâçÂá†Âπ¥ÁöÑÊó∂‰ª£ÔºåÂä®‰∏çÂä®Â∞±È°µÈù¢Âç°Ê≠ªÔºåÊä•ÈîôÁ≠âÊù•ÂëàÁé∞ÁªôÁî®Êà∑„ÄÇ ‚Äã Âú®Ëøô‰∏öÂä°Âú∫ÊôØ‰∏≠ÔºåÊàë‰ª¨Â∞±ÂèØ‰ª•ÈááÁî®ÈòüÂàóÁöÑÊú∫Âà∂Êù•Â§ÑÁêÜÔºåÂõ†‰∏∫ÂêåÊó∂ÁªìÁÆóÂ∞±Âè™ËÉΩËææÂà∞Ëøô‰πàÂ§ö„ÄÇ ‚Äã 2.Âú®Êàë‰ª¨Âπ≥Êó∂ÁöÑË∂ÖÂ∏Ç‰∏≠Ë¥≠Áâ©‰πüÊòØ‰∏ÄÊ†∑ÔºåÂΩìÊàë‰ª¨Âú®ÁªìÁÆóÁöÑÊó∂ÂÄôÔºåÂπ∂‰∏ç‰ºö‰∏ÄÁ™ùËúÇ‰∏ÄÊ†∑Ê∂åÂÖ•Êî∂Èì∂Âè∞ÔºåËÄåÊòØÊéíÈòüÁªìÁÆó„ÄÇËøô‰πüÊòØÈòüÂàóÊú∫Âà∂„ÄÇ ÂØπÔºåÂ∞±ÊòØÊéíÈòü„ÄÇ‰∏Ä‰∏™Êé•ÁùÄ‰∏Ä‰∏™ÁöÑÂ§ÑÁêÜÔºå‰∏çËÉΩÊèíÈòü„ÄÇ RabbitMQÁÆÄ‰ªãAMQPÔºåÂç≥Advanced Message Queuing ProtocolÔºåÈ´òÁ∫ßÊ∂àÊÅØÈòüÂàóÂçèËÆÆÔºåÊòØÂ∫îÁî®Â±ÇÂçèËÆÆÁöÑ‰∏Ä‰∏™ÂºÄÊîæÊ†áÂáÜÔºå‰∏∫Èù¢ÂêëÊ∂àÊÅØÁöÑ‰∏≠Èó¥‰ª∂ËÆæËÆ°„ÄÇÊ∂àÊÅØ‰∏≠Èó¥‰ª∂‰∏ªË¶ÅÁî®‰∫éÁªÑ‰ª∂‰πãÈó¥ÁöÑËß£ËÄ¶ÔºåÊ∂àÊÅØÁöÑÂèëÈÄÅËÄÖÊó†ÈúÄÁü•ÈÅìÊ∂àÊÅØ‰ΩøÁî®ËÄÖÁöÑÂ≠òÂú®ÔºåÂèç‰πã‰∫¶ÁÑ∂„ÄÇ AMQPÁöÑ‰∏ªË¶ÅÁâπÂæÅÊòØÈù¢ÂêëÊ∂àÊÅØ„ÄÅÈòüÂàó„ÄÅË∑ØÁî±ÔºàÂåÖÊã¨ÁÇπÂØπÁÇπÂíåÂèëÂ∏É/ËÆ¢ÈòÖÔºâ„ÄÅÂèØÈù†ÊÄß„ÄÅÂÆâÂÖ®„ÄÇ RabbitMQÊòØ‰∏Ä‰∏™ÂºÄÊ∫êÁöÑAMQPÂÆûÁé∞ÔºåÊúçÂä°Âô®Á´ØÁî®ErlangËØ≠Ë®ÄÁºñÂÜôÔºåÊîØÊåÅÂ§öÁßçÂÆ¢Êà∑Á´ØÔºåÂ¶ÇÔºöPython„ÄÅRuby„ÄÅ.NET„ÄÅJava„ÄÅJMS„ÄÅC„ÄÅPHP„ÄÅActionScript„ÄÅXMPP„ÄÅSTOMPÁ≠âÔºåÊîØÊåÅAJAX„ÄÇÁî®‰∫éÂú®ÂàÜÂ∏ÉÂºèÁ≥ªÁªü‰∏≠Â≠òÂÇ®ËΩ¨ÂèëÊ∂àÊÅØÔºåÂú®ÊòìÁî®ÊÄß„ÄÅÊâ©Â±ïÊÄß„ÄÅÈ´òÂèØÁî®ÊÄßÁ≠âÊñπÈù¢Ë°®Áé∞‰∏ç‰øó„ÄÇ ‰∏ãÈù¢Â∞ÜÈáçÁÇπ‰ªãÁªçRabbitMQ‰∏≠ÁöÑ‰∏Ä‰∫õÂü∫Á°ÄÊ¶ÇÂøµÔºå‰∫ÜËß£‰∫ÜËøô‰∫õÊ¶ÇÂøµÔºåÊòØ‰ΩøÁî®Â•ΩRabbitMQÁöÑÂü∫Á°Ä„ÄÇ ConnectionFactory„ÄÅConnection„ÄÅChannelConnectionFactory„ÄÅConnection„ÄÅChannelÈÉΩÊòØRabbitMQÂØπÂ§ñÊèê‰æõÁöÑAPI‰∏≠ÊúÄÂü∫Êú¨ÁöÑÂØπË±°„ÄÇConnectionÊòØRabbitMQÁöÑsocketÈìæÊé•ÔºåÂÆÉÂ∞ÅË£Ö‰∫ÜsocketÂçèËÆÆÁõ∏ÂÖ≥ÈÉ®ÂàÜÈÄªËæë„ÄÇConnectionFactory‰∏∫ConnectionÁöÑÂà∂ÈÄ†Â∑•ÂéÇ„ÄÇ ChannelÊòØÊàë‰ª¨‰∏éRabbitMQÊâì‰∫§ÈÅìÁöÑÊúÄÈáçË¶ÅÁöÑ‰∏Ä‰∏™Êé•Âè£ÔºåÊàë‰ª¨Â§ßÈÉ®ÂàÜÁöÑ‰∏öÂä°Êìç‰ΩúÊòØÂú®ChannelËøô‰∏™Êé•Âè£‰∏≠ÂÆåÊàêÁöÑÔºåÂåÖÊã¨ÂÆö‰πâQueue„ÄÅÂÆö‰πâExchange„ÄÅÁªëÂÆöQueue‰∏éExchange„ÄÅÂèëÂ∏ÉÊ∂àÊÅØÁ≠â„ÄÇ QueueQueueÔºàÈòüÂàóÔºâÊòØRabbitMQÁöÑÂÜÖÈÉ®ÂØπË±°ÔºåÁî®‰∫éÂ≠òÂÇ®Ê∂àÊÅØÔºåÁî®‰∏ãÂõæË°®Á§∫„ÄÇ RabbitMQ‰∏≠ÁöÑÊ∂àÊÅØÈÉΩÂè™ËÉΩÂ≠òÂÇ®Âú®Queue‰∏≠ÔºåÁîü‰∫ßËÄÖÔºà‰∏ãÂõæ‰∏≠ÁöÑPÔºâÁîü‰∫ßÊ∂àÊÅØÂπ∂ÊúÄÁªàÊäïÈÄíÂà∞Queue‰∏≠ÔºåÊ∂àË¥πËÄÖÔºà‰∏ãÂõæ‰∏≠ÁöÑCÔºâÂèØ‰ª•‰ªéQueue‰∏≠Ëé∑ÂèñÊ∂àÊÅØÂπ∂Ê∂àË¥π„ÄÇ Â§ö‰∏™Ê∂àË¥πËÄÖÂèØ‰ª•ËÆ¢ÈòÖÂêå‰∏Ä‰∏™QueueÔºåËøôÊó∂Queue‰∏≠ÁöÑÊ∂àÊÅØ‰ºöË¢´Âπ≥ÂùáÂàÜÊëäÁªôÂ§ö‰∏™Ê∂àË¥πËÄÖËøõË°åÂ§ÑÁêÜÔºåËÄå‰∏çÊòØÊØè‰∏™Ê∂àË¥πËÄÖÈÉΩÊî∂Âà∞ÊâÄÊúâÁöÑÊ∂àÊÅØÂπ∂Â§ÑÁêÜ„ÄÇ Message acknowledgmentÂú®ÂÆûÈôÖÂ∫îÁî®‰∏≠ÔºåÂèØËÉΩ‰ºöÂèëÁîüÊ∂àË¥πËÄÖÊî∂Âà∞Queue‰∏≠ÁöÑÊ∂àÊÅØÔºå‰ΩÜÊ≤°ÊúâÂ§ÑÁêÜÂÆåÊàêÂ∞±ÂÆïÊú∫ÔºàÊàñÂá∫Áé∞ÂÖ∂‰ªñÊÑèÂ§ñÔºâÁöÑÊÉÖÂÜµÔºåËøôÁßçÊÉÖÂÜµ‰∏ãÂ∞±ÂèØËÉΩ‰ºöÂØºËá¥Ê∂àÊÅØ‰∏¢Â§±„ÄÇ‰∏∫‰∫ÜÈÅøÂÖçËøôÁßçÊÉÖÂÜµÂèëÁîüÔºåÊàë‰ª¨ÂèØ‰ª•Ë¶ÅÊ±ÇÊ∂àË¥πËÄÖÂú®Ê∂àË¥πÂÆåÊ∂àÊÅØÂêéÂèëÈÄÅ‰∏Ä‰∏™ÂõûÊâßÁªôRabbitMQÔºåRabbitMQÊî∂Âà∞Ê∂àÊÅØÂõûÊâßÔºàMessage acknowledgmentÔºâÂêéÊâçÂ∞ÜËØ•Ê∂àÊÅØ‰ªéQueue‰∏≠ÁßªÈô§ÔºõÂ¶ÇÊûúRabbitMQÊ≤°ÊúâÊî∂Âà∞ÂõûÊâßÂπ∂Ê£ÄÊµãÂà∞Ê∂àË¥πËÄÖÁöÑRabbitMQËøûÊé•Êñ≠ÂºÄÔºåÂàôRabbitMQ‰ºöÂ∞ÜËØ•Ê∂àÊÅØÂèëÈÄÅÁªôÂÖ∂‰ªñÊ∂àË¥πËÄÖÔºàÂ¶ÇÊûúÂ≠òÂú®Â§ö‰∏™Ê∂àË¥πËÄÖÔºâËøõË°åÂ§ÑÁêÜ„ÄÇËøôÈáå‰∏çÂ≠òÂú®timeoutÊ¶ÇÂøµÔºå‰∏Ä‰∏™Ê∂àË¥πËÄÖÂ§ÑÁêÜÊ∂àÊÅØÊó∂Èó¥ÂÜçÈïø‰πü‰∏ç‰ºöÂØºËá¥ËØ•Ê∂àÊÅØË¢´ÂèëÈÄÅÁªôÂÖ∂‰ªñÊ∂àË¥πËÄÖÔºåÈô§ÈùûÂÆÉÁöÑRabbitMQËøûÊé•Êñ≠ÂºÄ„ÄÇ ËøôÈáå‰ºö‰∫ßÁîüÂè¶Â§ñ‰∏Ä‰∏™ÈóÆÈ¢òÔºåÂ¶ÇÊûúÊàë‰ª¨ÁöÑÂºÄÂèë‰∫∫ÂëòÂú®Â§ÑÁêÜÂÆå‰∏öÂä°ÈÄªËæëÂêéÔºåÂøòËÆ∞ÂèëÈÄÅÂõûÊâßÁªôRabbitMQÔºåËøôÂ∞Ü‰ºöÂØºËá¥‰∏•ÈáçÁöÑbug‚Äî‚ÄîQueue‰∏≠Â†ÜÁßØÁöÑÊ∂àÊÅØ‰ºöË∂äÊù•Ë∂äÂ§öÔºõÊ∂àË¥πËÄÖÈáçÂêØÂêé‰ºöÈáçÂ§çÊ∂àË¥πËøô‰∫õÊ∂àÊÅØÂπ∂ÈáçÂ§çÊâßË°å‰∏öÂä°ÈÄªËæë‚Ä¶ Âè¶Â§ñpub messageÊòØÊ≤°ÊúâackÁöÑ„ÄÇ Message durabilityÂ¶ÇÊûúÊàë‰ª¨Â∏åÊúõÂç≥‰ΩøÂú®RabbitMQÊúçÂä°ÈáçÂêØÁöÑÊÉÖÂÜµ‰∏ãÔºå‰πü‰∏ç‰ºö‰∏¢Â§±Ê∂àÊÅØÔºåÊàë‰ª¨ÂèØ‰ª•Â∞ÜQueue‰∏éMessageÈÉΩËÆæÁΩÆ‰∏∫ÂèØÊåÅ‰πÖÂåñÁöÑÔºàdurableÔºâÔºåËøôÊ†∑ÂèØ‰ª•‰øùËØÅÁªùÂ§ßÈÉ®ÂàÜÊÉÖÂÜµ‰∏ãÊàë‰ª¨ÁöÑRabbitMQÊ∂àÊÅØ‰∏ç‰ºö‰∏¢Â§±„ÄÇ‰ΩÜ‰æùÁÑ∂Ëß£ÂÜ≥‰∏ç‰∫ÜÂ∞èÊ¶ÇÁéá‰∏¢Â§±‰∫ã‰ª∂ÁöÑÂèëÁîüÔºàÊØîÂ¶ÇRabbitMQÊúçÂä°Âô®Â∑≤ÁªèÊé•Êî∂Âà∞Áîü‰∫ßËÄÖÁöÑÊ∂àÊÅØÔºå‰ΩÜËøòÊ≤°Êù•ÂæóÂèäÊåÅ‰πÖÂåñËØ•Ê∂àÊÅØÊó∂RabbitMQÊúçÂä°Âô®Â∞±Êñ≠Áîµ‰∫ÜÔºâÔºåÂ¶ÇÊûúÊàë‰ª¨ÈúÄË¶ÅÂØπËøôÁßçÂ∞èÊ¶ÇÁéá‰∫ã‰ª∂‰πüË¶ÅÁÆ°ÁêÜËµ∑Êù•ÔºåÈÇ£‰πàÊàë‰ª¨Ë¶ÅÁî®Âà∞‰∫ãÂä°„ÄÇÁî±‰∫éËøôÈáå‰ªÖ‰∏∫RabbitMQÁöÑÁÆÄÂçï‰ªãÁªçÔºåÊâÄ‰ª•ËøôÈáåÂ∞Ü‰∏çËÆ≤Ëß£RabbitMQÁõ∏ÂÖ≥ÁöÑ‰∫ãÂä°„ÄÇ Prefetch countÂâçÈù¢Êàë‰ª¨ËÆ≤Âà∞Â¶ÇÊûúÊúâÂ§ö‰∏™Ê∂àË¥πËÄÖÂêåÊó∂ËÆ¢ÈòÖÂêå‰∏Ä‰∏™Queue‰∏≠ÁöÑÊ∂àÊÅØÔºåQueue‰∏≠ÁöÑÊ∂àÊÅØ‰ºöË¢´Âπ≥ÊëäÁªôÂ§ö‰∏™Ê∂àË¥πËÄÖ„ÄÇËøôÊó∂Â¶ÇÊûúÊØè‰∏™Ê∂àÊÅØÁöÑÂ§ÑÁêÜÊó∂Èó¥‰∏çÂêåÔºåÂ∞±ÊúâÂèØËÉΩ‰ºöÂØºËá¥Êüê‰∫õÊ∂àË¥πËÄÖ‰∏ÄÁõ¥Âú®ÂøôÔºåËÄåÂè¶Â§ñ‰∏Ä‰∫õÊ∂àË¥πËÄÖÂæàÂø´Â∞±Â§ÑÁêÜÂÆåÊâãÂ§¥Â∑•‰ΩúÂπ∂‰∏ÄÁõ¥Á©∫Èó≤ÁöÑÊÉÖÂÜµ„ÄÇÊàë‰ª¨ÂèØ‰ª•ÈÄöËøáËÆæÁΩÆprefetchCountÊù•ÈôêÂà∂QueueÊØèÊ¨°ÂèëÈÄÅÁªôÊØè‰∏™Ê∂àË¥πËÄÖÁöÑÊ∂àÊÅØÊï∞ÔºåÊØîÂ¶ÇÊàë‰ª¨ËÆæÁΩÆprefetchCount=1ÔºåÂàôQueueÊØèÊ¨°ÁªôÊØè‰∏™Ê∂àË¥πËÄÖÂèëÈÄÅ‰∏ÄÊù°Ê∂àÊÅØÔºõÊ∂àË¥πËÄÖÂ§ÑÁêÜÂÆåËøôÊù°Ê∂àÊÅØÂêéQueue‰ºöÂÜçÁªôËØ•Ê∂àË¥πËÄÖÂèëÈÄÅ‰∏ÄÊù°Ê∂àÊÅØ„ÄÇ ExchangeÂú®‰∏ä‰∏ÄËäÇÊàë‰ª¨ÁúãÂà∞Áîü‰∫ßËÄÖÂ∞ÜÊ∂àÊÅØÊäïÈÄíÂà∞Queue‰∏≠ÔºåÂÆûÈôÖ‰∏äËøôÂú®RabbitMQ‰∏≠ËøôÁßç‰∫ãÊÉÖÊ∞∏ËøúÈÉΩ‰∏ç‰ºöÂèëÁîü„ÄÇÂÆûÈôÖÁöÑÊÉÖÂÜµÊòØÔºåÁîü‰∫ßËÄÖÂ∞ÜÊ∂àÊÅØÂèëÈÄÅÂà∞ExchangeÔºà‰∫§Êç¢Âô®Ôºå‰∏ãÂõæ‰∏≠ÁöÑXÔºâÔºåÁî±ExchangeÂ∞ÜÊ∂àÊÅØË∑ØÁî±Âà∞‰∏Ä‰∏™ÊàñÂ§ö‰∏™Queue‰∏≠ÔºàÊàñËÄÖ‰∏¢ÂºÉÔºâ„ÄÇ ExchangeÊòØÊåâÁÖß‰ªÄ‰πàÈÄªËæëÂ∞ÜÊ∂àÊÅØË∑ØÁî±Âà∞QueueÁöÑÔºüËøô‰∏™Â∞ÜÂú®Binding‰∏ÄËäÇ‰ªãÁªç„ÄÇ RabbitMQ‰∏≠ÁöÑExchangeÊúâÂõõÁßçÁ±ªÂûãÔºå‰∏çÂêåÁöÑÁ±ªÂûãÊúâÁùÄ‰∏çÂêåÁöÑË∑ØÁî±Á≠ñÁï•ÔºåËøôÂ∞ÜÂú®Exchange Types‰∏ÄËäÇ‰ªãÁªç„ÄÇ routing keyÁîü‰∫ßËÄÖÂú®Â∞ÜÊ∂àÊÅØÂèëÈÄÅÁªôExchangeÁöÑÊó∂ÂÄôÔºå‰∏ÄËà¨‰ºöÊåáÂÆö‰∏Ä‰∏™routing keyÔºåÊù•ÊåáÂÆöËøô‰∏™Ê∂àÊÅØÁöÑË∑ØÁî±ËßÑÂàôÔºåËÄåËøô‰∏™routing keyÈúÄË¶Å‰∏éExchange TypeÂèäbinding keyËÅîÂêà‰ΩøÁî®ÊâçËÉΩÊúÄÁªàÁîüÊïà„ÄÇ Âú®Exchange Type‰∏ébinding keyÂõ∫ÂÆöÁöÑÊÉÖÂÜµ‰∏ãÔºàÂú®Ê≠£Â∏∏‰ΩøÁî®Êó∂‰∏ÄËà¨Ëøô‰∫õÂÜÖÂÆπÈÉΩÊòØÂõ∫ÂÆöÈÖçÁΩÆÂ•ΩÁöÑÔºâÔºåÊàë‰ª¨ÁöÑÁîü‰∫ßËÄÖÂ∞±ÂèØ‰ª•Âú®ÂèëÈÄÅÊ∂àÊÅØÁªôExchangeÊó∂ÔºåÈÄöËøáÊåáÂÆörouting keyÊù•ÂÜ≥ÂÆöÊ∂àÊÅØÊµÅÂêëÂì™Èáå„ÄÇ RabbitMQ‰∏∫routing keyËÆæÂÆöÁöÑÈïøÂ∫¶ÈôêÂà∂‰∏∫255 bytes„ÄÇ BindingRabbitMQ‰∏≠ÈÄöËøáBindingÂ∞ÜExchange‰∏éQueueÂÖ≥ËÅîËµ∑Êù•ÔºåËøôÊ†∑RabbitMQÂ∞±Áü•ÈÅìÂ¶Ç‰ΩïÊ≠£Á°ÆÂú∞Â∞ÜÊ∂àÊÅØË∑ØÁî±Âà∞ÊåáÂÆöÁöÑQueue‰∫Ü„ÄÇ Binding keyÂú®ÁªëÂÆöÔºàBindingÔºâExchange‰∏éQueueÁöÑÂêåÊó∂Ôºå‰∏ÄËà¨‰ºöÊåáÂÆö‰∏Ä‰∏™binding keyÔºõÊ∂àË¥πËÄÖÂ∞ÜÊ∂àÊÅØÂèëÈÄÅÁªôExchangeÊó∂Ôºå‰∏ÄËà¨‰ºöÊåáÂÆö‰∏Ä‰∏™routing keyÔºõÂΩìbinding key‰∏érouting keyÁõ∏ÂåπÈÖçÊó∂ÔºåÊ∂àÊÅØÂ∞Ü‰ºöË¢´Ë∑ØÁî±Âà∞ÂØπÂ∫îÁöÑQueue‰∏≠„ÄÇËøô‰∏™Â∞ÜÂú®Exchange TypesÁ´†ËäÇ‰ºöÂàó‰∏æÂÆûÈôÖÁöÑ‰æãÂ≠êÂä†‰ª•ËØ¥Êòé„ÄÇ Âú®ÁªëÂÆöÂ§ö‰∏™QueueÂà∞Âêå‰∏Ä‰∏™ExchangeÁöÑÊó∂ÂÄôÔºåËøô‰∫õBindingÂÖÅËÆ∏‰ΩøÁî®Áõ∏ÂêåÁöÑbinding key„ÄÇ binding key Âπ∂‰∏çÊòØÂú®ÊâÄÊúâÊÉÖÂÜµ‰∏ãÈÉΩÁîüÊïàÔºåÂÆÉ‰æùËµñ‰∫éExchange TypeÔºåÊØîÂ¶ÇfanoutÁ±ªÂûãÁöÑExchangeÂ∞±‰ºöÊó†ËßÜbinding keyÔºåËÄåÊòØÂ∞ÜÊ∂àÊÅØË∑ØÁî±Âà∞ÊâÄÊúâÁªëÂÆöÂà∞ËØ•ExchangeÁöÑQueue„ÄÇ Exchange TypesRabbitMQÂ∏∏Áî®ÁöÑExchange TypeÊúâfanout„ÄÅdirect„ÄÅtopic„ÄÅheadersËøôÂõõÁßçÔºàAMQPËßÑËåÉÈáåËøòÊèêÂà∞‰∏§ÁßçExchange TypeÔºåÂàÜÂà´‰∏∫system‰∏éËá™ÂÆö‰πâÔºåËøôÈáå‰∏ç‰∫à‰ª•ÊèèËø∞ÔºâÔºå‰∏ãÈù¢ÂàÜÂà´ËøõË°å‰ªãÁªç„ÄÇ fanoutfanoutÁ±ªÂûãÁöÑExchangeË∑ØÁî±ËßÑÂàôÈùûÂ∏∏ÁÆÄÂçïÔºåÂÆÉ‰ºöÊääÊâÄÊúâÂèëÈÄÅÂà∞ËØ•ExchangeÁöÑÊ∂àÊÅØË∑ØÁî±Âà∞ÊâÄÊúâ‰∏éÂÆÉÁªëÂÆöÁöÑQueue‰∏≠„ÄÇ ‰∏äÂõæ‰∏≠ÔºåÁîü‰∫ßËÄÖÔºàPÔºâÂèëÈÄÅÂà∞ExchangeÔºàXÔºâÁöÑÊâÄÊúâÊ∂àÊÅØÈÉΩ‰ºöË∑ØÁî±Âà∞Âõæ‰∏≠ÁöÑ‰∏§‰∏™QueueÔºåÂπ∂ÊúÄÁªàË¢´‰∏§‰∏™Ê∂àË¥πËÄÖÔºàC1‰∏éC2ÔºâÊ∂àË¥π„ÄÇ directdirectÁ±ªÂûãÁöÑExchangeË∑ØÁî±ËßÑÂàô‰πüÂæàÁÆÄÂçïÔºåÂÆÉ‰ºöÊääÊ∂àÊÅØË∑ØÁî±Âà∞ÈÇ£‰∫õbinding key‰∏érouting keyÂÆåÂÖ®ÂåπÈÖçÁöÑQueue‰∏≠„ÄÇ ‰ª•‰∏äÂõæÁöÑÈÖçÁΩÆ‰∏∫‰æãÔºåÊàë‰ª¨‰ª•routingKey=‚Äùerror‚ÄùÂèëÈÄÅÊ∂àÊÅØÂà∞ExchangeÔºåÂàôÊ∂àÊÅØ‰ºöË∑ØÁî±Âà∞Queue1Ôºàamqp.gen-S9b‚Ä¶ÔºåËøôÊòØÁî±RabbitMQËá™Âä®ÁîüÊàêÁöÑQueueÂêçÁß∞ÔºâÂíåQueue2Ôºàamqp.gen-Agl‚Ä¶ÔºâÔºõÂ¶ÇÊûúÊàë‰ª¨‰ª•routingKey=‚Äùinfo‚ÄùÊàñroutingKey=‚Äùwarning‚ÄùÊù•ÂèëÈÄÅÊ∂àÊÅØÔºåÂàôÊ∂àÊÅØÂè™‰ºöË∑ØÁî±Âà∞Queue2„ÄÇÂ¶ÇÊûúÊàë‰ª¨‰ª•ÂÖ∂‰ªñroutingKeyÂèëÈÄÅÊ∂àÊÅØÔºåÂàôÊ∂àÊÅØ‰∏ç‰ºöË∑ØÁî±Âà∞Ëøô‰∏§‰∏™Queue‰∏≠„ÄÇ topicÂâçÈù¢ËÆ≤Âà∞directÁ±ªÂûãÁöÑExchangeË∑ØÁî±ËßÑÂàôÊòØÂÆåÂÖ®ÂåπÈÖçbinding key‰∏érouting keyÔºå‰ΩÜËøôÁßç‰∏•Ê†ºÁöÑÂåπÈÖçÊñπÂºèÂú®ÂæàÂ§öÊÉÖÂÜµ‰∏ã‰∏çËÉΩÊª°Ë∂≥ÂÆûÈôÖ‰∏öÂä°ÈúÄÊ±Ç„ÄÇtopicÁ±ªÂûãÁöÑExchangeÂú®ÂåπÈÖçËßÑÂàô‰∏äËøõË°å‰∫ÜÊâ©Â±ïÔºåÂÆÉ‰∏édirectÁ±ªÂûãÁöÑExchageÁõ∏‰ººÔºå‰πüÊòØÂ∞ÜÊ∂àÊÅØË∑ØÁî±Âà∞binding key‰∏érouting keyÁõ∏ÂåπÈÖçÁöÑQueue‰∏≠Ôºå‰ΩÜËøôÈáåÁöÑÂåπÈÖçËßÑÂàôÊúâ‰∫õ‰∏çÂêåÔºåÂÆÉÁ∫¶ÂÆöÔºö routing key‰∏∫‰∏Ä‰∏™Âè•ÁÇπÂè∑‚Äú. ‚ÄùÂàÜÈöîÁöÑÂ≠óÁ¨¶‰∏≤ÔºàÊàë‰ª¨Â∞ÜË¢´Âè•ÁÇπÂè∑‚Äú. ‚ÄùÂàÜÈöîÂºÄÁöÑÊØè‰∏ÄÊÆµÁã¨Á´ãÁöÑÂ≠óÁ¨¶‰∏≤Áß∞‰∏∫‰∏Ä‰∏™ÂçïËØçÔºâÔºåÂ¶Ç‚Äústock.usd.nyse‚Äù„ÄÅ‚Äúnyse.vmw‚Äù„ÄÅ‚Äúquick.orange.rabbit‚Äù binding key‰∏érouting key‰∏ÄÊ†∑‰πüÊòØÂè•ÁÇπÂè∑‚Äú. ‚ÄùÂàÜÈöîÁöÑÂ≠óÁ¨¶‰∏≤ binding key‰∏≠ÂèØ‰ª•Â≠òÂú®‰∏§ÁßçÁâπÊÆäÂ≠óÁ¨¶‚Äú‚Äù‰∏é‚Äú#‚ÄùÔºåÁî®‰∫éÂÅöÊ®°Á≥äÂåπÈÖçÔºåÂÖ∂‰∏≠‚Äú‚ÄùÁî®‰∫éÂåπÈÖç‰∏Ä‰∏™ÂçïËØçÔºå‚Äú#‚ÄùÁî®‰∫éÂåπÈÖçÂ§ö‰∏™ÂçïËØçÔºàÂèØ‰ª•ÊòØÈõ∂‰∏™Ôºâ ‰ª•‰∏äÂõæ‰∏≠ÁöÑÈÖçÁΩÆ‰∏∫‰æãÔºåroutingKey=‚Äùquick.orange.rabbit‚ÄùÁöÑÊ∂àÊÅØ‰ºöÂêåÊó∂Ë∑ØÁî±Âà∞Q1‰∏éQ2ÔºåroutingKey=‚Äùlazy.orange.fox‚ÄùÁöÑÊ∂àÊÅØ‰ºöË∑ØÁî±Âà∞Q1‰∏éQ2ÔºåroutingKey=‚Äùlazy.brown.fox‚ÄùÁöÑÊ∂àÊÅØ‰ºöË∑ØÁî±Âà∞Q2ÔºåroutingKey=‚Äùlazy.pink.rabbit‚ÄùÁöÑÊ∂àÊÅØ‰ºöË∑ØÁî±Âà∞Q2ÔºàÂè™‰ºöÊäïÈÄíÁªôQ2‰∏ÄÊ¨°ÔºåËôΩÁÑ∂Ëøô‰∏™routingKey‰∏éQ2ÁöÑ‰∏§‰∏™bindingKeyÈÉΩÂåπÈÖçÔºâÔºõroutingKey=‚Äùquick.brown.fox‚Äù„ÄÅroutingKey=‚Äùorange‚Äù„ÄÅroutingKey=‚Äùquick.orange.male.rabbit‚ÄùÁöÑÊ∂àÊÅØÂ∞Ü‰ºöË¢´‰∏¢ÂºÉÔºåÂõ†‰∏∫ÂÆÉ‰ª¨Ê≤°ÊúâÂåπÈÖç‰ªª‰ΩïbindingKey„ÄÇ headersheadersÁ±ªÂûãÁöÑExchange‰∏ç‰æùËµñ‰∫érouting key‰∏ébinding keyÁöÑÂåπÈÖçËßÑÂàôÊù•Ë∑ØÁî±Ê∂àÊÅØÔºåËÄåÊòØÊ†πÊçÆÂèëÈÄÅÁöÑÊ∂àÊÅØÂÜÖÂÆπ‰∏≠ÁöÑheadersÂ±ûÊÄßËøõË°åÂåπÈÖç„ÄÇ Âú®ÁªëÂÆöQueue‰∏éExchangeÊó∂ÊåáÂÆö‰∏ÄÁªÑÈîÆÂÄºÂØπÔºõÂΩìÊ∂àÊÅØÂèëÈÄÅÂà∞ExchangeÊó∂ÔºåRabbitMQ‰ºöÂèñÂà∞ËØ•Ê∂àÊÅØÁöÑheadersÔºà‰πüÊòØ‰∏Ä‰∏™ÈîÆÂÄºÂØπÁöÑÂΩ¢ÂºèÔºâÔºåÂØπÊØîÂÖ∂‰∏≠ÁöÑÈîÆÂÄºÂØπÊòØÂê¶ÂÆåÂÖ®ÂåπÈÖçQueue‰∏éExchangeÁªëÂÆöÊó∂ÊåáÂÆöÁöÑÈîÆÂÄºÂØπÔºõÂ¶ÇÊûúÂÆåÂÖ®ÂåπÈÖçÂàôÊ∂àÊÅØ‰ºöË∑ØÁî±Âà∞ËØ•QueueÔºåÂê¶Âàô‰∏ç‰ºöË∑ØÁî±Âà∞ËØ•Queue„ÄÇ ËØ•Á±ªÂûãÁöÑExchangeÊ≤°ÊúâÁî®Âà∞ËøáÔºà‰∏çËøá‰πüÂ∫îËØ•ÂæàÊúâÁî®Ê≠¶‰πãÂú∞ÔºâÔºåÊâÄ‰ª•‰∏çÂÅö‰ªãÁªç„ÄÇ RPCMQÊú¨Ë∫´ÊòØÂü∫‰∫éÂºÇÊ≠•ÁöÑÊ∂àÊÅØÂ§ÑÁêÜÔºåÂâçÈù¢ÁöÑÁ§∫‰æã‰∏≠ÊâÄÊúâÁöÑÁîü‰∫ßËÄÖÔºàPÔºâÂ∞ÜÊ∂àÊÅØÂèëÈÄÅÂà∞RabbitMQÂêé‰∏ç‰ºöÁü•ÈÅìÊ∂àË¥πËÄÖÔºàCÔºâÂ§ÑÁêÜÊàêÂäüÊàñËÄÖÂ§±Ë¥•ÔºàÁîöËá≥ËøûÊúâÊ≤°ÊúâÊ∂àË¥πËÄÖÊù•Â§ÑÁêÜËøôÊù°Ê∂àÊÅØÈÉΩ‰∏çÁü•ÈÅìÔºâ„ÄÇ ‰ΩÜÂÆûÈôÖÁöÑÂ∫îÁî®Âú∫ÊôØ‰∏≠ÔºåÊàë‰ª¨ÂæàÂèØËÉΩÈúÄË¶Å‰∏Ä‰∫õÂêåÊ≠•Â§ÑÁêÜÔºåÈúÄË¶ÅÂêåÊ≠•Á≠âÂæÖÊúçÂä°Á´ØÂ∞ÜÊàëÁöÑÊ∂àÊÅØÂ§ÑÁêÜÂÆåÊàêÂêéÂÜçËøõË°å‰∏ã‰∏ÄÊ≠•Â§ÑÁêÜ„ÄÇËøôÁõ∏ÂΩì‰∫éRPCÔºàRemote Procedure CallÔºåËøúÁ®ãËøáÁ®ãË∞ÉÁî®Ôºâ„ÄÇÂú®RabbitMQ‰∏≠‰πüÊîØÊåÅRPC„ÄÇ RabbitMQ ‰∏≠ÂÆûÁé∞RPC ÁöÑÊú∫Âà∂ÊòØÔºö ÂÆ¢Êà∑Á´ØÂèëÈÄÅËØ∑Ê±ÇÔºàÊ∂àÊÅØÔºâÊó∂ÔºåÂú®Ê∂àÊÅØÁöÑÂ±ûÊÄßÔºàMessageProperties ÔºåÂú®AMQP ÂçèËÆÆ‰∏≠ÂÆö‰πâ‰∫Ü14‰∏≠properties ÔºåËøô‰∫õÂ±ûÊÄß‰ºöÈöèÁùÄÊ∂àÊÅØ‰∏ÄËµ∑ÂèëÈÄÅÔºâ‰∏≠ËÆæÁΩÆ‰∏§‰∏™ÂÄºreplyTo Ôºà‰∏Ä‰∏™Queue ÂêçÁß∞ÔºåÁî®‰∫éÂëäËØâÊúçÂä°Âô®Â§ÑÁêÜÂÆåÊàêÂêéÂ∞ÜÈÄöÁü•ÊàëÁöÑÊ∂àÊÅØÂèëÈÄÅÂà∞Ëøô‰∏™Queue ‰∏≠ÔºâÂíåcorrelationId ÔºàÊ≠§Ê¨°ËØ∑Ê±ÇÁöÑÊ†áËØÜÂè∑ÔºåÊúçÂä°Âô®Â§ÑÁêÜÂÆåÊàêÂêéÈúÄË¶ÅÂ∞ÜÊ≠§Â±ûÊÄßËøîËøòÔºåÂÆ¢Êà∑Á´ØÂ∞ÜÊ†πÊçÆËøô‰∏™id‰∫ÜËß£Âì™Êù°ËØ∑Ê±ÇË¢´ÊàêÂäüÊâßË°å‰∫ÜÊàñÊâßË°åÂ§±Ë¥•Ôºâ ÊúçÂä°Âô®Á´ØÊî∂Âà∞Ê∂àÊÅØÂπ∂Â§ÑÁêÜ ÊúçÂä°Âô®Á´ØÂ§ÑÁêÜÂÆåÊ∂àÊÅØÂêéÔºåÂ∞ÜÁîüÊàê‰∏ÄÊù°Â∫îÁ≠îÊ∂àÊÅØÂà∞replyTo ÊåáÂÆöÁöÑQueue ÔºåÂêåÊó∂Â∏¶‰∏äcorrelationId Â±ûÊÄß ÂÆ¢Êà∑Á´Ø‰πãÂâçÂ∑≤ËÆ¢ÈòÖreplyTo ÊåáÂÆöÁöÑQueue Ôºå‰ªé‰∏≠Êî∂Âà∞ÊúçÂä°Âô®ÁöÑÂ∫îÁ≠îÊ∂àÊÅØÂêéÔºåÊ†πÊçÆÂÖ∂‰∏≠ÁöÑcorrelationId Â±ûÊÄßÂàÜÊûêÂì™Êù°ËØ∑Ê±ÇË¢´ÊâßË°å‰∫ÜÔºåÊ†πÊçÆÊâßË°åÁªìÊûúËøõË°åÂêéÁª≠‰∏öÂä°Â§ÑÁêÜ ÊÄªÁªìÊú¨Êñá‰ªãÁªç‰∫ÜRabbitMQ ‰∏≠‰∏™‰∫∫ËÆ§‰∏∫ÊúÄÈáçË¶ÅÁöÑÊ¶ÇÂøµÔºåÂÖÖÂàÜÂà©Áî®RabbitMQ Êèê‰æõÁöÑËøô‰∫õÂäüËÉΩÂ∞±ÂèØ‰ª•Â§ÑÁêÜÊàë‰ª¨ÁªùÂ§ßÈÉ®ÂàÜÁöÑÂºÇÊ≠•‰∏öÂä°‰∫Ü„ÄÇ RabbitMQ ÈÄâÂûãÂíåÂØπÊØî1.‰ªéÁ§æÂå∫Ê¥ªË∑ÉÂ∫¶ÊåâÁÖßÁõÆÂâçÁΩëÁªú‰∏äÁöÑËµÑÊñôÔºåRabbitMQ „ÄÅactiveM „ÄÅZeroMQ ‰∏âËÄÖ‰∏≠ÔºåÁªºÂêàÊù•ÁúãÔºåRabbitMQ ÊòØÈ¶ñÈÄâ„ÄÇ 2.ÊåÅ‰πÖÂåñÊ∂àÊÅØÊØîËæÉZeroMq ‰∏çÊîØÊåÅÔºåActiveMq ÂíåRabbitMq ÈÉΩÊîØÊåÅ„ÄÇÊåÅ‰πÖÂåñÊ∂àÊÅØ‰∏ªË¶ÅÊòØÊåáÊàë‰ª¨Êú∫Âô®Âú®‰∏çÂèØÊäóÂäõÂõ†Á¥†Á≠âÊÉÖÂÜµ‰∏ãÊåÇÊéâ‰∫ÜÔºåÊ∂àÊÅØ‰∏ç‰ºö‰∏¢Â§±ÁöÑÊú∫Âà∂„ÄÇ 3.ÁªºÂêàÊäÄÊúØÂÆûÁé∞ÂèØÈù†ÊÄß„ÄÅÁÅµÊ¥ªÁöÑË∑ØÁî±„ÄÅÈõÜÁæ§„ÄÅ‰∫ãÂä°„ÄÅÈ´òÂèØÁî®ÁöÑÈòüÂàó„ÄÅÊ∂àÊÅØÊéíÂ∫è„ÄÅÈóÆÈ¢òËøΩË∏™„ÄÅÂèØËßÜÂåñÁÆ°ÁêÜÂ∑•ÂÖ∑„ÄÅÊèí‰ª∂Á≥ªÁªüÁ≠âÁ≠â„ÄÇ RabbitMq / Kafka ÊúÄÂ•ΩÔºåActiveMq Ê¨°‰πãÔºåZeroMq ÊúÄÂ∑Æ„ÄÇÂΩìÁÑ∂ZeroMq ‰πüÂèØ‰ª•ÂÅöÂà∞Ôºå‰∏çËøáËá™Â∑±ÂøÖÈ°ªÊâãÂä®ÂÜô‰ª£Á†ÅÂÆûÁé∞Ôºå‰ª£Á†ÅÈáè‰∏çÂ∞è„ÄÇÂ∞§ÂÖ∂ÊòØÂèØÈù†ÊÄß‰∏≠ÁöÑÔºöÊåÅ‰πÖÊÄß„ÄÅÊäïÈÄíÁ°ÆËÆ§„ÄÅÂèëÂ∏ÉËÄÖËØÅÂÆûÂíåÈ´òÂèØÁî®ÊÄß„ÄÇ 4.È´òÂπ∂ÂèëÊØãÂ∫∏ÁΩÆÁñëÔºåRabbitMQ ÊúÄÈ´òÔºåÂéüÂõ†ÊòØÂÆÉÁöÑÂÆûÁé∞ËØ≠Ë®ÄÊòØÂ§©ÁîüÂÖ∑Â§áÈ´òÂπ∂ÂèëÈ´òÂèØÁî®ÁöÑerlang ËØ≠Ë®Ä„ÄÇ 5.ÊØîËæÉÂÖ≥Ê≥®ÁöÑÊØîËæÉÔºå RabbitMQ Âíå KafkaRabbitMq ÊØîKafka ÊàêÁÜüÔºåÂú®ÂèØÁî®ÊÄß‰∏äÔºåÁ®≥ÂÆöÊÄß‰∏äÔºåÂèØÈù†ÊÄß‰∏äÔºå RabbitMq ËÉú‰∫é Kafka ÔºàÁêÜËÆ∫‰∏äÔºâ„ÄÇ Âè¶Â§ñÔºåKafka ÁöÑÂÆö‰Ωç‰∏ªË¶ÅÂú®Êó•ÂøóÁ≠âÊñπÈù¢Ôºå Âõ†‰∏∫Kafka ËÆæËÆ°ÁöÑÂàùË°∑Â∞±ÊòØÂ§ÑÁêÜÊó•ÂøóÁöÑÔºåÂèØ‰ª•ÁúãÂÅöÊòØ‰∏Ä‰∏™Êó•ÂøóÔºàÊ∂àÊÅØÔºâÁ≥ªÁªü‰∏Ä‰∏™ÈáçË¶ÅÁªÑ‰ª∂ÔºåÈíàÂØπÊÄßÂæàÂº∫ÔºåÊâÄ‰ª• Â¶ÇÊûú‰∏öÂä°ÊñπÈù¢ËøòÊòØÂª∫ËÆÆÈÄâÊã© RabbitMq „ÄÇ ËøòÊúâÂ∞±ÊòØÔºåKafka ÁöÑÊÄßËÉΩÔºàÂêûÂêêÈáè„ÄÅTPS ÔºâÊØîRabbitMq Ë¶ÅÈ´òÂá∫Êù•ÂæàÂ§ö„ÄÇ ÈÄâÂûãÊúÄÂêéÊÄªÁªìÔºöÂ¶ÇÊûúÊàë‰ª¨Á≥ªÁªü‰∏≠Â∑≤ÁªèÊúâÈÄâÊã© Kafka ÔºåÊàñËÄÖ RabbitMq ÔºåÂπ∂‰∏îÂÆåÂÖ®ÂèØ‰ª•Êª°Ë∂≥Áé∞Âú®ÁöÑ‰∏öÂä°ÔºåÂª∫ËÆÆÂ∞±‰∏çÁî®ÈáçÂ§çÂéªÂ¢ûÂä†ÂíåÈÄ†ËΩÆÂ≠ê„ÄÇ ÂèØ‰ª•Âú® Kafka Âíå RabbitMq ‰∏≠ÈÄâÊã©‰∏Ä‰∏™ÈÄÇÂêàËá™Â∑±Âõ¢ÈòüÂíå‰∏öÂä°ÁöÑÔºåËøô‰∏™ÊâçÊòØÊúÄÈáçË¶ÅÁöÑ„ÄÇ‰ΩÜÊòØÊØãÂ∫∏ÁΩÆÁñëÁé∞Èò∂ÊÆµÔºåÁªºÂêàËÄÉËôëÊ≤°ÊúâÁ¨¨‰∏âÈÄâÊã©„ÄÇ]]></content>
  </entry>
  <entry>
    <title><![CDATA[„ÄêJavaÂπ∂ÂèëÂü∫Á°Ä„Äë‚Äî‚ÄîÂØπË±°ÁªÑÂêà]]></title>
    <url>%2F2018%2F08%2F13%2Fthread%2F%E3%80%90Java%E5%B9%B6%E5%8F%91%E5%9F%BA%E7%A1%80%E3%80%91%E2%80%94%E2%80%94%E5%AF%B9%E8%B1%A1%E7%BB%84%E5%90%88%2F</url>
    <content type="text"><![CDATA[Êú¨Á´†Â∞Ü‰ªãÁªç‰∏Ä‰∫õÁªÑÂêàÊ®°ÂºèÔºåËøô‰∫õÊ®°ÂºèËÉΩÂ§ü‰Ωø‰∏Ä‰∏™Á±ªÊõ¥ÂÆπÊòìÊàê‰∏∫Á∫øÁ®ãÂÆâÂÖ®ÁöÑÔºåÂπ∂‰∏îÂú®Áª¥Êä§Ëøô‰∫õÁ±ªÊó∂‰∏ç‰ºöÊó†ÊÑèÁ†¥ÂùèÁ±ªÁöÑÁ∫øÁ®ãÂÆâÂÖ®ÊÄß‰øùËØÅ„ÄÇ ËÆæËÆ°Á∫øÁ®ãÂÆâÂÖ®ÁöÑÁ±ª Âú®ËÆæËÆ°Á∫øÁ®ãÂÆâÂÖ®Á±ªÁöÑËøáÁ®ã‰∏≠ÔºåÈúÄË¶ÅÂåÖÂê´‰ª•‰∏ã‰∏â‰∏™Âü∫Êú¨Ë¶ÅÁ¥†Ôºö ÊâæÂá∫ÊûÑÊàêÂØπË±°Áä∂ÊÄÅÁöÑÊâÄÊúâÂèòÈáè ÊâæÂá∫Á∫¶ÊùüÁä∂ÊÄÅÂèòÈáèÁöÑ‰∏çÂèòÊÄßÊù°‰ª∂ Âª∫Á´ãÂØπË±°Áä∂ÊÄÅÁöÑÂπ∂ÂèëËÆøÈóÆÁÆ°ÁêÜÁ≠ñÁï• Ë¶ÅÂàÜÊûêÂØπË±°ÁöÑÁä∂ÊÄÅÔºåÈ¶ñÂÖà‰ªéÂØπË±°ÁöÑÂüüÂºÄÂßã„ÄÇÂ¶ÇÊûúÂØπË±°‰∏≠ÊâÄÊúâÁöÑÂüüÈÉΩÊòØÂü∫Êú¨Á±ªÂûãÁöÑÂèòÈáèÔºåÈÇ£‰πàËøô‰∫õÂüüÂ∞ÜÊûÑÊàêÂØπË±°ÁöÑÂÖ®ÈÉ®Áä∂ÊÄÅÔºåÂ¶ÇÁ®ãÂ∫èÊ∏ÖÂçï4-1‰∏≠ÁöÑCounterÂè™Êúâ‰∏Ä‰∏™ÂüüvalueÔºåÂõ†Ê≠§Ëøô‰∏™ÂüüÂ∞±ÊòØCounterÁöÑÂÖ®ÈÉ®Áä∂ÊÄÅÔºõÂ¶ÇÊûúÂú®ÂØπË±°ÁöÑÂüü‰∏≠ÂºïÁî®‰∫ÜÂÖ∂‰ªñÂØπË±°ÔºåÈÇ£‰πàËØ•ÂØπË±°ÁöÑÁä∂ÊÄÅÂ∞ÜÂåÖÂê´Ë¢´ÂºïÁî®ÂØπË±°ÁöÑÂüüÔºå‰æãÂ¶ÇÔºåLinkedListÁöÑÁä∂ÊÄÅÂ∞±ÂåÖÊã¨ËØ•ÈìæË°®‰∏≠ÊâÄÊúâËäÇÁÇπÂØπË±°ÁöÑÁä∂ÊÄÅ„ÄÇ Á®ãÂ∫èÊ∏ÖÂçï4-1 ‰ΩøÁî®JavaÁõëËßÜÂô®Ê®°ÂºèÁöÑÁ∫øÁ®ãÂÆâÂÖ®ËÆ°Êï∞Âô® 12345678910111213141516@ThreadSafepublic class Counter &#123; private long value = 0; public synchronized long getValue() &#123; return value; &#125; public synchronized long increment() &#123; if (value == Long.MAX_VALUE) &#123; throw new IllegalStateException("counter overflow"); &#125; return ++value; &#125;&#125; ÂêåÊ≠•Á≠ñÁï•ÂÆö‰πâ‰∫ÜÂ¶Ç‰ΩïÂú®‰∏çËøùËÉåÂØπË±°‰∏çÂèòÊù°‰ª∂ÊàñÂêéÈ™åÊù°‰ª∂ÁöÑÊÉÖÂÜµ‰∏ãÂØπÂÖ∂Áä∂ÊÄÅÁöÑËÆøÈóÆÊìç‰ΩúËøõË°åÂçèÂêå„ÄÇÂêåÊ≠•Á≠ñÁï•ËßÑÂÆö‰∫ÜÂ¶Ç‰ΩïÂ∞Ü‰∏çÂèòÊÄß„ÄÅÁ∫øÁ®ãÂ∞ÅÈó≠‰∏éÂä†ÈîÅÊú∫Âà∂Á≠âÁªìÂêàËµ∑Êù•‰ª•Áª¥Êä§Á∫øÁ®ãÁöÑÂÆâÂÖ®ÊÄßÔºåÂπ∂‰∏îËøòËßÑÂÆö‰∫ÜÂì™‰∫õÂèòÈáèÁî±Âì™‰∫õÈîÅÊù•‰øùÊä§„ÄÇ ÂØπË±°‰∏éÂèòÈáèÈÉΩÊúâ‰∏Ä‰∏™Áä∂ÊÄÅÁ©∫Èó¥ÔºåÂç≥ÊâÄÊúâÂèØËÉΩÁöÑÂèñÂÄº„ÄÇ ‰∏çÂèØÂèòÊù°‰ª∂ÊòØÊåáÔºåÁî®‰∫éÂà§Êñ≠Áä∂ÊÄÅÊòØÊúâÊïàÁöÑËøòÊòØÊó†ÊïàÁöÑ„ÄÇ ÂêéÈ™åÊù°‰ª∂ÊòØÊåáÔºåÁî®‰∫éÂà§Êñ≠Áä∂ÊÄÅËøÅÁßªÊòØÂê¶ÊòØÊúâÊïàÁöÑ„ÄÇ ‰æãÂ¶ÇÁ®ãÂ∫èÊ∏ÖÂçï4-1Ôºö CounterÁöÑ‰∏çÂèØÂèòÊù°‰ª∂ÊòØLong.MIN_VALUE&lt;=value&lt;=Long.MAX_VALUE CounterÁöÑÂêéÈ™åÊù°‰ª∂ÊòØvalueÁöÑÂÄºÂú®‰øÆÊîπÂêéÂøÖÈ°ªLong.MIN_VALUE&lt;=value&lt;=Long.MAX_VALUE Êî∂ÈõÜÂêåÊ≠•ÈúÄÊ±ÇÂØπË±°‰∏éÂèòÈáèÈÉΩÊúâ‰∏Ä‰∏™Áä∂ÊÄÅÁ©∫Èó¥ÔºåÂú®ËÆ∏Â§öÁ±ª‰∏≠ÈÉΩÂÆö‰πâ‰∫Ü‰∏Ä‰∫õ‰∏çÂèØÂèòÊù°‰ª∂ÔºåÁî®‰∫éÂà§Êñ≠Áä∂ÊÄÅÊòØÊúâÊïàÁöÑËøòÊòØÊó†ÊïàÁöÑ„ÄÇÂêåÊ†∑ÔºåÂú®Êìç‰Ωú‰∏≠Ëøò‰ºöÂåÖÂê´‰∏Ä‰∫õÂêéÈ™åÊù°‰ª∂Êù•Âà§Êñ≠Áä∂ÊÄÅËøÅÁßªÊòØÂê¶ÊòØÊúâÊïàÁöÑ„ÄÇ Áî±‰∫é‰∏çÂèòÊÄßÊù°‰ª∂‰ª•ÂèäÂêéÈ™åÊù°‰ª∂Âú®Áä∂ÊÄÅÂèäÁä∂ÊÄÅËΩ¨Êç¢‰∏äÊñΩÂä†‰∫ÜÂêÑÁßçÁ∫¶ÊùüÔºåÂõ†Ê≠§Â∞±ÈúÄË¶ÅÈ¢ùÂ§ñÁöÑÂêåÊ≠•‰∏éÂ∞ÅË£Ö„ÄÇÂ¶ÇÊûúÊüê‰∫õÁä∂ÊÄÅÊòØÊó†ÊïàÁöÑÔºåÈÇ£‰πàÂøÖÈ°ªÂØπÂ∫ïÂ±ÇÁöÑÁä∂ÊÄÅÂèòÈáèËøõË°åÂ∞ÅË£ÖÔºåÂê¶ÂàôÂÆ¢Êà∑‰ª£Á†ÅÂèØËÉΩ‰ºö‰ΩøÂØπË±°Â§Ñ‰∫éÊó†ÊïàÁä∂ÊÄÅ„ÄÇÂ¶ÇÊûúÂú®Êìç‰Ωú‰∏≠Â≠òÂú®Êó†ÊïàÁöÑÁä∂ÊÄÅËΩ¨Êç¢ÔºåÈÇ£‰πàËØ•Êìç‰ΩúÂøÖÈ°ªÊòØÂéüÂ≠êÁöÑ„ÄÇ Âú®Á±ª‰∏≠‰πüÂèØ‰ª•ÂåÖÂê´ÂêåÊó∂Á∫¶ÊùüÂ§ö‰∏™Áä∂ÊÄÅÂèòÈáèÁöÑ‰∏çÂèòÊÄßÊù°‰ª∂ÔºåÂ¶ÇÁ®ãÂ∫èÊ∏ÖÂçï4-10„ÄÇÁ±ª‰ºº‰∫éËøôÁßçÂåÖÂê´Â§ö‰∏™ÂèòÈáèÁöÑ‰∏çÂèòÊÄßÊù°‰ª∂Â∞ÜÂ∏¶Êù•ÂéüÂ≠êÊÄßÈúÄÊ±ÇÔºöËøô‰∫õÁõ∏ÂÖ≥ÁöÑÂèòÈáèÂøÖÈ°ªÂú®Âçï‰∏™ÂéüÂ≠êÊìç‰Ωú‰∏≠ËøõË°åËØªÂèñÊàñÊõ¥Êñ∞„ÄÇ Á®ãÂ∫èÊ∏ÖÂçï4-10 NumberRangeÁ±ªÂπ∂‰∏çË∂≥‰ª•‰øùÊä§ÂÆÉÁöÑ‰∏çÂèòÊÄßÊù°‰ª∂Ôºà‰∏çË¶ÅËøô‰πàÂÅöÔºâ 1234567891011121314151617181920212223242526public class NumberRange &#123; // ‰∏çÂèòÊÄßÊù°‰ª∂Ôºölower &lt;= upper private final AtomicInteger lower = new AtomicInteger(0); private final AtomicInteger upper = new AtomicInteger(0); public void setLower(int i) &#123; // Ê≥®ÊÑè‚Äî‚Äî‰∏çÂÆâÂÖ®ÁöÑ"ÂÖàÊ£ÄÊü•ÂêéÊâßË°å" if (i &gt; upper.get()) &#123; throw new IllegalArgumentException("can't set lower to " + i + " &gt; upper"); &#125; lower.set(i); &#125; public void setUpper(int i) &#123; // Ê≥®ÊÑè‚Äî‚Äî‰∏çÂÆâÂÖ®ÁöÑ"ÂÖàÊ£ÄÊü•ÂêéÊâßË°å" if (i &lt; lower.get()) &#123; throw new IllegalArgumentException("can't set upper to " + i + " &lt; lower"); &#125; upper.set(i); &#125; public boolean isInRange(int i) &#123; return (i &gt;= lower.get() &amp;&amp; i &lt;= upper.get()); &#125;&#125; Âõ†Ê≠§Âè™Êúâ‰∏∫NumberRangeÁöÑsetLower„ÄÅsetUpper„ÄÅisInRangeÊñπÊ≥ïÈÉΩÂä†ÈîÅ(ÂøÖÈ°ªÊòØÂêå‰∏Ä‰∏™ÈîÅ)ÔºåNumberRangeÊâçÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ„ÄÇ Â¶ÇÊûú‰∏ç‰∫ÜËß£ÂØπË±°ÁöÑ‰∏çÂèòÊÄßÊù°‰ª∂‰∏éÂêéÈ™åÊù°‰ª∂ÔºåÈÇ£‰πàÂ∞±‰∏çËÉΩÁ°Æ‰øùÁ∫øÁ®ãÂÆâÂÖ®ÊÄß„ÄÇË¶ÅÊª°Ë∂≥Áä∂ÊÄÅÂèòÈáèÁöÑÊúâÊïàÂÄºÊàñÁä∂ÊÄÅËΩ¨Êç¢‰∏äÁöÑÂêÑÁßçÁ∫¶ÊùüÊù°‰ª∂ÔºåÂ∞±ÈúÄË¶ÅÂÄüÂä©‰∫éÂéüÂ≠êÊÄß‰∏éÂ∞ÅË£ÖÊÄß„ÄÇ ‰æùËµñÁä∂ÊÄÅÁöÑÊìç‰ΩúÂú®Êüê‰∏™Êìç‰Ωú‰∏≠ÂåÖÂê´ÊúâÂü∫‰∫éÁä∂ÊÄÅÁöÑÂÖàÈ™åÊù°‰ª∂ÔºåÈÇ£‰πàËøô‰∏™Êìç‰ΩúÂ∞±Áß∞‰∏∫‰æùËµñÁä∂ÊÄÅÁöÑÊìç‰Ωú„ÄÇ ÂÆû‰æãÂ∞ÅÈó≠Â¶ÇÊûúÊüêÂØπË±°‰∏çÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÔºåÈÇ£‰πàÂèØ‰ª•ÈÄöËøáÂ§öÁßçÊäÄÊúØ‰ΩøÂÖ∂Âú®Â§öÁ∫øÁ®ãÁ®ãÂ∫è‰∏≠ÂÆâÂÖ®Âú∞‰ΩøÁî®„ÄÇÊØîÂ¶ÇÔºö‰Ω†ÂèØ‰ª•Á°Æ‰øùËØ•ÂØπË±°Âè™ËÉΩÁî±Âçï‰∏™Á∫øÁ®ãËÆøÈóÆ(Á∫øÁ®ãÂ∞ÅÈó≠)ÔºåÊàñËÄÖÈÄöËøá‰∏Ä‰∏™ÈîÅÊù•‰øùÊä§ËØ•ÂØπË±°ÁöÑÊâÄÊúâËÆøÈóÆ„ÄÇ Â∞ÅË£ÖÊèê‰æõ‰∫Ü‰∏ÄÁßçÂÆû‰æãÂ∞ÅÈó≠Êú∫Âà∂(Ë¢´Â∞ÅÈó≠ÂØπË±°‰∏ÄÂÆö‰∏çËÉΩË∂ÖÂá∫ÂÆÉ‰ª¨Êó¢ÂÆöÁöÑ‰ΩúÁî®Âüü)Ôºö ÂØπË±°ÂèØ‰ª•Â∞ÅÈó≠Âú®Á±ªÁöÑ‰∏Ä‰∏™ÂÆû‰æã(‰æãÂ¶Ç‰Ωú‰∏∫Á±ªÁöÑ‰∏Ä‰∏™ÁßÅÊúâÊàêÂëò) ÂØπË±°ÂèØ‰ª•Â∞ÅÈó≠Âú®Êüê‰∏™‰ΩúÁî®ÂüüÂÜÖ(‰æãÂ¶Ç‰Ωú‰∏∫‰∏Ä‰∏™Â±ÄÈÉ®ÂèòÈáè) ÂØπË±°ÂèØ‰ª•Â∞ÅÈó≠Âú®Á∫øÁ®ãÂÜÖ(‰æãÂ¶ÇÂú®Êüê‰∏™Á∫øÁ®ã‰∏≠Â∞ÜÂØπË±°‰ªé‰∏Ä‰∏™ÊñπÊ≥ï‰º†ÈÄíÂà∞Âè¶‰∏Ä‰∏™ÊñπÊ≥ïÔºåËÄå‰∏çÊòØÂú®Â§ö‰∏™Á∫øÁ®ã‰πãÈó¥ÂÖ±‰∫´ËØ•ÂØπË±°) ÈÄöËøáÂ∞ÜÂ∞ÅÈó≠Êú∫Âà∂‰∏éÂêàÈÄÇÁöÑÂä†ÈîÅÁ≠ñÁï•ÁªìÂêàËµ∑Êù•ÔºåÂ∞±ÂèØ‰ª•Á°Æ‰øù‰ª•Á∫øÁ®ãÂÆâÂÖ®ÁöÑÊñπÂºèÊù•‰ΩøÁî®ÈùûÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÂØπË±°„ÄÇ Á®ãÂ∫èÊ∏ÖÂçï4-2‰∏≠ÁöÑPersonSetËØ¥Êòé‰∫ÜÂ¶Ç‰ΩïÈÄöËøáÂ∞ÅÈó≠‰∏éÂä†ÈîÅÁ≠âÊú∫Âà∂‰Ωø‰∏Ä‰∏™Á±ªÊàê‰∏∫Á∫øÁ®ãÂÆâÂÖ®ÁöÑ(Âç≥‰ΩøËøô‰∏™Á±ªÁöÑÁä∂ÊÄÅÂèòÈáèÂπ∂‰∏çÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ)„ÄÇ Á®ãÂ∫èÊ∏ÖÂçï4-2 ÈÄöËøáÂ∞ÅÈó≠Êú∫Âà∂Êù•Á°Æ‰øùÁ∫øÁ®ãÂÆâÂÖ® 12345678910111213141516171819202122/** * PersonSetÁöÑÁä∂ÊÄÅÁî±HashSetÊù•ÁÆ°ÁêÜÔºåËôΩÁÑ∂HashSetÂπ∂ÈùûÁ∫øÁ®ãÂÆâÂÖ®Ôºå * ‰ΩÜHashSetË¢´Â∞ÅÈó≠Âú®PersonSet‰∏≠ÔºåÂπ∂‰∏îHashSetÁî±PersonSetÁöÑÂÜÖÁΩÆÈîÅÊù•‰øùÊä§Ôºå * Âõ†Ê≠§PersonSetÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÔºåÂç≥mySetÂèØ‰ª•ÂÆâÂÖ®Âú∞‰ΩøÁî®„ÄÇ * * ÂΩìÁÑ∂ÔºåÂ¶ÇÊûúPersonÁ±ªÊòØÂèØÂèòÁöÑÔºåÈÇ£‰πàÂú®ËÆøÈóÆ‰ªéPersonSet‰∏≠Ëé∑ÂæóÁöÑ * PersonÂØπË±°Êó∂ÔºåËøòÈúÄË¶ÅÈ¢ùÂ§ñÁöÑÂêåÊ≠•„ÄÇ */@ThreadSafepublic class PersonSet &#123; private final Set&lt;Person&gt; mySet = new HashSet&lt;&gt;(); public synchronized void addPerson(Person p) &#123; mySet.add(p); &#125; public synchronized boolean containsPerson(Person p) &#123; return mySet.contains(p); &#125; &#125; Âú®JavaÂπ≥Âè∞ÁöÑÁ±ªÂ∫ì‰∏≠ËøòÊúâÂæàÂ§öÁ∫øÁ®ãÂ∞ÅÈó≠ÁöÑÂÆû‰æãÔºå‰æãÂ¶ÇCollections.synchronizedListÂèäÂÖ∂Á±ª‰ººÁöÑÊñπÊ≥ïÔºåÂèØ‰ª•‰ΩøÈùûÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÂÆπÂô®Âú®Â§öÁ∫øÁ®ãÁ®ãÂ∫è‰∏≠ÂÆâÂÖ®Âú∞‰ΩøÁî®„ÄÇÂÖ∂ÂéüÁêÜÊòØÈÄöËøá‚ÄúË£ÖÈ•∞Âô®‚ÄùÊ®°ÂºèÂ∞ÜÂÆπÂô®Á±ªÂ∞ÅË£ÖÂú®‰∏Ä‰∏™ÂêåÊ≠•ÁöÑÂåÖË£ÖÂô®ÂØπË±°‰∏≠ÔºåËÄåÂåÖË£ÖÂô®ËÉΩÂ∞ÜÊé•Âè£‰∏≠ÁöÑÊØè‰∏™ÊñπÊ≥ïÈÉΩÂÆûÁé∞‰∏∫ÂêåÊ≠•ÊñπÊ≥ïÔºåÂπ∂Â∞ÜË∞ÉÁî®ËØ∑Ê±ÇËΩ¨ÂèëÂà∞Â∫ïÂ±ÇÁöÑÂÆπÂô®ÂØπË±°‰∏ä„ÄÇÂè™Ë¶ÅÂåÖË£ÖÂô®ÂØπË±°Êã•ÊúâÂØπÂ∫ïÂ±ÇÂÆπÂô®ÂØπË±°ÁöÑÂîØ‰∏ÄÂºïÁî®(Âç≥ÊääÂ∫ïÂ±ÇÂÆπÂô®ÂØπË±°Â∞ÅÈó≠Âú®ÂåÖË£ÖÂô®‰∏≠)ÔºåÈÇ£‰πàÂÆÉÂ∞±ÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ„ÄÇ CollectionsÁöÑÈÉ®ÂàÜÊ∫êÁ†Å 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556public static &lt;T&gt; List&lt;T&gt; synchronizedList(List&lt;T&gt; list) &#123; return (list instanceof RandomAccess ? new SynchronizedRandomAccessList&lt;&gt;(list) : new SynchronizedList&lt;&gt;(list));&#125;...//CollectionsÁöÑÂÜÖÈÉ®Á±ªstatic class SynchronizedRandomAccessList&lt;E&gt; extends SynchronizedList&lt;E&gt; implements RandomAccess &#123; SynchronizedRandomAccessList(List&lt;E&gt; list) &#123; super(list); &#125; ...&#125;//CollectionsÁöÑÂÜÖÈÉ®Á±ªstatic class SynchronizedList&lt;E&gt; extends SynchronizedCollection&lt;E&gt; implements List&lt;E&gt; &#123; private static final long serialVersionUID = -7754090372962971524L; final List&lt;E&gt; list; SynchronizedList(List&lt;E&gt; list) &#123; super(list); this.list = list; &#125; public boolean equals(Object o) &#123; if (this == o) return true; //ËøôÈáå‰ΩøÁî®ÂêåÊ≠•ÔºåÂπ∂Â∞ÜËØ∑Ê±ÇËΩ¨ÂèëÂà∞Â∫ïÂ±ÇÂÆπÂô® synchronized (mutex) &#123;return list.equals(o);&#125; &#125; public void add(int index, E element) &#123; //ËøôÈáå‰ΩøÁî®ÂêåÊ≠•ÔºåÂπ∂Â∞ÜËØ∑Ê±ÇËΩ¨ÂèëÂà∞Â∫ïÂ±ÇÂÆπÂô® synchronized (mutex) &#123;list.add(index, element);&#125; &#125; public List&lt;E&gt; subList(int fromIndex, int toIndex) &#123; //ËøôÈáå‰ΩøÁî®ÂêåÊ≠•ÔºåÂπ∂Â∞ÜËØ∑Ê±ÇËΩ¨ÂèëÂà∞Â∫ïÂ±ÇÂÆπÂô® synchronized (mutex) &#123; return new SynchronizedList&lt;&gt;(list.subList(fromIndex, toIndex), mutex); &#125; &#125; ...&#125; JavaÁõëËßÜÂô®Ê®°Âºè‰ªéÁ∫øÁ®ãÂ∞ÅÈó≠ÂéüÂàôÂèäÂÖ∂ÈÄªËæëÊé®ËÆ∫ÂèØ‰ª•ÂæóÂá∫JavaÁõëËßÜÂô®Ê®°ÂºèÔºöÊääÂØπË±°ÁöÑÊâÄÊúâÂèØÂèòÁä∂ÊÄÅÈÉΩÂ∞ÅË£ÖËµ∑Êù•ÔºåÂπ∂Áî±ÂØπË±°Ëá™Â∑±ÁöÑÂÜÖÁΩÆÈîÅÊù•‰øùÊä§„ÄÇ Âú®Á®ãÂ∫èÊ∏ÖÂçï4-1ÁöÑCounter‰∏≠ÁªôÂá∫‰∫ÜËøôÁßçÊ®°ÂºèÁöÑ‰∏Ä‰∏™ÂÖ∏ÂûãÁ§∫‰æã„ÄÇ JavaÁõëËßÜÂô®Ê®°Âºè‰ªÖ‰ªÖÊòØ‰∏ÄÁßçÁºñÂÜô‰ª£Á†ÅÁöÑÁ∫¶ÂÆöÔºåÂØπ‰∫é‰ªª‰Ωï‰∏ÄÁßçÈîÅÂØπË±°ÔºåÂè™Ë¶ÅËá™ÂßãËá≥ÁªàÈÉΩ‰ΩøÁî®ËØ•ÈîÅÂØπË±°ÔºåÈÉΩÂèØ‰ª•Áî®Êù•‰øùÊä§ÂØπË±°ÁöÑÁä∂ÊÄÅ„ÄÇÁ®ãÂ∫èÊ∏ÖÂçï4-3ÁªôÂá∫‰∫ÜÂ¶Ç‰Ωï‰ΩøÁî®ÁßÅÊúâÈîÅÊù•‰øùÊä§Áä∂ÊÄÅ„ÄÇ Á®ãÂ∫èÊ∏ÖÂçï4-3 ÈÄöËøá‰∏Ä‰∏™ÁßÅÊúâÈîÅÊù•‰øùÊä§Áä∂ÊÄÅ 1234567891011public class PrivateLock &#123; private final Object myLock = new Object(); private Widget widget; void someMethod() &#123; synchronized (myLock) &#123; // ËÆøÈóÆÊàñ‰øÆÊîπWidgetÁöÑÁä∂ÊÄÅ &#125; &#125;&#125; Á∫øÁ®ãÂÆâÂÖ®ÊÄßÂßîÊâòÂΩì‰ªéÂ§¥ÂºÄÂßãÊûÑÂª∫‰∏Ä‰∏™Á±ªÔºåÊàñËÄÖÂ∞ÜÂ§ö‰∏™ÈùûÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÁ±ªÁªÑÂêà‰∏∫‰∏Ä‰∏™Á±ªÊó∂ÔºåJavaÁõëËßÜÂô®Ê®°ÂºèÊòØÈùûÂ∏∏ÊúâÁî®ÁöÑ„ÄÇ‰ΩÜÊòØÔºåÂ¶ÇÊûúÁ±ª‰∏≠ÂêÑ‰∏™ÁªÑ‰ª∂ÈÉΩÂ∑≤ÁªèÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÔºåÊàë‰ª¨ÊòØÂê¶ÈúÄË¶ÅÂ¢ûÂä†‰∏Ä‰∏™È¢ùÂ§ñÁöÑÁ∫øÁ®ãÂÆâÂÖ®Â±ÇÔºüÁ≠îÊ°àÊòØ‚ÄúËßÜÊÉÖÂÜµËÄåÂÆö‚Äù„ÄÇÂú®Êüê‰∫õÊÉÖÂÜµ‰∏ãÔºåÈÄöËøáÂ§ö‰∏™Á∫øÁ®ãÂÆâÂÖ®Á±ªÁªÑÂêàËÄåÊàêÁöÑÁ±ªÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÔºàÂ¶ÇÁ®ãÂ∫èÊ∏ÖÂçï4-7ÂíåÁ®ãÂ∫èÊ∏ÖÂçï4-9ÊâÄÁ§∫ÔºâÔºåËÄåÂú®Êüê‰∫õÊÉÖÂÜµ‰∏ãÔºåËøô‰ªÖ‰ªÖÊòØ‰∏Ä‰∏™Â•ΩÁöÑÂºÄÁ´ØÔºàÂ¶ÇÁ®ãÂ∫èÊ∏ÖÂçï4-10Ôºâ„ÄÇ Âçï‰∏™Áä∂ÊÄÅÂèòÈáèÂ¶ÇÊûúÊüê‰∏™Á±ªÂè™ÂåÖÂê´‰∏Ä‰∏™Áä∂ÊÄÅÂèòÈáèÔºå‰∏îËØ•Áä∂ÊÄÅÂèòÈáèÊú¨Ë∫´ÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÔºåÂàôÂèØ‰ª•Â∞ÜÁ∫øÁ®ãÂÆâÂÖ®ÊÄßÂßîÊâòÁªôËøô‰∏™Áä∂ÊÄÅÂèòÈáèÔºåÂç≥ËØ•Á±ªÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ„ÄÇ Á®ãÂ∫èÊ∏ÖÂçï4-7 Â∞ÜÁ∫øÁ®ãÂÆâÂÖ®ÊÄßÂßîÊâòÁªôConcurrentHashMap 12345678910111213141516171819202122232425262728293031323334353637@ThreadSafepublic class DelegatingVehicleTracker &#123; private final ConcurrentMap&lt;String, Point&gt; locations; private final Map&lt;String, Point&gt; unmodifiableMap; public DelegatingVehicleTracker(Map&lt;String, Point&gt; points) &#123; this.locations = new ConcurrentHashMap&lt;&gt;(points); this.unmodifiableMap = Collections.unmodifiableMap(locations); &#125; public Map&lt;String, Point&gt; getLocations() &#123; return unmodifiableMap; &#125; public Point getLocation(String id) &#123; return locations.get(id); &#125; public void setLocation(String id, int x, int y) &#123; if (locations.replace(id, new Point(x, y)) == null) &#123; throw new IllegalArgumentException("invalid vehicle name: " + id); &#125; &#125;&#125;@ThreadSafe@Immutablepublic class Point &#123; public final int x, y; public Point(int x, int y) &#123; this.x = x; this.y = y; &#125;&#125; Â§ö‰∏™Áã¨Á´ãÁöÑÁä∂ÊÄÅÂèòÈáèÂ¶ÇÊûúÊüê‰∏™Á±ªÂåÖÂê´ÊúâÂ§ö‰∏™Á∫øÁ®ãÂÆâÂÖ®ÁöÑÁä∂ÊÄÅÂèòÈáèÔºå‰∏îËøô‰∫õÁä∂ÊÄÅÂèòÈáèÂΩºÊ≠§Áã¨Á´ãÔºåÂàôÂèØ‰ª•Â∞ÜÁ∫øÁ®ãÂÆâÂÖ®ÊÄßÂßîÊâòÁªôËøô‰∫õÁä∂ÊÄÅÂèòÈáèÔºåÂç≥ËØ•Á±ªÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ„ÄÇ Á®ãÂ∫èÊ∏ÖÂçï4-9 Â∞ÜÁ∫øÁ®ãÂÆâÂÖ®ÊÄßÂßîÊâòÁªôÂ§ö‰∏™Áä∂ÊÄÅÂèòÈáè 12345678910111213141516171819202122@ThreadSafepublic class VisualComponent &#123; private final List&lt;KeyListener&gt; keyListeners = new CopyOnWriteArrayList&lt;&gt;(); private final List&lt;MouseListener&gt; mouseListeners = new CopyOnWriteArrayList&lt;&gt;(); public void addKeyListener(KeyListener listener) &#123; keyListeners.add(listener); &#125; public void addMouseListener(MouseListener listener) &#123; mouseListeners.add(listener); &#125; public void removeKeyListener(KeyListener listener) &#123; keyListeners.remove(listener); &#125; public void removeMouseListener(MouseListener listener) &#123; mouseListeners.remove(listener); &#125;&#125; Â§ö‰∏™Áä∂ÊÄÅÂèòÈáè‰πãÈó¥Â≠òÂú®ÁùÄÊüê‰∫õ‰∏çÂèòÊÄßÊù°‰ª∂Â¶ÇÊûúÊüê‰∏™Á±ªÂåÖÂê´ÊúâÂ§ö‰∏™Áä∂ÊÄÅÂèòÈáèÔºå‰∏îËøô‰∫õÁä∂ÊÄÅÂèòÈáè‰πãÈó¥Â≠òÂú®ÁùÄ‰∏çÂèòÊÄßÊù°‰ª∂&lt;/u&gt;ÔºåÂàô‰∏çËÉΩÂ∞ÜÁ∫øÁ®ãÂÆâÂÖ®ÊÄßÂßîÊâòÁªôËøô‰∫õÁä∂ÊÄÅÂèòÈáèÔºåÂç≥‰ΩøËøô‰∫õÁä∂ÊÄÅÂèòÈáèÊú¨Ë∫´ÈÉΩÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÔºåÂç≥ËØ•Á±ª‰∏çÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ„ÄÇ Á®ãÂ∫èÊ∏ÖÂçï4-10‰∏≠ÁöÑNumberRange‰ΩøÁî®‰∫Ü‰∏§‰∏™AtomicIntegerÊù•ÁÆ°ÁêÜÁä∂ÊÄÅÔºåÂπ∂‰∏îÂ≠òÂú®‰∏Ä‰∏™‰∏çÂèòÊÄßÊù°‰ª∂Ôºölower &lt;= upper„ÄÇ NumberRange‰∏çÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÔºåÊ≤°ÊúâÁª¥ÊåÅÂØπ‰∏ãÁïåÂíå‰∏äÁïåËøõË°åÁ∫¶ÊùüÁöÑ‰∏çÂèòÊÄßÊù°‰ª∂„ÄÇÂÅáËÆæÂèñÂÄºËåÉÂõ¥‰∏∫(0, 10)ÔºåÂ¶ÇÊûú‰∏Ä‰∏™Á∫øÁ®ãË∞ÉÁî®setLower(5)ÔºåËÄåÂè¶‰∏Ä‰∏™Á∫øÁ®ãË∞ÉÁî®setUpper(4)ÔºåÈÇ£‰πàÂú®‰∏Ä‰∫õÈîôËØØÁöÑÊâßË°åÊó∂Â∫è‰∏≠ÔºåËøô‰∏§‰∏™Ë∞ÉÁî®ÈÉΩÂ∞ÜÈÄöËøáÊ£ÄÊü•ÔºåÂπ∂‰∏îÈÉΩËÉΩËÆæÁΩÆÊàêÂäü„ÄÇÁªìÊûúÂæóÂà∞ÁöÑÂèñÂÄºËåÉÂõ¥Â∞±ÊòØ(5, 4)ÔºåÈÇ£‰πàËøôÊòØ‰∏Ä‰∏™Êó†ÊïàÁöÑÁä∂ÊÄÅ„ÄÇÂõ†Ê≠§ÔºåËôΩÁÑ∂AtomicIntegerÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÔºå‰ΩÜÁªèËøáÁªÑÂêàÂæóÂà∞ÁöÑÁ±ªÂç¥‰∏çÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ„ÄÇÁî±‰∫éÁä∂ÊÄÅÂèòÈáèlowerÂíåupper‰∏çÊòØÂΩºÊ≠§Áã¨Á´ãÁöÑÔºåÂõ†Ê≠§NumberRange‰∏çËÉΩÂ∞ÜÁ∫øÁ®ãÂÆâÂÖ®ÊÄßÂßîÊâòÁªôÂÆÉÁöÑÁ∫øÁ®ãÂÆâÂÖ®Áä∂ÊÄÅÂèòÈáè„ÄÇ NumberRangeÂèØ‰ª•ÈÄöËøáÂä†ÈîÅÊú∫Âà∂Êù•Áª¥Êä§‰∏çÂèòÊÄßÊù°‰ª∂‰ª•Á°Æ‰øùÂÖ∂Á∫øÁ®ãÂÆâÂÖ®ÊÄßÔºå‰æãÂ¶Ç‰ΩøÁî®Âêå‰∏Ä‰∏™ÈîÅÊù•‰øùÊä§lowerÂíåupper„ÄÇÊ≠§Â§ñÔºåÂÆÉËøòÂøÖÈ°ªÈÅøÂÖçÂèëÂ∏ÉlowerÂíåupperÔºå‰ªéËÄåÈò≤Ê≠¢ÂÆ¢Êà∑‰ª£Á†ÅÁ†¥ÂùèÂÖ∂‰∏çÂèòÊÄßÊù°‰ª∂„ÄÇ Á®ãÂ∫èÊ∏ÖÂçï4-10 NumberRangeÁ±ªÂπ∂‰∏çË∂≥‰ª•‰øùÊä§ÂÆÉÁöÑ‰∏çÂèòÊÄßÊù°‰ª∂Ôºà‰∏çË¶ÅËøô‰πàÂÅöÔºâ 123456789101112131415161718192021222324252627@NotThreadSafepublic class NumberRange &#123; // ‰∏çÂèòÊÄßÊù°‰ª∂Ôºölower &lt;= upper private final AtomicInteger lower = new AtomicInteger(0); private final AtomicInteger upper = new AtomicInteger(0); public void setLower(int i) &#123; // Ê≥®ÊÑè‚Äî‚Äî‰∏çÂÆâÂÖ®ÁöÑ"ÂÖàÊ£ÄÊü•ÂêéÊâßË°å" if (i &gt; upper.get()) &#123; throw new IllegalArgumentException("can't set lower to " + i + " &gt; upper"); &#125; lower.set(i); &#125; public void setUpper(int i) &#123; // Ê≥®ÊÑè‚Äî‚Äî‰∏çÂÆâÂÖ®ÁöÑ"ÂÖàÊ£ÄÊü•ÂêéÊâßË°å" if (i &lt; lower.get()) &#123; throw new IllegalArgumentException("can't set upper to " + i + " &lt; lower"); &#125; upper.set(i); &#125; public boolean isInRange(int i) &#123; return (i &gt;= lower.get() &amp;&amp; i &lt;= upper.get()); &#125;&#125; ËøòÊúâ‰∏ÄÁßçÊÉÖÂÜµÊòØÔºåÂ¶ÇÊûúÊüê‰∏™Á±ªÂê´ÊúâÂ§çÂêàÊìç‰ΩúÔºå‰æãÂ¶ÇÁ®ãÂ∫èÊ∏ÖÂçï4-10‰∏≠ÁöÑNumberRangeÔºåÈÇ£‰πàÁ¥ßÈù†ÂßîÊâò‰∏çË∂≥‰ª•ÂÆûÁé∞Á∫øÁ®ãÂÆâÂÖ®ÊÄß„ÄÇÂú®ËøôÁßçÊÉÖÂÜµ‰∏ãÔºåËøô‰∏™Á±ªÂøÖÈ°ªÊèê‰æõËá™Â∑±ÁöÑÂä†ÈîÅÊú∫Âà∂‰ª•‰øùËØÅËøô‰∫õÂ§çÂêàÊìç‰ΩúÈÉΩÊòØÂéüÂ≠êÊìç‰ΩúÔºåÈô§ÈùûÊï¥‰∏™Â§çÂêàÊìç‰ΩúÈÉΩÂèØ‰ª•ÂßîÊâòÁªôÁä∂ÊÄÅÂèòÈáè„ÄÇ ÂèëÂ∏ÉÂ∫ïÂ±ÇÁöÑÁä∂ÊÄÅÂèòÈáè Â¶ÇÊûú‰∏Ä‰∏™Áä∂ÊÄÅÂèòÈáèÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÔºåÂπ∂‰∏îÊ≤°Êúâ‰ªª‰Ωï‰∏çÂèòÊÄßÊù°‰ª∂Êù•Á∫¶ÊùüÂÆÉÁöÑÂÄºÔºåÂú®ÂèòÈáèÁöÑÊìç‰Ωú‰∏ä‰πü‰∏çÂ≠òÂú®‰ªª‰Ωï‰∏çÂÖÅËÆ∏ÁöÑÁä∂ÊÄÅËΩ¨Êç¢ÔºåÈÇ£‰πàÂ∞±ÂèØ‰ª•ÂÆâÂÖ®Âú∞ÂèëÂ∏ÉËøô‰∏™ÂèòÈáè„ÄÇ Âú®Áé∞ÊúâÁöÑÁ∫øÁ®ãÂÆâÂÖ®Á±ª‰∏≠Ê∑ªÂä†ÂäüËÉΩÊúâÊó∂ÂÄôÔºåÊüê‰∏™Áé∞ÊúâÁöÑÁ∫øÁ®ãÂÆâÂÖ®Á±ªËÉΩÊîØÊåÅÊàë‰ª¨ÈúÄË¶ÅÁöÑÊâÄÊúâÊìç‰ΩúÔºå‰ΩÜÊõ¥Â§öÊó∂ÂÄôÔºåÁé∞ÊúâÁöÑÁ±ªÂè™ËÉΩÊîØÊåÅÂ§ßÈÉ®ÂàÜÁöÑÊìç‰ΩúÔºåÊ≠§Êó∂Â∞±ÈúÄË¶ÅÂú®‰∏çÁ†¥ÂùèÁ∫øÁ®ãÂÆâÂÖ®ÊÄßÁöÑÊÉÖÂÜµ‰∏ãÊ∑ªÂä†‰∏Ä‰∏™Êñ∞ÁöÑÊìç‰Ωú„ÄÇ ‰æãÂ¶ÇÔºåÂÅáËÆæÈúÄË¶Å‰∏Ä‰∏™Á∫øÁ®ãÂÆâÂÖ®ÁöÑÈìæË°®ÔºåÂÆÉÈúÄË¶ÅÊèê‰æõ‰∏Ä‰∏™ÂéüÂ≠êÁöÑ‚ÄúËã•Ê≤°ÊúâÂàôÊ∑ªÂä†‚ÄùÁöÑÊìç‰Ωú„ÄÇ ‰∏ÄÁßçÊñπÊ≥ïÊòØ‰øÆÊîπÂéüÂßãÁöÑÁ±ªÔºå‰ΩÜËøôÈÄöÂ∏∏Êó†Ê≥ïÂÅöÂà∞ÔºåÂõ†‰∏∫‰Ω†ÂèØËÉΩÊó†Ê≥ïËÆøÈóÆÊàñ‰øÆÊîπËØ•Á±ªÁöÑÊ∫ê‰ª£Á†Å„ÄÇ Âè¶‰∏ÄÁßçÊñπÊ≥ïÊòØÊâ©Â±ïËøô‰∏™Á±ªÔºåÂÅáÂÆöÂú®ËÆæËÆ°Ëøô‰∏™Á±ªÊó∂ËÄÉËôë‰∫ÜÊâ©Â±ïÊÄß„ÄÇÂ¶ÇÁ®ãÂ∫èÊ∏ÖÂçï4-13‰∏≠ÁöÑBetterVectorÂØπVectorËøõË°å‰∫ÜÊâ©Â±ï„ÄÇ 1234567891011@ThreadSafepublic class BetterVector&lt;E&gt; extends Vector&lt;E&gt; &#123; public synchronized boolean putIfAbsent(E x) &#123; boolean absent = !contains(x); if (absent) &#123; add(x); &#125; return absent; &#125;&#125; ÂÆ¢Êà∑Á´ØÂä†ÈîÅÁ¨¨‰∏âÁßçÊñπÊ≥ïÊòØÊâ©Â±ïÁ±ªÁöÑÂäüËÉΩÔºå‰ΩÜ‰∏çÊòØÊâ©Â±ïÁ±ªÊú¨Ë∫´ÔºåËÄåÊòØÂ∞ÜÊâ©Â±ï‰ª£Á†ÅÊîæÂÖ•‰∏Ä‰∏™‚ÄúËæÖÂä©Á±ª‚Äù‰∏≠„ÄÇÂ¶ÇÁ®ãÂ∫èÊ∏ÖÂçï4-14‰∏≠ÁöÑListHelperÔºå‰ΩÜËøôÁßçÊñπÂºè‰∏çÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ„ÄÇÂøÖÈ°ª‰ΩøListÂú®ÂÆûÁé∞ÂÆ¢Êà∑Á´ØÂä†ÈîÅÊàñÂ§ñÈÉ®Âä†ÈîÅÊó∂‰ΩøÁî®Âêå‰∏Ä‰∏™ÈîÅÔºåÂ¶ÇÁ®ãÂ∫èÊ∏ÖÂçï4-15‰∏≠ÁöÑListHelper„ÄÇ Á®ãÂ∫èÊ∏ÖÂçï4-14 ÈùûÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ‚ÄúËã•Ê≤°ÊúâÂàôÊ∑ªÂä†‚ÄùÔºà‰∏çË¶ÅËøô‰πàÂÅöÔºâ 12345678910111213141516@NotThreadSafepublic class ListHelper&lt;E&gt; &#123; public List&lt;E&gt; list = Collections.synchronizedList(new ArrayList&lt;&gt;()); ... // List‰ΩøÁî®ÁöÑÈîÅÂπ∂‰∏çÊòØListHelper‰∏äÁöÑÈîÅ public synchronized boolean putIfAbsent(E x) &#123; boolean absent = !list.contains(x); if (absent) &#123; list.add(x); &#125; return absent; &#125;&#125; Á®ãÂ∫èÊ∏ÖÂçï4-15 ÈÄöËøáÂÆ¢Êà∑Á´ØÂä†ÈîÅÊù•ÂÆûÁé∞‚ÄúÂ¶ÇÊ≤°ÊúâÂàôÊ∑ªÂä†‚Äù 123456789101112131415161718@ThreadSafepublic class ListHelper&lt;E&gt; &#123; public List&lt;E&gt; list = Collections.synchronizedList(new ArrayList&lt;&gt;()); ... // ListHelper‰ΩøÁî®ÁöÑÈîÅ‰∏éList‰ΩøÁî®ÁöÑÊòØÂêå‰∏Ä‰∏™ÈîÅ public boolean putIfAbsent(E x) &#123; synchronized (list) &#123; boolean absent = !list.contains(x); if (absent) &#123; list.add(x); &#125; return absent; &#125; &#125;&#125; ÁªÑÂêàÊõ¥Â•ΩÁöÑÊñπÊ≥ïÊòØÁªÑÂêà„ÄÇÂ¶ÇÁ®ãÂ∫èÊ∏ÖÂçï4-16‰∏≠ÁöÑImprovedList 1234567891011121314151617181920212223@ThreadSafepublic class ImprovedList&lt;T&gt; implements List&lt;T&gt; &#123; private final List&lt;T&gt; list; public ImprovedList(List&lt;T&gt; list) &#123; this.list = list; &#125; public synchronized boolean putIfAbsent(T x) &#123; boolean contains = list.contains(x); if (!contains) &#123; list.add(x); &#125; return contains; &#125; public synchronized void clear() &#123; list.clear(); &#125; // ... ÊåâÁÖßÁ±ª‰ººÁöÑÊñπÂºèÂßîÊâòListÁöÑÂÖ∂‰ªñÊñπÊ≥ï&#125;]]></content>
      <categories>
        <category>Java - Â§öÁ∫øÁ®ã - Âπ∂ÂèëÂü∫Á°Ä</category>
      </categories>
      <tags>
        <tag>Â§öÁ∫øÁ®ã</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[„ÄêJavaÂπ∂ÂèëÂü∫Á°Ä„Äë‚Äî‚ÄîÂØπË±°ÂÖ±‰∫´]]></title>
    <url>%2F2018%2F08%2F13%2Fthread%2F%E3%80%90Java%E5%B9%B6%E5%8F%91%E5%9F%BA%E7%A1%80%E3%80%91%E2%80%94%E2%80%94%E5%AF%B9%E8%B1%A1%E5%85%B1%E4%BA%AB%2F</url>
    <content type="text"><![CDATA[Ë¶ÅÁºñÂÜôÊ≠£Á°ÆÁöÑÂπ∂ÂèëÁ®ãÂ∫èÔºåÂÖ≥ÈîÆÈóÆÈ¢òÂú®‰∫éÔºöÂú®ËÆøÈóÆÂÖ±‰∫´ÁöÑÂèØÂèòÁä∂ÊÄÅÊó∂ÈúÄË¶ÅËøõË°åÊ≠£Á°ÆÁöÑÁÆ°ÁêÜ„ÄÇ „ÄêJavaÂπ∂ÂèëÂü∫Á°Ä„Äë‚Äî‚ÄîÁ∫øÁ®ãÂÆâÂÖ®ÊÄß ‰ªãÁªç‰∫ÜÂ¶Ç‰ΩïÈÄöËøáÂêåÊ≠•Êù•ÈÅøÂÖçÂ§ö‰∏™Á∫øÁ®ãÂú®Âêå‰∏ÄÊó∂ÂàªËÆøÈóÆÁõ∏ÂêåÁöÑÊï∞ÊçÆÔºåËÄåÊú¨Á´†Â∞Ü‰ªãÁªçÂ¶Ç‰ΩïÂÖ±‰∫´ÂíåÂèëÂ∏ÉÂØπË±°Ôºå‰ªéËÄå‰ΩøÂÆÉ‰ª¨ËÉΩÂ§üÂÆâÂÖ®Âú∞Áî±Â§ö‰∏™Á∫øÁ®ãÂêåÊó∂ËÆøÈóÆ„ÄÇËøô‰∏§Á´†ÂêàÂú®‰∏ÄËµ∑ÔºåÂ∞±ÂΩ¢Êàê‰∫ÜÊûÑÂª∫Á∫øÁ®ãÂÆâÂÖ®Á±ª‰ª•ÂèäÈÄöËøájava.util.concurrentÁ±ªÂ∫ìÊù•ÊûÑÂª∫Âπ∂ÂèëÂ∫îÁî®Á®ãÂ∫èÁöÑÈáçË¶ÅÂü∫Á°Ä„ÄÇ ÂèØËßÅÊÄßÂÖ≥ÈîÆÂ≠ósynchronize‰∏ç‰ªÖËÉΩ‰øùËØÅÂéüÂ≠êÊÄßÊàñËÄÖÁ°ÆÂÆö‚Äú‰∏¥ÁïåÂå∫‚ÄùÔºåËøòËÉΩÁ°Æ‰øùÂÜÖÂ≠òÂèØËßÅÊÄß„ÄÇ‰∏∫‰∫ÜÁ°Æ‰øùÂ§ö‰∏™Á∫øÁ®ã‰πãÈó¥ÂØπÂÜÖÂ≠òÂÜôÂÖ•Êìç‰ΩúÁöÑÂèØËßÅÊÄßÔºåÂøÖÈ°ª‰ΩøÁî®ÂêåÊ≠•Êú∫Âà∂„ÄÇ Âú®Á®ãÂ∫èÊ∏ÖÂçï3-1‰∏≠ÁöÑNoVisibilityËØ¥Êòé‰∫ÜÂΩìÂ§ö‰∏™Á∫øÁ®ãÂú®Ê≤°ÊúâÂêåÊ≠•ÁöÑÊÉÖÂÜµ‰∏ãÂÖ±‰∫´Êï∞ÊçÆÊó∂Âá∫Áé∞ÁöÑÈîôËØØ„ÄÇ Á®ãÂ∫èÊ∏ÖÂçï3-1 Âú®Ê≤°ÊúâÂêåÊ≠•ÁöÑÊÉÖÂÜµ‰∏ãÂÖ±‰∫´ÂèòÈáèÔºà‰∏çË¶ÅËøô‰πàÂÅöÔºâ1234567891011121314151617181920212223public class NoVisibility &#123; private static boolean ready; private static int number; public static void main(String[] args) throws InterruptedException &#123; //ËØªÁ∫øÁ®ã ExecutorService executorService = Executors.newSingleThreadExecutor(); //ËØª‰ªªÂä° Runnable task = () -&gt; &#123; while (!ready) &#123; Thread.yield(); &#125; System.out.println(number); executorService.shutdown(); &#125;; //ÂêØÂä®ËØªÁ∫øÁ®ã executorService.execute(task); //‰∏ªÁ∫øÁ®ãÊìç‰ΩúÊï∞ÊçÆ number = 42; ready = true; &#125;&#125; NoVisibilityÂèØËÉΩ‰ºöÊåÅÁª≠Âæ™ÁéØ‰∏ãÂéªÔºåÂõ†‰∏∫ËØªÁ∫øÁ®ãÂèØËÉΩÊ∞∏ËøúÁúã‰∏çÂà∞readyÁöÑÂÄº„ÄÇ‰∏ÄÁßçÊõ¥Â•áÊÄ™ÁöÑÁé∞Ë±°ÊòØÔºåNoVisibilityÂèØËÉΩ‰ºöËæìÂá∫0ÔºåÂõ†‰∏∫ËØªÁ∫øÁ®ãÂèØËÉΩÁúãÂà∞‰∫ÜÂÜôÂÖ•readyÁöÑÂÄºÔºå‰ΩÜÂç¥Ê≤°ÊúâÁúãÂà∞‰πãÂêéÂÜôÂÖ•numberÁöÑÂÄºÔºåËøôÁßçÁé∞Ë±°Ë¢´Áß∞‰∏∫‚ÄúÈáçÊéíÂ∫è‚Äù ÈùûÂéüÂ≠êÁöÑ64‰ΩçÊìç‰ΩúÊúÄ‰ΩéÂÆâÂÖ®ÊÄß‰øùËØÅÔºöÂΩìÁ∫øÁ®ãÂú®Ê≤°ÊúâÂêåÊ≠•ÁöÑÊÉÖÂÜµ‰∏ãËØªÂèñÂèòÈáèÊó∂ÔºåÂèØËÉΩ‰ºöÂæóÂà∞‰∏Ä‰∏™Â§±ÊïàÂÄºÔºå‰ΩÜËá≥Â∞ëËøô‰∏™ÂÄºÊòØÁî±‰πãÂâçÊüê‰∏™Á∫øÁ®ãËÆæÁΩÆÁöÑÂÄºÔºåËÄå‰∏çÊòØ‰∏Ä‰∏™ÈöèÊú∫ÂÄº„ÄÇ JavaÂÜÖÂ≠òÊ®°ÂûãË¶ÅÊ±ÇÔºåÂèòÈáèÁöÑËØªÊìç‰ΩúÂíåÂÜôÂÖ•Êìç‰ΩúÈÉΩÂøÖÈ°ªÊòØÂéüÂ≠êÊìç‰ΩúÔºå‰ΩÜÂØπ‰∫éÈùûvolatileÁ±ªÂûãÁöÑlongÂíådoubleÂèòÈáèÔºåJVMÂÖÅËÆ∏Â∞Ü64‰ΩçÁöÑËØªÊìç‰ΩúÊàñÂÜôÊìç‰ΩúÂàÜËß£‰∏∫‰∏§‰∏™32‰ΩçÁöÑÊìç‰Ωú„ÄÇ Âä†ÈîÅ‰∏éÂèØËßÅÊÄßÂ¶ÇÂõæ3-1ÊâÄÁ§∫ÔºåÂä†ÈîÅÂèØ‰ª•Á°Æ‰øùÂΩìÁ∫øÁ®ãBÊâßË°åÁî±ÈîÅ‰øùÊä§ÁöÑÂêåÊ≠•‰ª£Á†ÅÂùóÊó∂ÔºåÂèØ‰ª•ÁúãÂà∞Á∫øÁ®ãA‰πãÂâçÂú®Âêå‰∏Ä‰∏™ÂêåÊ≠•‰ª£Á†ÅÂùó‰∏≠ÁöÑÊâÄÊúâÊìç‰ΩúÁªìÊûú„ÄÇÂ¶ÇÊûúÊ≤°ÊúâÂêåÊ≠•ÔºåÈÇ£‰πàÂ∞±Êó†Ê≥ïÂÆûÁé∞‰∏äËø∞‰øùËØÅ„ÄÇ Âõæ3-1 ÂêåÊ≠•ÁöÑÂèØËßÅÊÄß‰øùËØÅÂä†ÈîÅÁöÑÂê´‰πâ‰∏ç‰ªÖ‰ªÖÂ±ÄÈôê‰∫é‰∫íÊñ•Ë°å‰∏∫ÔºåËøòÂåÖÊã¨ÂÜÖÂ≠òÂèØËßÅÊÄß„ÄÇ‰∏∫‰∫ÜÁ°Æ‰øùÊâÄÊúâÁ∫øÁ®ãÈÉΩËÉΩÁúãÂà∞ÂÖ±‰∫´ÂèòÈáèÁöÑÊúÄÊñ∞ÂÄºÔºåÊâÄÊúâÊâßË°åËØªÊìç‰ΩúÊàñËÄÖÂÜôÊìç‰ΩúÁöÑÁ∫øÁ®ãÈÉΩÂøÖÈ°ªÂú®Âêå‰∏Ä‰∏™ÈîÅ‰∏äÂêåÊ≠•„ÄÇ VolatileÂèòÈáèvolatileÂèòÈáè‰∏äÁöÑÊìç‰Ωú‰∏ç‰ºö‰∏éÂÖ∂‰ªñÂÜÖÂ≠òÊìç‰Ωú‰∏ÄËµ∑ÈáçÊéíÂ∫èÔºåÂΩìÁ∫øÁ®ãAÈ¶ñÂÖàÂÜôÂÖ•‰∏Ä‰∏™volatileÂèòÈáèÂπ∂‰∏îÁ∫øÁ®ãBÈöèÂêéËØªÂèñËØ•ÂèòÈáèÊó∂ÔºåÂú®ÂÜôÂÖ•volatileÂèòÈáè‰πãÂâçÂØπAÂèØËßÅÁöÑÊâÄÊúâÂèòÈáèÁöÑÂÄºÔºåÂú®BËØªÂèñ‰∫ÜvolatileÂèòÈáèÂêéÔºåÂØπB‰πüÊòØÂèØËßÅÁöÑ„ÄÇÂõ†Ê≠§Ôºå‰ªéÂÜÖÂ≠òÂèØËßÅÊÄßÁöÑËßíÂ∫¶Êù•ÁúãÔºåÂÜôÂÖ•volatileÂèòÈáèÁõ∏ÂΩì‰∫éÈÄÄÂá∫ÂêåÊ≠•‰ª£Á†ÅÂùóÔºåËÄåËØªÂèñvolatileÂèòÈáèÂ∞±Áõ∏ÂΩì‰∫éËøõÂÖ•ÂêåÊ≠•‰ª£Á†ÅÂùó„ÄÇ Âä†ÈîÅÊú∫Âà∂Êó¢ÂèØ‰ª•Á°Æ‰øùÂèØËßÅÊÄßÂèàÂèØ‰ª•Á°Æ‰øùÂéüÂ≠êÊÄßÔºåËÄåvolatileÂèòÈáèÂè™ËÉΩÁ°Æ‰øùÂèØËßÅÊÄß„ÄÇ ÂΩì‰∏î‰ªÖÂΩìÊª°Ë∂≥‰ª•‰∏ãÊâÄÊúâÊù°‰ª∂Êó∂ÔºåÊâçÂ∫îËØ•‰ΩøÁî®volatileÂèòÈáèÔºö ÂØπÂèòÈáèÁöÑÂÜôÂÖ•Êìç‰Ωú‰∏ç‰æùËµñÂèòÈáèÁöÑÂΩìÂâçÂÄºÔºåÊàñËÄÖ‰Ω†ËÉΩÁ°Æ‰øùÂè™ÊúâÂçï‰∏™Á∫øÁ®ãÊõ¥Êñ∞ÂèòÈáèÁöÑÂÄº ËØ•ÂèòÈáè‰∏ç‰ºö‰∏éÂÖ∂‰ªñÁä∂ÊÄÅÂèòÈáè‰∏ÄËµ∑Á∫≥ÂÖ•‰∏çÂèòÊÄßÊù°‰ª∂‰∏≠ Âú®ËÆøÈóÆÂèòÈáèÊó∂‰∏çÈúÄË¶ÅÂä†ÈîÅ volatileÂèòÈáèÁöÑÊ≠£Á°Æ‰ΩøÁî®ÊñπÂºèÂåÖÊã¨ÔºöÁ°Æ‰øùÂÆÉ‰ª¨Ëá™Ë∫´Áä∂ÊÄÅÁöÑÂèØËßÅÊÄßÔºåÁ°Æ‰øùÂÆÉ‰ª¨ÊâÄÂºïÁî®ÂØπË±°ÁöÑÁä∂ÊÄÅÁöÑÂèØËßÅÊÄßÔºå‰ª•ÂèäÊ†áËØÜ‰∏Ä‰∫õÈáçË¶ÅÁöÑÁ®ãÂ∫èÁîüÂëΩÂë®Êúü‰∫ã‰ª∂ÁöÑÂèëÁîü(‰æãÂ¶ÇÔºåÂàùÂßãÂåñÊàñÂÖ≥Èó≠)„ÄÇÁ®ãÂ∫èÊ∏ÖÂçï3-4ÁªôÂá∫‰∫ÜvolatileÂèòÈáèÁöÑ‰∏ÄÁßçÂÖ∏ÂûãÁî®Ê≥ïÔºöÊ£ÄÊü•Êüê‰∏™Áä∂ÊÄÅÊ†áËÆ∞‰ª•Âà§Êñ≠ÊòØÂê¶ÈÄÄÂá∫Âæ™ÁéØ„ÄÇ Á®ãÂ∫èÊ∏ÖÂçï3-4 Êï∞ÁªµÁæä12345volatile boolean asleep;... while (!asleep) &#123; countSomeSheep(); &#125; volatileÂèòÈáèÈÄöÂ∏∏Áî®ÂÅöÊüê‰∏™Êìç‰ΩúÂÆåÊàê„ÄÅÂèëÁîü‰∏≠Êñ≠ÊàñËÄÖÁä∂ÊÄÅÊ†áÂøóÔºå‰æãÂ¶ÇÁ®ãÂ∫èÊ∏ÖÂçï3-4‰∏≠ÁöÑasleepÊ†áÂøó„ÄÇ ÂèëÂ∏É‰∏éÈÄ∏Âá∫‚ÄúÂèëÂ∏É‚Äù‰∏Ä‰∏™ÂØπË±°Ôºö‰ΩøÂØπË±°ËÉΩÂ§üÂú®ÂΩìÂâç‰ΩúÁî®Âüü‰πãÂ§ñÁöÑ‰ª£Á†Å‰∏≠‰ΩøÁî®„ÄÇ ‚ÄúÈÄ∏Âá∫‚Äù‰∏Ä‰∏™ÂØπË±°ÔºöÊüê‰∏™‰∏çÂ∫îËØ•ÂèëÂ∏ÉÁöÑÂØπË±°Ë¢´ÂèëÂ∏É‰∫Ü„ÄÇ Â¶ÇÁ®ãÂ∫èÊ∏ÖÂçï3-5ÊâÄÁ§∫ÔºåÁªôÂá∫‰∫ÜÂèëÂ∏ÉÂØπË±°ÁöÑÊñπÂºè„ÄÇ Á®ãÂ∫èÊ∏ÖÂçï3-5 ÂèëÂ∏ÉÂØπË±°ÁöÑÊñπÂºè123456789101112131415161718192021222324252627282930313233// 1 Â∞ÜÊåáÂêëËØ•ÂØπË±°ÁöÑÂºïÁî®‰øùÂ≠òÂà∞ÂÖ∂‰ªñ‰ª£Á†ÅÂèØ‰ª•ËÆøÈóÆÁöÑÂú∞Êñπpublic static Set&lt;Secret&gt; knownSecrets;public void initialize() &#123; knownSecrets = new HashSet&lt;&gt;();&#125;// 2 Âú®Êüê‰∏Ä‰∏™ÈùûÁßÅÊúâÁöÑÊñπÊ≥ï‰∏≠ËøîÂõûËØ•ÂØπË±°ÁöÑÂºïÁî®private Set&lt;Secret&gt; knownSecrets = new HashSet&lt;&gt;();public Set&lt;Secret&gt; getKnownSecrets() &#123; return knownSecrets;&#125;// 3 Â∞ÜÂØπË±°ÁöÑÂºïÁî®‰º†ÈÄíÂà∞ÂÖ∂‰ªñÁ±ªÁöÑÊñπÊ≥ï‰∏≠private Set&lt;Secret&gt; knownSecrets;public void setKnownSecrets(Set&lt;Secret&gt; knownSecrets) &#123; this.knownSecrets = knownSecrets;&#125;// 4 ÊúÄÂêé‰∏ÄÁßçÂèëÂ∏ÉÂØπË±°ÊàñÂÖ∂ÂÜÖÈÉ®Áä∂ÊÄÅÁöÑÊú∫Âà∂Â∞±ÊòØÂèëÂ∏É‰∏Ä‰∏™ÂÜÖÈÉ®Á±ªÁöÑÂÆû‰æãpublic class ThisEscape &#123; public ThisEscape(EventSource source) &#123; // ÂΩìThisEscapeÂèëÂ∏ÉEventListenerÊó∂Ôºå‰πüÈöêÂê´Âú∞ÂèëÂ∏É‰∫ÜThisEscapeÂÆû‰æãÊú¨Ë∫´Ôºå // Âõ†‰∏∫Âú®Ëøô‰∏™ÂÜÖÈÉ®Á±ªÁöÑÂÆû‰æã‰∏≠ÂåÖÂê´‰∫ÜÂØπThisEscapeÂÆû‰æãÁöÑÈöêÂê´ÂºïÁî® source.registerListener(new EventListener() &#123; public void onEvent(Event e) &#123; doSomething(e); &#125; &#125;); &#125;&#125; ÂΩìÂèëÂ∏ÉÊüê‰∏™ÂØπË±°Êó∂ÔºåÂèØËÉΩ‰ºöÈó¥Êé•Âú∞ÂèëÂ∏ÉÂÖ∂‰ªñÂØπË±°Ôºà‰æãÂ¶ÇÔºåknownSecretsÂØπË±°ÈáåSecretÂÆû‰æã‰ºöË¢´Èó¥Êé•Âú∞ÂèëÂ∏ÉÔºõÂú®ËØ•ÂØπË±°ÁöÑÈùûÁßÅÊúâÂüü‰∏≠ÂºïÁî®ÁöÑÊâÄÊúâÂØπË±°ÂêåÊ†∑‰ºöË¢´ÂèëÂ∏ÉÔºâ„ÄÇ‰∏ÄËà¨Êù•ËØ¥ÔºåÂ¶ÇÊûú‰∏Ä‰∏™Â∑≤ÁªèÂèëÂ∏ÉÁöÑÂØπË±°ËÉΩÂ§üÈÄöËøáÈùûÁßÅÊúâÁöÑÂèòÈáèÂºïÁî®ÂíåÊñπÊ≥ïË∞ÉÁî®Âà∞ËææÂÖ∂‰ªñÂØπË±°ÔºåÈÇ£‰πàËøô‰∫õÂØπË±°‰πü‰ºöË¢´ÂèëÂ∏É„ÄÇ ÂÆâÂÖ®ÁöÑÂØπË±°ÊûÑÈÄ†ËøáÁ®ãÂΩì‰∏î‰ªÖÂΩìÂØπË±°ÁöÑÊûÑÈÄ†ÂáΩÊï∞ËøîÂõûÊó∂ÔºåÂØπË±°ÊâçÂ§Ñ‰∫éÂèØÈ¢ÑÊµãÁöÑÂíå‰∏ÄËá¥ÁöÑÁä∂ÊÄÅ„ÄÇÂõ†Ê≠§ÔºåÂΩì‰ªéÂØπË±°ÁöÑÊûÑÈÄ†ÂáΩÊï∞‰∏≠ÂèëÂ∏ÉÂØπË±°Êó∂ÔºåÂè™ÊòØÂèëÂ∏É‰∫Ü‰∏Ä‰∏™Â∞öÊú™ÊûÑÈÄ†ÂÆåÊàêÁöÑÂØπË±°„ÄÇÂç≥‰ΩøÂèëÂ∏ÉÂØπË±°ÁöÑËØ≠Âè•‰Ωç‰∫éÊûÑÈÄ†ÂáΩÊï∞ÁöÑÊúÄÂêé‰∏ÄË°å‰πüÊòØÂ¶ÇÊ≠§„ÄÇÂ¶ÇÊûúthisÂºïÁî®Âú®ÊûÑÈÄ†ËøáÁ®ã‰∏≠ÈÄ∏Âá∫ÔºåÈÇ£‰πàËøôÁßçÂØπË±°Â∞±Ë¢´ËÆ§‰∏∫ÊòØ‰∏çÊ≠£Á°ÆÊûÑÈÄ†„ÄÇ Âú®ÊûÑÈÄ†ËøáÁ®ã‰∏≠‰ΩøthisÂºïÁî®ÈÄ∏Âá∫ÁöÑÂ∏∏ËßÅÈîôËØØÊòØÔºö1.Âú®ÊûÑÈÄ†ÂáΩÊï∞‰∏≠ÂêØÂä®‰∏Ä‰∏™Á∫øÁ®ãÔºå2.Âú®ÊûÑÈÄ†ÂáΩÊï∞‰∏≠Ë∞ÉÁî®‰∏Ä‰∏™ÂèØÊîπÂÜôÁöÑÂÆû‰æãÊñπÊ≥ï(Êó¢‰∏çÊòØÁßÅÊúâ[private]ÊñπÊ≥ï‰πü‰∏çÊòØÁªàÁªì[final]ÊñπÊ≥ï)„ÄÇ Á∫øÁ®ãÂ∞ÅÈó≠Á∫øÁ®ãÂ∞ÅÈó≠Ôºö‰ªÖÂú®ÂçïÁ∫øÁ®ãÂÜÖËÆøÈóÆÊï∞ÊçÆÔºàÂ§öÁ∫øÁ®ã‰πãÈó¥ÁöÑËÆøÈóÆÊòØÈÄöËøáÊñπÊ≥ï‰º†ÈÄíÔºâ„ÄÇ ÂΩìÊüê‰∏™ÂØπË±°Â∞ÅÈó≠Âú®‰∏Ä‰∏™Á∫øÁ®ã‰∏≠Êó∂ÔºåËøôÁßçÁî®Ê≥ïÂ∞ÜËá™Âä®ÂÆûÁé∞Á∫øÁ®ãÂÆâÂÖ®ÊÄßÔºåÂç≥‰ΩøË¢´Â∞ÅÈó≠ÁöÑÂØπË±°Êú¨Ë∫´‰∏çÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ„ÄÇ Ad-Á∫øÁ®ãÂ∞ÅÈó≠Ad-hocÁ∫øÁ®ãÂ∞ÅÈó≠ÊòØÊåáÔºåÁª¥Êä§Á∫øÁ®ãÂ∞ÅÈó≠ÊÄßÁöÑËÅåË¥£ÂÆåÂÖ®Áî±Á®ãÂ∫èÂÆûÁé∞Êù•ÊâøÊãÖ„ÄÇ Âú®volatileÂèòÈáè‰∏äÂ≠òÂú®‰∏ÄÁßçÁâπÊÆäÁöÑÁ∫øÁ®ãÂ∞ÅÈó≠„ÄÇÂè™Ë¶Å‰Ω†ËÉΩÁ°Æ‰øùÂè™Ë¶ÅÂçï‰∏™Á∫øÁ®ãÂØπÂÖ±‰∫´ÁöÑvolatileÂèòÈáèÊâßË°åÂÜôÂÖ•Êìç‰ΩúÔºåÈÇ£‰πàÂ∞±ÂèØ‰ª•ÂÆâÂÖ®Âú∞Âú®Ëøô‰∫õÂÖ±‰∫´ÁöÑvolatileÂèòÈáè‰∏äÊâßË°å‚ÄúËØªÂèñ-‰øÆÊîπ-ÂÜôÂÖ•‚ÄùÁöÑÊìç‰Ωú„ÄÇÂú®ËøôÁßçÊÉÖÂÜµ‰∏ãÔºåÁõ∏ÂΩì‰∫éÂ∞Ü‰øÆÊîπÊìç‰ΩúÂ∞ÅÈó≠Âú®Âçï‰∏™Á∫øÁ®ã‰∏≠‰ª•Èò≤Ê≠¢ÂèëÁîüÁ´ûÊÄÅÊù°‰ª∂ÔºåÂπ∂‰∏îvolatileÂèòÈáèÁöÑÂèØËßÅÊÄß‰øùËØÅËøòÁ°Æ‰øù‰∫ÜÂÖ∂‰ªñÁ∫øÁ®ãËÉΩÁúãÂà∞ÊúÄÊñ∞ÁöÑÂÄº„ÄÇ Ê†àÂ∞ÅÈó≠Âú®Ê†àÂ∞ÅÈó≠‰∏≠ÔºåÂè™ËÉΩÈÄöËøáÂ±ÄÈÉ®ÂèòÈáèÊâçËÉΩËÆøÈóÆÂØπË±°„ÄÇÂ±ÄÈÉ®ÂèòÈáèÁöÑÂõ∫ÊúâÂ±ûÊÄß‰πã‰∏ÄÂ∞±ÊòØÂ∞ÅÈó≠Âú®ÊâßË°åÁ∫øÁ®ã‰∏≠„ÄÇÂÆÉ‰ª¨‰Ωç‰∫éÊâßË°åÁ∫øÁ®ãÁöÑÊ†à‰∏≠ÔºåÂÖ∂‰ªñÁ∫øÁ®ãÊó†Ê≥ïËÆøÈóÆËøô‰∏™Ê†à„ÄÇ Âü∫Êú¨Á±ªÂûãÁöÑÂ±ÄÈÉ®ÂèòÈáèÂßãÁªàÂ∞ÅÈó≠Âú®Á∫øÁ®ãÂÜÖ„ÄÇÂõ†‰∏∫JavaËØ≠Ë®ÄÁöÑËØ≠‰πâËßÑÂÆö‰∫Ü‰ªª‰ΩïÊñπÊ≥ïÈÉΩÊó†Ê≥ïËé∑ÂæóÂØπÂü∫Êú¨Á±ªÂûãÁöÑÂºïÁî®„ÄÇ‰æãÂ¶ÇÁ®ãÂ∫èÊ∏ÖÂçï3-9‰∏≠loadTheArkÊñπÊ≥ïÁöÑnumPairsÔºåÊó†ËÆ∫Â¶Ç‰ΩïÈÉΩ‰∏ç‰ºöÁ†¥ÂùèÊ†àÂ∞ÅÈó≠ÊÄß„ÄÇ Á®ãÂ∫èÊ∏ÖÂçï3-9 Âü∫Êú¨Á±ªÂûãÁöÑÂ±ÄÈÉ®ÂèòÈáè‰∏éÂºïÁî®ÂèòÈáèÁöÑÁ∫øÁ®ãÂ∞ÅÈó≠ÊÄß1234567891011121314151617181920public int loadTheArk(Collection&lt;Animal&gt; candidates) &#123; SortedSet&lt;Animal&gt; animals; int numPairs = 0; Animal candidate = null; // animalsË¢´Â∞ÅÈó≠Âú®ÊñπÊ≥ï‰∏≠Ôºå‰∏çË¶Å‰ΩøÂÆÉ‰ª¨ÈÄ∏Âá∫ÔºÅ animals = new TreeSet&lt;Animal&gt;(new SpeciesGenderComparator()); animals.addAll(candidates); for (Animal a : animals) &#123; if (candidate * null || candidate.isPotentialMate(a)) &#123; candidate = a; &#125; else &#123; ark.load(new AnimalPair(candidate, a)); ++numPairs; candidate = null; &#125; &#125; // numPairsÊòØÂü∫Êú¨Á±ªÂûãÁöÑÂèòÈáèÔºå‰∏ç‰ºöÈÄ∏Âá∫ return numPairs;&#125; Âú®Áª¥Êä§ÂØπË±°ÂºïÁî®ÁöÑÊ†àÂ∞ÅÈó≠ÊÄßÊó∂ÔºåÁ®ãÂ∫èÂëòÈúÄË¶ÅÂ§öÂÅö‰∏Ä‰∫õÂ∑•‰Ωú‰ª•Á°Æ‰øùË¢´ÂºïÁî®ÁöÑÂØπË±°‰∏ç‰ºöÈÄ∏Âá∫„ÄÇ‰æãÂ¶ÇÁ®ãÂ∫èÊ∏ÖÂçï3-9‰∏≠loadTheArkÊñπÊ≥ïÁöÑanimalsÔºåÊòØ‰∏çËÉΩÈÄ∏Âá∫ÁöÑÔºåÂê¶ÂàôÊ†àÂ∞ÅÈó≠ÊÄßÂ∞ÜË¢´Á†¥Âùè„ÄÇ ThreadLocalÁ±ªÁª¥ÊåÅÁ∫øÁ®ãÂ∞ÅÈó≠ÊÄßÁöÑ‰∏ÄÁßçÊõ¥ËßÑËåÉÊñπÊ≥ïÊòØ‰ΩøÁî®ThreadLocal„ÄÇThreadLocalÊèê‰æõ‰∫Üget‰∏ésetÁ≠âËÆøÈóÆÊé•Âè£ÊàñÊñπÊ≥ïÔºåËøô‰∫õÊñπÊ≥ï‰∏∫ÊØè‰∏™‰ΩøÁî®ËØ•ÂèòÈáèÁöÑÁ∫øÁ®ãÈÉΩÂ≠òÊúâ‰∏Ä‰ªΩÁã¨Á´ãÁöÑÂâØÊú¨ÔºåÂõ†Ê≠§getÊÄªÊòØËøîÂõûÁî±ÂΩìÂâçÊâßË°åÁ∫øÁ®ãÂú®Ë∞ÉÁî®setÊó∂ËÆæÁΩÆÁöÑÊúÄÊñ∞ÂÄº„ÄÇ ‰∏çÂèòÊÄß‰∏çÂèØÂèòÂØπË±°Êª°Ë∂≥ÂêåÊ≠•ÈúÄÊ±ÇÁöÑÂè¶‰∏ÄÁßçÊñπÊ≥ïÊòØ‰ΩøÁî®‰∏çÂèØÂèòÂØπË±°„ÄÇ ‰∏çÂèØÂèòÂØπË±°‰∏ÄÂÆöÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ„ÄÇ ÂΩìÊª°Ë∂≥‰ª•‰∏ãÊù°‰ª∂Êó∂ÔºåÂØπË±°ÊâçÊòØ‰∏çÂèØÂèòÁöÑÔºö ÂØπË±°ÂàõÂª∫‰ª•ÂêéÂÖ∂Áä∂ÊÄÅÂ∞±‰∏çËÉΩ‰øÆÊîπ ÂØπË±°ÁöÑÊâÄÊúâÂüüÈÉΩÊòØfinalÁ±ªÂûã ÂØπË±°ÊòØÊ≠£Á°ÆÂàõÂª∫ÁöÑÔºàÂú®ÂØπË±°ÁöÑÂàõÂª∫ÊúüÈó¥ÔºåthisÂºïÁî®Ê≤°ÊúâÈÄ∏Âá∫Ôºâ ‰∏çÂèØÂèòÊÄßÂπ∂‰∏çÁ≠â‰∫éÂ∞ÜÂØπË±°‰∏≠ÊâÄÊúâÁöÑÂüüÈÉΩÂ£∞Êòé‰∏∫finalÁ±ªÂûãÔºåÂç≥‰ΩøÂØπË±°‰∏≠ÊâÄÊúâÁöÑÂüüÈÉΩÊòØfinalÁ±ªÂûãÁöÑÔºåËøô‰∏™ÂØπË±°‰πü‰ªçÁÑ∂ÊòØÂèØÂèòÁöÑÔºåÂõ†‰∏∫Âú®finalÁ±ªÂûãÁöÑÂüü‰∏≠ÂèØ‰ª•‰øùÂ≠òÂØπÂèØÂèòÂØπË±°ÁöÑÂºïÁî®„ÄÇ FinalÂüüfinalÂüüËÉΩÁ°Æ‰øùÂàùÂßãÂåñËøáÁ®ãÁöÑÂÆâÂÖ®ÊÄß„ÄÇ Á§∫‰æãÔºö‰ΩøÁî®VolatileÁ±ªÂûãÊù•ÂèëÂ∏É‰∏çÂèØÂèòÂØπË±°ÊØèÂΩìÈúÄË¶Å‰∏ÄÁªÑÁõ∏ÂÖ≥Êï∞ÊçÆ‰ª•ÂéüÂ≠êÊñπÂºèÊâßË°åÊüê‰∏™Êìç‰ΩúÊó∂ÔºåÂ∞±ÂèØ‰ª•ËÄÉËôëÂàõÂª∫‰∏Ä‰∏™‰∏çÂèØÂèòÁöÑÁ±ªÊù•ÂåÖÂê´Ëøô‰∫õÊï∞ÊçÆÔºå‰æãÂ¶ÇÁ®ãÂ∫èÊ∏ÖÂçï3-12‰∏≠ÁöÑOneValueCache„ÄÇ Á®ãÂ∫èÊ∏ÖÂçï3-12 ÂØπÊï∞ÂÄºÂèäÂÖ∂Âõ†Êï∞ÂàÜËß£ÁªìÊûúËøõË°åÁºìÂ≠òÁöÑ‰∏çÂèØÂèòÂÆπÂô®Á±ª1234567891011121314151617public class OneValueCache &#123; private final BigInteger lastNumber; private final BigInteger[] lastFactors; public OneValueCache(BigInteger lastNumber, BigInteger[] factors) &#123; this.lastNumber = lastNumber; this.lastFactors = Arrays.copyOf(factors, factors.length); &#125; public BigInteger[] getFactors(BigInteger i) &#123; if (lastNumber * null || !lastFactors.equals(i)) &#123; return null; &#125; return Arrays.copyOf(lastFactors, lastFactors.length); &#125;&#125; ÂØπ‰∫éÂú®ËÆøÈóÆÂíåÊõ¥Êñ∞Â§ö‰∏™Áõ∏ÂÖ≥ÂèòÈáèÊó∂Âá∫Áé∞ÁöÑÁ´ûÊÄÅÊù°‰ª∂ÈóÆÈ¢òÔºåÂèØ‰ª•ÈÄöËøáÂ∞ÜËøô‰∫õÂèòÈáèÂÖ®ÈÉ®‰øùÂ≠òÂú®‰∏Ä‰∏™‰∏çÂèØÂèòÂØπË±°‰∏≠Êù•Ê∂àÈô§„ÄÇÂ¶ÇÊûúÊòØ‰∏Ä‰∏™ÂèØÂèòÁöÑÂØπË±°ÔºåÈÇ£‰πàÂ∞±ÂøÖÈ°ª‰ΩøÁî®ÈîÅÊù•Á°Æ‰øùÂéüÂ≠êÊÄß„ÄÇ Á®ãÂ∫èÊ∏ÖÂçï3-13‰∏≠ÔºåÈÄöËøá‰ΩøÁî®ÂåÖÂê´Â§ö‰∏™Áä∂ÊÄÅÂèòÈáèÁöÑÂÆπÂô®ÂØπË±°Êù•Áª¥ÊåÅ‰∏çÂèòÊÄßÊù°‰ª∂ÔºåÂπ∂‰ΩøÁî®‰∏Ä‰∏™volatileÁ±ªÂûãÁöÑÂºïÁî®Êù•Á°Æ‰øùÂèØËßÅÊÄßÔºå‰ΩøÂæóVolatileCachedFactorizerÂú®Ê≤°ÊúâÊòæÁ§∫Âú∞‰ΩøÁî®ÈîÅÁöÑÊÉÖÂÜµ‰∏ã‰ªçÁÑ∂ÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ„ÄÇ Á®ãÂ∫èÊ∏ÖÂçï3-13 ‰ΩøÁî®ÊåáÂêë‰∏çÂèØÂèòÂÆπÂô®ÂØπË±°ÁöÑvolatileÁ±ªÂûãÂºïÁî®‰ª•ÁºìÂ≠òÊúÄÊñ∞ÁöÑÁªìÊûú1234567891011121314public class VolatileCachedFactorizer implements Servlet &#123; private volatile OneValueCache cache = new OneValueCache(null, null); public void service(ServletRequest req, ServletResponse resp) &#123; BigInteger i = extractFromRequest(req); BigInteger[] factors = cache.getFactors(i); if (factors * null) &#123; factors = factor(i); cache = new OneValueCache(i, factors); &#125; encodeIntoResponse(resp, factors); &#125;&#125; ÂÆâÂÖ®ÂèëÂ∏ÉË¶ÅÂÆâÂÖ®ÁöÑÂèëÂ∏É‰∏Ä‰∏™ÂØπË±°ÔºåÂØπË±°ÁöÑÂºïÁî®‰ª•ÂèäÂØπË±°ÁöÑÁä∂ÊÄÅÂøÖÈ°ªÂêåÊó∂ÂØπÂÖ∂‰ªñÁ∫øÁ®ãÂèØËßÅ„ÄÇ ‰∏Ä‰∏™Ê≠£Á°ÆÊûÑÈÄ†ÁöÑÂØπË±°ÂèØ‰ª•ÈÄöËøá‰ª•‰∏ãÊñπÂºèÊù•ÂÆâÂÖ®Âú∞ÂèëÂ∏ÉÔºö Âú®ÈùôÊÄÅÂàùÂßãÂåñÂáΩÊï∞‰∏≠ÂàùÂßãÂåñ‰∏Ä‰∏™ÂØπË±°ÂºïÁî® Â∞ÜÂØπË±°ÁöÑÂºïÁî®‰øùÂ≠òÂà∞volatileÁ±ªÂûãÁöÑÂüüÊàñËÄÖAtomicReferanceÂØπË±°‰∏≠ Â∞ÜÂØπË±°ÁöÑÂºïÁî®‰øùÂ≠òÂà∞Êüê‰∏™Ê≠£Á°ÆÊûÑÈÄ†ÂØπË±°ÁöÑfinalÁ±ªÂûãÂüü‰∏≠ Â∞ÜÂØπË±°ÁöÑÂºïÁî®‰øùÂ≠òÂà∞Áî±‰∏Ä‰∏™ÈîÅ‰øùÊä§ÁöÑÂüü‰∏≠ ÂØπË±°ÁöÑÂèëÂ∏ÉÈúÄÊ±ÇÂèñÂÜ≥‰∫éÂÆÉÁöÑÂèØÂèòÊÄßÔºö ‰∏çÂèØÂèòÂØπË±°ÂèØ‰ª•ÈÄöËøá‰ªªÊÑèÊú∫Âà∂Êù•ÂèëÂ∏É ‰∫ãÂÆû‰∏çÂèØÂèòÂØπË±°ÂøÖÈ°ªÈÄöËøáÂÆâÂÖ®ÊñπÂºèÊù•ÂèëÂ∏É ÂèØÂèòÂØπË±°ÂøÖÈ°ªÈÄöËøáÂÆâÂÖ®ÊñπÂºèÊù•ÂèëÂ∏ÉÔºåÂπ∂‰∏îÂøÖÈ°ªÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÊàñËÄÖÁî±Êüê‰∏™ÈîÅ‰øùÊä§Ëµ∑Êù• ÈùôÊÄÅÂàùÂßãÂåñÂô®Áî±JVMÂú®Á±ªÁöÑÂàùÂßãÂåñÈò∂ÊÆµÊâßË°å„ÄÇÁî±‰∫éJVMÂÜÖÈÉ®Â≠òÂú®ÁùÄÂêåÊ≠•Êú∫Âà∂ÔºåÂõ†Ê≠§ÈÄöËøáËøôÁßçÊñπÂºèÂàùÂßãÂåñÁöÑ‰ªª‰ΩïÂØπË±°ÈÉΩÂèØ‰ª•Ë¢´ÂÆâÂÖ®Âú∞ÂèëÂ∏É„ÄÇ‰æãÂ¶ÇÔºöpublic static Holder holder = new Holder(42)„ÄÇ]]></content>
      <categories>
        <category>Java - Â§öÁ∫øÁ®ã - Âπ∂ÂèëÂü∫Á°Ä</category>
      </categories>
      <tags>
        <tag>Â§öÁ∫øÁ®ãÁ∫øÁ®ã</tag>
      </tags>
  </entry>
</search>
